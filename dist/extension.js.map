{"version":3,"file":"extension.js","mappings":"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","sources":[".././node_modules/@vscode/debugadapter/lib/debugSession.js",".././node_modules/@vscode/debugadapter/lib/handles.js",".././node_modules/@vscode/debugadapter/lib/internalLogger.js",".././node_modules/@vscode/debugadapter/lib/logger.js",".././node_modules/@vscode/debugadapter/lib/loggingDebugSession.js",".././node_modules/@vscode/debugadapter/lib/main.js",".././node_modules/@vscode/debugadapter/lib/messages.js",".././node_modules/@vscode/debugadapter/lib/protocol.js",".././node_modules/@vscode/debugadapter/lib/runDebugAdapter.js",".././node_modules/await-notify/index.js",".././node_modules/emcellent/index.js",".././node_modules/emcellent/lib/parse.js",".././node_modules/emcellent/lib/render.js",".././src/extension.ts",".././src/language-definitions.ts",".././src/mumpsAutospace.ts",".././src/mumpsCompExp.ts",".././src/mumpsCompletionItemProvider.ts",".././src/mumpsConfigurationProvider.ts",".././src/mumpsConnect.ts",".././src/mumpsDebug.ts",".././src/mumpsDefinitionProvider.ts",".././src/mumpsDiagnosticsProvider.ts",".././src/mumpsDocumentSymbolProvider.ts",".././src/mumpsDocumenter.ts",".././src/mumpsEvalutableExpressionProvider.ts",".././src/mumpsFormattingHelpProvider.ts",".././src/mumpsHighlighter.ts",".././src/mumpsHoverProvider.ts",".././src/mumpsLineParser.ts",".././src/mumpsReferenceProvider.ts",".././src/mumpsSignatureHelpProvider.ts",".././src/mumpsTokenData.ts","../external commonjs \"vscode\"","../external node-commonjs \"events\"","../external node-commonjs \"fs\"","../external node-commonjs \"net\"","../external node-commonjs \"path\"","../external node-commonjs \"url\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DebugSession = exports.ErrorDestination = exports.MemoryEvent = exports.InvalidatedEvent = exports.ProgressEndEvent = exports.ProgressUpdateEvent = exports.ProgressStartEvent = exports.CapabilitiesEvent = exports.LoadedSourceEvent = exports.ModuleEvent = exports.BreakpointEvent = exports.ThreadEvent = exports.OutputEvent = exports.ExitedEvent = exports.TerminatedEvent = exports.InitializedEvent = exports.ContinuedEvent = exports.StoppedEvent = exports.CompletionItem = exports.Module = exports.Breakpoint = exports.Variable = exports.Thread = exports.StackFrame = exports.Scope = exports.Source = void 0;\nconst protocol_1 = require(\"./protocol\");\nconst messages_1 = require(\"./messages\");\nconst runDebugAdapter_1 = require(\"./runDebugAdapter\");\nconst url_1 = require(\"url\");\nclass Source {\n    constructor(name, path, id = 0, origin, data) {\n        this.name = name;\n        this.path = path;\n        this.sourceReference = id;\n        if (origin) {\n            this.origin = origin;\n        }\n        if (data) {\n            this.adapterData = data;\n        }\n    }\n}\nexports.Source = Source;\nclass Scope {\n    constructor(name, reference, expensive = false) {\n        this.name = name;\n        this.variablesReference = reference;\n        this.expensive = expensive;\n    }\n}\nexports.Scope = Scope;\nclass StackFrame {\n    constructor(i, nm, src, ln = 0, col = 0) {\n        this.id = i;\n        this.source = src;\n        this.line = ln;\n        this.column = col;\n        this.name = nm;\n    }\n}\nexports.StackFrame = StackFrame;\nclass Thread {\n    constructor(id, name) {\n        this.id = id;\n        if (name) {\n            this.name = name;\n        }\n        else {\n            this.name = 'Thread #' + id;\n        }\n    }\n}\nexports.Thread = Thread;\nclass Variable {\n    constructor(name, value, ref = 0, indexedVariables, namedVariables) {\n        this.name = name;\n        this.value = value;\n        this.variablesReference = ref;\n        if (typeof namedVariables === 'number') {\n            this.namedVariables = namedVariables;\n        }\n        if (typeof indexedVariables === 'number') {\n            this.indexedVariables = indexedVariables;\n        }\n    }\n}\nexports.Variable = Variable;\nclass Breakpoint {\n    constructor(verified, line, column, source) {\n        this.verified = verified;\n        const e = this;\n        if (typeof line === 'number') {\n            e.line = line;\n        }\n        if (typeof column === 'number') {\n            e.column = column;\n        }\n        if (source) {\n            e.source = source;\n        }\n    }\n    setId(id) {\n        this.id = id;\n    }\n}\nexports.Breakpoint = Breakpoint;\nclass Module {\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n    }\n}\nexports.Module = Module;\nclass CompletionItem {\n    constructor(label, start, length = 0) {\n        this.label = label;\n        this.start = start;\n        this.length = length;\n    }\n}\nexports.CompletionItem = CompletionItem;\nclass StoppedEvent extends messages_1.Event {\n    constructor(reason, threadId, exceptionText) {\n        super('stopped');\n        this.body = {\n            reason: reason\n        };\n        if (typeof threadId === 'number') {\n            this.body.threadId = threadId;\n        }\n        if (typeof exceptionText === 'string') {\n            this.body.text = exceptionText;\n        }\n    }\n}\nexports.StoppedEvent = StoppedEvent;\nclass ContinuedEvent extends messages_1.Event {\n    constructor(threadId, allThreadsContinued) {\n        super('continued');\n        this.body = {\n            threadId: threadId\n        };\n        if (typeof allThreadsContinued === 'boolean') {\n            this.body.allThreadsContinued = allThreadsContinued;\n        }\n    }\n}\nexports.ContinuedEvent = ContinuedEvent;\nclass InitializedEvent extends messages_1.Event {\n    constructor() {\n        super('initialized');\n    }\n}\nexports.InitializedEvent = InitializedEvent;\nclass TerminatedEvent extends messages_1.Event {\n    constructor(restart) {\n        super('terminated');\n        if (typeof restart === 'boolean' || restart) {\n            const e = this;\n            e.body = {\n                restart: restart\n            };\n        }\n    }\n}\nexports.TerminatedEvent = TerminatedEvent;\nclass ExitedEvent extends messages_1.Event {\n    constructor(exitCode) {\n        super('exited');\n        this.body = {\n            exitCode: exitCode\n        };\n    }\n}\nexports.ExitedEvent = ExitedEvent;\nclass OutputEvent extends messages_1.Event {\n    constructor(output, category = 'console', data) {\n        super('output');\n        this.body = {\n            category: category,\n            output: output\n        };\n        if (data !== undefined) {\n            this.body.data = data;\n        }\n    }\n}\nexports.OutputEvent = OutputEvent;\nclass ThreadEvent extends messages_1.Event {\n    constructor(reason, threadId) {\n        super('thread');\n        this.body = {\n            reason: reason,\n            threadId: threadId\n        };\n    }\n}\nexports.ThreadEvent = ThreadEvent;\nclass BreakpointEvent extends messages_1.Event {\n    constructor(reason, breakpoint) {\n        super('breakpoint');\n        this.body = {\n            reason: reason,\n            breakpoint: breakpoint\n        };\n    }\n}\nexports.BreakpointEvent = BreakpointEvent;\nclass ModuleEvent extends messages_1.Event {\n    constructor(reason, module) {\n        super('module');\n        this.body = {\n            reason: reason,\n            module: module\n        };\n    }\n}\nexports.ModuleEvent = ModuleEvent;\nclass LoadedSourceEvent extends messages_1.Event {\n    constructor(reason, source) {\n        super('loadedSource');\n        this.body = {\n            reason: reason,\n            source: source\n        };\n    }\n}\nexports.LoadedSourceEvent = LoadedSourceEvent;\nclass CapabilitiesEvent extends messages_1.Event {\n    constructor(capabilities) {\n        super('capabilities');\n        this.body = {\n            capabilities: capabilities\n        };\n    }\n}\nexports.CapabilitiesEvent = CapabilitiesEvent;\nclass ProgressStartEvent extends messages_1.Event {\n    constructor(progressId, title, message) {\n        super('progressStart');\n        this.body = {\n            progressId: progressId,\n            title: title\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressStartEvent = ProgressStartEvent;\nclass ProgressUpdateEvent extends messages_1.Event {\n    constructor(progressId, message) {\n        super('progressUpdate');\n        this.body = {\n            progressId: progressId\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressUpdateEvent = ProgressUpdateEvent;\nclass ProgressEndEvent extends messages_1.Event {\n    constructor(progressId, message) {\n        super('progressEnd');\n        this.body = {\n            progressId: progressId\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressEndEvent = ProgressEndEvent;\nclass InvalidatedEvent extends messages_1.Event {\n    constructor(areas, threadId, stackFrameId) {\n        super('invalidated');\n        this.body = {};\n        if (areas) {\n            this.body.areas = areas;\n        }\n        if (threadId) {\n            this.body.threadId = threadId;\n        }\n        if (stackFrameId) {\n            this.body.stackFrameId = stackFrameId;\n        }\n    }\n}\nexports.InvalidatedEvent = InvalidatedEvent;\nclass MemoryEvent extends messages_1.Event {\n    constructor(memoryReference, offset, count) {\n        super('memory');\n        this.body = { memoryReference, offset, count };\n    }\n}\nexports.MemoryEvent = MemoryEvent;\nvar ErrorDestination;\n(function (ErrorDestination) {\n    ErrorDestination[ErrorDestination[\"User\"] = 1] = \"User\";\n    ErrorDestination[ErrorDestination[\"Telemetry\"] = 2] = \"Telemetry\";\n})(ErrorDestination = exports.ErrorDestination || (exports.ErrorDestination = {}));\n;\nclass DebugSession extends protocol_1.ProtocolServer {\n    constructor(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super();\n        const linesAndColumnsStartAt1 = typeof obsolete_debuggerLinesAndColumnsStartAt1 === 'boolean' ? obsolete_debuggerLinesAndColumnsStartAt1 : false;\n        this._debuggerLinesStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerColumnsStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerPathsAreURIs = false;\n        this._clientLinesStartAt1 = true;\n        this._clientColumnsStartAt1 = true;\n        this._clientPathsAreURIs = false;\n        this._isServer = typeof obsolete_isServer === 'boolean' ? obsolete_isServer : false;\n        this.on('close', () => {\n            this.shutdown();\n        });\n        this.on('error', (error) => {\n            this.shutdown();\n        });\n    }\n    setDebuggerPathFormat(format) {\n        this._debuggerPathsAreURIs = format !== 'path';\n    }\n    setDebuggerLinesStartAt1(enable) {\n        this._debuggerLinesStartAt1 = enable;\n    }\n    setDebuggerColumnsStartAt1(enable) {\n        this._debuggerColumnsStartAt1 = enable;\n    }\n    setRunAsServer(enable) {\n        this._isServer = enable;\n    }\n    /**\n     * A virtual constructor...\n     */\n    static run(debugSession) {\n        (0, runDebugAdapter_1.runDebugAdapter)(debugSession);\n    }\n    shutdown() {\n        if (this._isServer || this._isRunningInline()) {\n            // shutdown ignored in server mode\n        }\n        else {\n            // wait a bit before shutting down\n            setTimeout(() => {\n                process.exit(0);\n            }, 100);\n        }\n    }\n    sendErrorResponse(response, codeOrMessage, format, variables, dest = ErrorDestination.User) {\n        let msg;\n        if (typeof codeOrMessage === 'number') {\n            msg = {\n                id: codeOrMessage,\n                format: format\n            };\n            if (variables) {\n                msg.variables = variables;\n            }\n            if (dest & ErrorDestination.User) {\n                msg.showUser = true;\n            }\n            if (dest & ErrorDestination.Telemetry) {\n                msg.sendTelemetry = true;\n            }\n        }\n        else {\n            msg = codeOrMessage;\n        }\n        response.success = false;\n        response.message = DebugSession.formatPII(msg.format, true, msg.variables);\n        if (!response.body) {\n            response.body = {};\n        }\n        response.body.error = msg;\n        this.sendResponse(response);\n    }\n    runInTerminalRequest(args, timeout, cb) {\n        this.sendRequest('runInTerminal', args, timeout, cb);\n    }\n    dispatchRequest(request) {\n        const response = new messages_1.Response(request);\n        try {\n            if (request.command === 'initialize') {\n                var args = request.arguments;\n                if (typeof args.linesStartAt1 === 'boolean') {\n                    this._clientLinesStartAt1 = args.linesStartAt1;\n                }\n                if (typeof args.columnsStartAt1 === 'boolean') {\n                    this._clientColumnsStartAt1 = args.columnsStartAt1;\n                }\n                if (args.pathFormat !== 'path') {\n                    this.sendErrorResponse(response, 2018, 'debug adapter only supports native paths', null, ErrorDestination.Telemetry);\n                }\n                else {\n                    const initializeResponse = response;\n                    initializeResponse.body = {};\n                    this.initializeRequest(initializeResponse, args);\n                }\n            }\n            else if (request.command === 'launch') {\n                this.launchRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'attach') {\n                this.attachRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'disconnect') {\n                this.disconnectRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'terminate') {\n                this.terminateRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'restart') {\n                this.restartRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setBreakpoints') {\n                this.setBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setFunctionBreakpoints') {\n                this.setFunctionBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setExceptionBreakpoints') {\n                this.setExceptionBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'configurationDone') {\n                this.configurationDoneRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'continue') {\n                this.continueRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'next') {\n                this.nextRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepIn') {\n                this.stepInRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepOut') {\n                this.stepOutRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepBack') {\n                this.stepBackRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'reverseContinue') {\n                this.reverseContinueRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'restartFrame') {\n                this.restartFrameRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'goto') {\n                this.gotoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'pause') {\n                this.pauseRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stackTrace') {\n                this.stackTraceRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'scopes') {\n                this.scopesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'variables') {\n                this.variablesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setVariable') {\n                this.setVariableRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setExpression') {\n                this.setExpressionRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'source') {\n                this.sourceRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'threads') {\n                this.threadsRequest(response, request);\n            }\n            else if (request.command === 'terminateThreads') {\n                this.terminateThreadsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'evaluate') {\n                this.evaluateRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepInTargets') {\n                this.stepInTargetsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'gotoTargets') {\n                this.gotoTargetsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'completions') {\n                this.completionsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'exceptionInfo') {\n                this.exceptionInfoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'loadedSources') {\n                this.loadedSourcesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'dataBreakpointInfo') {\n                this.dataBreakpointInfoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setDataBreakpoints') {\n                this.setDataBreakpointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'readMemory') {\n                this.readMemoryRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'writeMemory') {\n                this.writeMemoryRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'disassemble') {\n                this.disassembleRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'cancel') {\n                this.cancelRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'breakpointLocations') {\n                this.breakpointLocationsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setInstructionBreakpoints') {\n                this.setInstructionBreakpointsRequest(response, request.arguments, request);\n            }\n            else {\n                this.customRequest(request.command, response, request.arguments, request);\n            }\n        }\n        catch (e) {\n            this.sendErrorResponse(response, 1104, '{_stack}', { _exception: e.message, _stack: e.stack }, ErrorDestination.Telemetry);\n        }\n    }\n    initializeRequest(response, args) {\n        // This default debug adapter does not support conditional breakpoints.\n        response.body.supportsConditionalBreakpoints = false;\n        // This default debug adapter does not support hit conditional breakpoints.\n        response.body.supportsHitConditionalBreakpoints = false;\n        // This default debug adapter does not support function breakpoints.\n        response.body.supportsFunctionBreakpoints = false;\n        // This default debug adapter implements the 'configurationDone' request.\n        response.body.supportsConfigurationDoneRequest = true;\n        // This default debug adapter does not support hovers based on the 'evaluate' request.\n        response.body.supportsEvaluateForHovers = false;\n        // This default debug adapter does not support the 'stepBack' request.\n        response.body.supportsStepBack = false;\n        // This default debug adapter does not support the 'setVariable' request.\n        response.body.supportsSetVariable = false;\n        // This default debug adapter does not support the 'restartFrame' request.\n        response.body.supportsRestartFrame = false;\n        // This default debug adapter does not support the 'stepInTargets' request.\n        response.body.supportsStepInTargetsRequest = false;\n        // This default debug adapter does not support the 'gotoTargets' request.\n        response.body.supportsGotoTargetsRequest = false;\n        // This default debug adapter does not support the 'completions' request.\n        response.body.supportsCompletionsRequest = false;\n        // This default debug adapter does not support the 'restart' request.\n        response.body.supportsRestartRequest = false;\n        // This default debug adapter does not support the 'exceptionOptions' attribute on the 'setExceptionBreakpoints' request.\n        response.body.supportsExceptionOptions = false;\n        // This default debug adapter does not support the 'format' attribute on the 'variables', 'evaluate', and 'stackTrace' request.\n        response.body.supportsValueFormattingOptions = false;\n        // This debug adapter does not support the 'exceptionInfo' request.\n        response.body.supportsExceptionInfoRequest = false;\n        // This debug adapter does not support the 'TerminateDebuggee' attribute on the 'disconnect' request.\n        response.body.supportTerminateDebuggee = false;\n        // This debug adapter does not support delayed loading of stack frames.\n        response.body.supportsDelayedStackTraceLoading = false;\n        // This debug adapter does not support the 'loadedSources' request.\n        response.body.supportsLoadedSourcesRequest = false;\n        // This debug adapter does not support the 'logMessage' attribute of the SourceBreakpoint.\n        response.body.supportsLogPoints = false;\n        // This debug adapter does not support the 'terminateThreads' request.\n        response.body.supportsTerminateThreadsRequest = false;\n        // This debug adapter does not support the 'setExpression' request.\n        response.body.supportsSetExpression = false;\n        // This debug adapter does not support the 'terminate' request.\n        response.body.supportsTerminateRequest = false;\n        // This debug adapter does not support data breakpoints.\n        response.body.supportsDataBreakpoints = false;\n        /** This debug adapter does not support the 'readMemory' request. */\n        response.body.supportsReadMemoryRequest = false;\n        /** The debug adapter does not support the 'disassemble' request. */\n        response.body.supportsDisassembleRequest = false;\n        /** The debug adapter does not support the 'cancel' request. */\n        response.body.supportsCancelRequest = false;\n        /** The debug adapter does not support the 'breakpointLocations' request. */\n        response.body.supportsBreakpointLocationsRequest = false;\n        /** The debug adapter does not support the 'clipboard' context value in the 'evaluate' request. */\n        response.body.supportsClipboardContext = false;\n        /** The debug adapter does not support stepping granularities for the stepping requests. */\n        response.body.supportsSteppingGranularity = false;\n        /** The debug adapter does not support the 'setInstructionBreakpoints' request. */\n        response.body.supportsInstructionBreakpoints = false;\n        /** The debug adapter does not support 'filterOptions' on the 'setExceptionBreakpoints' request. */\n        response.body.supportsExceptionFilterOptions = false;\n        this.sendResponse(response);\n    }\n    disconnectRequest(response, args, request) {\n        this.sendResponse(response);\n        this.shutdown();\n    }\n    launchRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    attachRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    terminateRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    restartRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setFunctionBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setExceptionBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    configurationDoneRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    continueRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    nextRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepInRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepOutRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepBackRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    reverseContinueRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    restartFrameRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    gotoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    pauseRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    sourceRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    threadsRequest(response, request) {\n        this.sendResponse(response);\n    }\n    terminateThreadsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stackTraceRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    scopesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    variablesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setVariableRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setExpressionRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    evaluateRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepInTargetsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    gotoTargetsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    completionsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    exceptionInfoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    loadedSourcesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    dataBreakpointInfoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setDataBreakpointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    readMemoryRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    writeMemoryRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    disassembleRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    cancelRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    breakpointLocationsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setInstructionBreakpointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    /**\n     * Override this hook to implement custom requests.\n     */\n    customRequest(command, response, args, request) {\n        this.sendErrorResponse(response, 1014, 'unrecognized request', null, ErrorDestination.Telemetry);\n    }\n    //---- protected -------------------------------------------------------------------------------------------------\n    convertClientLineToDebugger(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line + 1;\n        }\n        return this._clientLinesStartAt1 ? line - 1 : line;\n    }\n    convertDebuggerLineToClient(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line - 1;\n        }\n        return this._clientLinesStartAt1 ? line + 1 : line;\n    }\n    convertClientColumnToDebugger(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column + 1;\n        }\n        return this._clientColumnsStartAt1 ? column - 1 : column;\n    }\n    convertDebuggerColumnToClient(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column - 1;\n        }\n        return this._clientColumnsStartAt1 ? column + 1 : column;\n    }\n    convertClientPathToDebugger(clientPath) {\n        if (this._clientPathsAreURIs !== this._debuggerPathsAreURIs) {\n            if (this._clientPathsAreURIs) {\n                return DebugSession.uri2path(clientPath);\n            }\n            else {\n                return DebugSession.path2uri(clientPath);\n            }\n        }\n        return clientPath;\n    }\n    convertDebuggerPathToClient(debuggerPath) {\n        if (this._debuggerPathsAreURIs !== this._clientPathsAreURIs) {\n            if (this._debuggerPathsAreURIs) {\n                return DebugSession.uri2path(debuggerPath);\n            }\n            else {\n                return DebugSession.path2uri(debuggerPath);\n            }\n        }\n        return debuggerPath;\n    }\n    //---- private -------------------------------------------------------------------------------\n    static path2uri(path) {\n        if (process.platform === 'win32') {\n            if (/^[A-Z]:/.test(path)) {\n                path = path[0].toLowerCase() + path.substr(1);\n            }\n            path = path.replace(/\\\\/g, '/');\n        }\n        path = encodeURI(path);\n        let uri = new url_1.URL(`file:`); // ignore 'path' for now\n        uri.pathname = path; // now use 'path' to get the correct percent encoding (see https://url.spec.whatwg.org)\n        return uri.toString();\n    }\n    static uri2path(sourceUri) {\n        let uri = new url_1.URL(sourceUri);\n        let s = decodeURIComponent(uri.pathname);\n        if (process.platform === 'win32') {\n            if (/^\\/[a-zA-Z]:/.test(s)) {\n                s = s[1].toLowerCase() + s.substr(2);\n            }\n            s = s.replace(/\\//g, '\\\\');\n        }\n        return s;\n    }\n    /*\n    * If argument starts with '_' it is OK to send its value to telemetry.\n    */\n    static formatPII(format, excludePII, args) {\n        return format.replace(DebugSession._formatPIIRegexp, function (match, paramName) {\n            if (excludePII && paramName.length > 0 && paramName[0] !== '_') {\n                return match;\n            }\n            return args[paramName] && args.hasOwnProperty(paramName) ?\n                args[paramName] :\n                match;\n        });\n    }\n}\nexports.DebugSession = DebugSession;\nDebugSession._formatPIIRegexp = /{([^}]+)}/g;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handles = void 0;\nclass Handles {\n    constructor(startHandle) {\n        this.START_HANDLE = 1000;\n        this._handleMap = new Map();\n        this._nextHandle = typeof startHandle === 'number' ? startHandle : this.START_HANDLE;\n    }\n    reset() {\n        this._nextHandle = this.START_HANDLE;\n        this._handleMap = new Map();\n    }\n    create(value) {\n        var handle = this._nextHandle++;\n        this._handleMap.set(handle, value);\n        return handle;\n    }\n    get(handle, dflt) {\n        return this._handleMap.get(handle) || dflt;\n    }\n}\nexports.Handles = Handles;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9oYW5kbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7O0FBRWhHLE1BQWEsT0FBTztJQU9uQixZQUFtQixXQUFvQjtRQUwvQixpQkFBWSxHQUFHLElBQUksQ0FBQztRQUdwQixlQUFVLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztRQUd6QyxJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sV0FBVyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3RGLENBQUM7SUFFTSxLQUFLO1FBQ1gsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztJQUN4QyxDQUFDO0lBRU0sTUFBTSxDQUFDLEtBQVE7UUFDckIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNuQyxPQUFPLE1BQU0sQ0FBQztJQUNmLENBQUM7SUFFTSxHQUFHLENBQUMsTUFBYyxFQUFFLElBQVE7UUFDbEMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUM7SUFDNUMsQ0FBQztDQUNEO0FBekJELDBCQXlCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5leHBvcnQgY2xhc3MgSGFuZGxlczxUPiB7XG5cblx0cHJpdmF0ZSBTVEFSVF9IQU5ETEUgPSAxMDAwO1xuXG5cdHByaXZhdGUgX25leHRIYW5kbGUgOiBudW1iZXI7XG5cdHByaXZhdGUgX2hhbmRsZU1hcCA9IG5ldyBNYXA8bnVtYmVyLCBUPigpO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihzdGFydEhhbmRsZT86IG51bWJlcikge1xuXHRcdHRoaXMuX25leHRIYW5kbGUgPSB0eXBlb2Ygc3RhcnRIYW5kbGUgPT09ICdudW1iZXInID8gc3RhcnRIYW5kbGUgOiB0aGlzLlNUQVJUX0hBTkRMRTtcblx0fVxuXG5cdHB1YmxpYyByZXNldCgpOiB2b2lkIHtcblx0XHR0aGlzLl9uZXh0SGFuZGxlID0gdGhpcy5TVEFSVF9IQU5ETEU7XG5cdFx0dGhpcy5faGFuZGxlTWFwID0gbmV3IE1hcDxudW1iZXIsIFQ+KCk7XG5cdH1cblxuXHRwdWJsaWMgY3JlYXRlKHZhbHVlOiBUKTogbnVtYmVyIHtcblx0XHR2YXIgaGFuZGxlID0gdGhpcy5fbmV4dEhhbmRsZSsrO1xuXHRcdHRoaXMuX2hhbmRsZU1hcC5zZXQoaGFuZGxlLCB2YWx1ZSk7XG5cdFx0cmV0dXJuIGhhbmRsZTtcblx0fVxuXG5cdHB1YmxpYyBnZXQoaGFuZGxlOiBudW1iZXIsIGRmbHQ/OiBUKTogVCB7XG5cdFx0cmV0dXJuIHRoaXMuX2hhbmRsZU1hcC5nZXQoaGFuZGxlKSB8fCBkZmx0O1xuXHR9XG59XG4iXX0=","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalLogger = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst logger_1 = require(\"./logger\");\n/**\n * Manages logging, whether to console.log, file, or VS Code console.\n * Encapsulates the state specific to each logging session\n */\nclass InternalLogger {\n    constructor(logCallback, isServer) {\n        /** Dispose and allow exit to continue normally */\n        this.beforeExitCallback = () => this.dispose();\n        this._logCallback = logCallback;\n        this._logToConsole = isServer;\n        this._minLogLevel = logger_1.LogLevel.Warn;\n        this.disposeCallback = (signal, code) => {\n            this.dispose();\n            // Exit with 128 + value of the signal code.\n            // https://nodejs.org/api/process.html#process_exit_codes\n            code = code || 2; // SIGINT\n            code += 128;\n            process.exit(code);\n        };\n    }\n    async setup(options) {\n        this._minLogLevel = options.consoleMinLogLevel;\n        this._prependTimestamp = options.prependTimestamp;\n        // Open a log file in the specified location. Overwritten on each run.\n        if (options.logFilePath) {\n            if (!path.isAbsolute(options.logFilePath)) {\n                this.log(`logFilePath must be an absolute path: ${options.logFilePath}`, logger_1.LogLevel.Error);\n            }\n            else {\n                const handleError = (err) => this.sendLog(`Error creating log file at path: ${options.logFilePath}. Error: ${err.toString()}\\n`, logger_1.LogLevel.Error);\n                try {\n                    await fs.promises.mkdir(path.dirname(options.logFilePath), { recursive: true });\n                    this.log(`Verbose logs are written to:\\n`, logger_1.LogLevel.Warn);\n                    this.log(options.logFilePath + '\\n', logger_1.LogLevel.Warn);\n                    this._logFileStream = fs.createWriteStream(options.logFilePath);\n                    this.logDateTime();\n                    this.setupShutdownListeners();\n                    this._logFileStream.on('error', err => {\n                        handleError(err);\n                    });\n                }\n                catch (err) {\n                    handleError(err);\n                }\n            }\n        }\n    }\n    logDateTime() {\n        let d = new Date();\n        let dateString = d.getUTCFullYear() + '-' + `${d.getUTCMonth() + 1}` + '-' + d.getUTCDate();\n        const timeAndDateStamp = dateString + ', ' + getFormattedTimeString();\n        this.log(timeAndDateStamp + '\\n', logger_1.LogLevel.Verbose, false);\n    }\n    setupShutdownListeners() {\n        process.on('beforeExit', this.beforeExitCallback);\n        process.on('SIGTERM', this.disposeCallback);\n        process.on('SIGINT', this.disposeCallback);\n    }\n    removeShutdownListeners() {\n        process.removeListener('beforeExit', this.beforeExitCallback);\n        process.removeListener('SIGTERM', this.disposeCallback);\n        process.removeListener('SIGINT', this.disposeCallback);\n    }\n    dispose() {\n        return new Promise(resolve => {\n            this.removeShutdownListeners();\n            if (this._logFileStream) {\n                this._logFileStream.end(resolve);\n                this._logFileStream = null;\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    log(msg, level, prependTimestamp = true) {\n        if (this._minLogLevel === logger_1.LogLevel.Stop) {\n            return;\n        }\n        if (level >= this._minLogLevel) {\n            this.sendLog(msg, level);\n        }\n        if (this._logToConsole) {\n            const logFn = level === logger_1.LogLevel.Error ? console.error :\n                level === logger_1.LogLevel.Warn ? console.warn :\n                    null;\n            if (logFn) {\n                logFn((0, logger_1.trimLastNewline)(msg));\n            }\n        }\n        // If an error, prepend with '[Error]'\n        if (level === logger_1.LogLevel.Error) {\n            msg = `[${logger_1.LogLevel[level]}] ${msg}`;\n        }\n        if (this._prependTimestamp && prependTimestamp) {\n            msg = '[' + getFormattedTimeString() + '] ' + msg;\n        }\n        if (this._logFileStream) {\n            this._logFileStream.write(msg);\n        }\n    }\n    sendLog(msg, level) {\n        // Truncate long messages, they can hang VS Code\n        if (msg.length > 1500) {\n            const endsInNewline = !!msg.match(/(\\n|\\r\\n)$/);\n            msg = msg.substr(0, 1500) + '[...]';\n            if (endsInNewline) {\n                msg = msg + '\\n';\n            }\n        }\n        if (this._logCallback) {\n            const event = new logger_1.LogOutputEvent(msg, level);\n            this._logCallback(event);\n        }\n    }\n}\nexports.InternalLogger = InternalLogger;\nfunction getFormattedTimeString() {\n    let d = new Date();\n    let hourString = _padZeroes(2, String(d.getUTCHours()));\n    let minuteString = _padZeroes(2, String(d.getUTCMinutes()));\n    let secondString = _padZeroes(2, String(d.getUTCSeconds()));\n    let millisecondString = _padZeroes(3, String(d.getUTCMilliseconds()));\n    return hourString + ':' + minuteString + ':' + secondString + '.' + millisecondString + ' UTC';\n}\nfunction _padZeroes(minDesiredLength, numberToPad) {\n    if (numberToPad.length >= minDesiredLength) {\n        return numberToPad;\n    }\n    else {\n        return String('0'.repeat(minDesiredLength) + numberToPad).slice(-minDesiredLength);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimLastNewline = exports.LogOutputEvent = exports.logger = exports.Logger = exports.LogLevel = void 0;\nconst internalLogger_1 = require(\"./internalLogger\");\nconst debugSession_1 = require(\"./debugSession\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Log\"] = 1] = \"Log\";\n    LogLevel[LogLevel[\"Warn\"] = 2] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Stop\"] = 4] = \"Stop\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nclass Logger {\n    constructor() {\n        this._pendingLogQ = [];\n    }\n    log(msg, level = LogLevel.Log) {\n        msg = msg + '\\n';\n        this._write(msg, level);\n    }\n    verbose(msg) {\n        this.log(msg, LogLevel.Verbose);\n    }\n    warn(msg) {\n        this.log(msg, LogLevel.Warn);\n    }\n    error(msg) {\n        this.log(msg, LogLevel.Error);\n    }\n    dispose() {\n        if (this._currentLogger) {\n            const disposeP = this._currentLogger.dispose();\n            this._currentLogger = null;\n            return disposeP;\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * `log` adds a newline, `write` doesn't\n     */\n    _write(msg, level = LogLevel.Log) {\n        // [null, undefined] => string\n        msg = msg + '';\n        if (this._pendingLogQ) {\n            this._pendingLogQ.push({ msg, level });\n        }\n        else if (this._currentLogger) {\n            this._currentLogger.log(msg, level);\n        }\n    }\n    /**\n     * Set the logger's minimum level to log in the console, and whether to log to the file. Log messages are queued before this is\n     * called the first time, because minLogLevel defaults to Warn.\n     */\n    setup(consoleMinLogLevel, _logFilePath, prependTimestamp = true) {\n        const logFilePath = typeof _logFilePath === 'string' ?\n            _logFilePath :\n            (_logFilePath && this._logFilePathFromInit);\n        if (this._currentLogger) {\n            const options = {\n                consoleMinLogLevel,\n                logFilePath,\n                prependTimestamp\n            };\n            this._currentLogger.setup(options).then(() => {\n                // Now that we have a minimum logLevel, we can clear out the queue of pending messages\n                if (this._pendingLogQ) {\n                    const logQ = this._pendingLogQ;\n                    this._pendingLogQ = null;\n                    logQ.forEach(item => this._write(item.msg, item.level));\n                }\n            });\n        }\n    }\n    init(logCallback, logFilePath, logToConsole) {\n        // Re-init, create new global Logger\n        this._pendingLogQ = this._pendingLogQ || [];\n        this._currentLogger = new internalLogger_1.InternalLogger(logCallback, logToConsole);\n        this._logFilePathFromInit = logFilePath;\n    }\n}\nexports.Logger = Logger;\nexports.logger = new Logger();\nclass LogOutputEvent extends debugSession_1.OutputEvent {\n    constructor(msg, level) {\n        const category = level === LogLevel.Error ? 'stderr' :\n            level === LogLevel.Warn ? 'console' :\n                'stdout';\n        super(msg, category);\n    }\n}\nexports.LogOutputEvent = LogOutputEvent;\nfunction trimLastNewline(str) {\n    return str.replace(/(\\n|\\r\\n)$/, '');\n}\nexports.trimLastNewline = trimLastNewline;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingDebugSession = void 0;\nconst Logger = require(\"./logger\");\nconst logger = Logger.logger;\nconst debugSession_1 = require(\"./debugSession\");\nclass LoggingDebugSession extends debugSession_1.DebugSession {\n    constructor(obsolete_logFilePath, obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer);\n        this.obsolete_logFilePath = obsolete_logFilePath;\n        this.on('error', (event) => {\n            logger.error(event.body);\n        });\n    }\n    start(inStream, outStream) {\n        super.start(inStream, outStream);\n        logger.init(e => this.sendEvent(e), this.obsolete_logFilePath, this._isServer);\n    }\n    /**\n     * Overload sendEvent to log\n     */\n    sendEvent(event) {\n        if (!(event instanceof Logger.LogOutputEvent)) {\n            // Don't create an infinite loop...\n            let objectToLog = event;\n            if (event instanceof debugSession_1.OutputEvent && event.body && event.body.data && event.body.data.doNotLogOutput) {\n                delete event.body.data.doNotLogOutput;\n                objectToLog = { ...event };\n                objectToLog.body = { ...event.body, output: '<output not logged>' };\n            }\n            logger.verbose(`To client: ${JSON.stringify(objectToLog)}`);\n        }\n        super.sendEvent(event);\n    }\n    /**\n     * Overload sendRequest to log\n     */\n    sendRequest(command, args, timeout, cb) {\n        logger.verbose(`To client: ${JSON.stringify(command)}(${JSON.stringify(args)}), timeout: ${timeout}`);\n        super.sendRequest(command, args, timeout, cb);\n    }\n    /**\n     * Overload sendResponse to log\n     */\n    sendResponse(response) {\n        logger.verbose(`To client: ${JSON.stringify(response)}`);\n        super.sendResponse(response);\n    }\n    dispatchRequest(request) {\n        logger.verbose(`From client: ${request.command}(${JSON.stringify(request.arguments)})`);\n        super.dispatchRequest(request);\n    }\n}\nexports.LoggingDebugSession = LoggingDebugSession;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZ0RlYnVnU2Vzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnaW5nRGVidWdTZXNzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7O0FBSWhHLG1DQUFtQztBQUNuQyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQzdCLGlEQUF5RDtBQUV6RCxNQUFhLG1CQUFvQixTQUFRLDJCQUFZO0lBQ3BELFlBQTJCLG9CQUE2QixFQUFFLHdDQUFrRCxFQUFFLGlCQUEyQjtRQUN4SSxLQUFLLENBQUMsd0NBQXdDLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUR6Qyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQVM7UUFHdkQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUEwQixFQUFFLEVBQUU7WUFDL0MsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQStCLEVBQUUsU0FBZ0M7UUFDN0UsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNoRixDQUFDO0lBRUQ7O09BRUc7SUFDSSxTQUFTLENBQUMsS0FBMEI7UUFDMUMsSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBRTtZQUM5QyxtQ0FBbUM7WUFFbkMsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFDO1lBQ3hCLElBQUksS0FBSyxZQUFZLDBCQUFXLElBQUksS0FBSyxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUU7Z0JBQ3BHLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO2dCQUN0QyxXQUFXLEdBQUcsRUFBRSxHQUFHLEtBQUssRUFBRSxDQUFDO2dCQUMzQixXQUFXLENBQUMsSUFBSSxHQUFHLEVBQUUsR0FBRyxLQUFLLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxxQkFBcUIsRUFBRSxDQUFBO2FBQ25FO1lBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzVEO1FBRUQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRUQ7O09BRUc7SUFDSSxXQUFXLENBQUMsT0FBZSxFQUFFLElBQVMsRUFBRSxPQUFlLEVBQUUsRUFBOEM7UUFDN0csTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3RHLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVEOztPQUVHO0lBQ0ksWUFBWSxDQUFDLFFBQWdDO1FBQ25ELE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBYyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6RCxLQUFLLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFUyxlQUFlLENBQUMsT0FBOEI7UUFDdkQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsT0FBTyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUUsR0FBRyxDQUFDLENBQUM7UUFDekYsS0FBSyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0Q7QUF0REQsa0RBc0RDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7RGVidWdQcm90b2NvbH0gZnJvbSAnQHZzY29kZS9kZWJ1Z3Byb3RvY29sJztcblxuaW1wb3J0ICogYXMgTG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcbmNvbnN0IGxvZ2dlciA9IExvZ2dlci5sb2dnZXI7XG5pbXBvcnQge0RlYnVnU2Vzc2lvbiwgT3V0cHV0RXZlbnR9IGZyb20gJy4vZGVidWdTZXNzaW9uJztcblxuZXhwb3J0IGNsYXNzIExvZ2dpbmdEZWJ1Z1Nlc3Npb24gZXh0ZW5kcyBEZWJ1Z1Nlc3Npb24ge1xuXHRwdWJsaWMgY29uc3RydWN0b3IocHJpdmF0ZSBvYnNvbGV0ZV9sb2dGaWxlUGF0aD86IHN0cmluZywgb2Jzb2xldGVfZGVidWdnZXJMaW5lc0FuZENvbHVtbnNTdGFydEF0MT86IGJvb2xlYW4sIG9ic29sZXRlX2lzU2VydmVyPzogYm9vbGVhbikge1xuXHRcdHN1cGVyKG9ic29sZXRlX2RlYnVnZ2VyTGluZXNBbmRDb2x1bW5zU3RhcnRBdDEsIG9ic29sZXRlX2lzU2VydmVyKTtcblxuXHRcdHRoaXMub24oJ2Vycm9yJywgKGV2ZW50OiBEZWJ1Z1Byb3RvY29sLkV2ZW50KSA9PiB7XG5cdFx0XHRsb2dnZXIuZXJyb3IoZXZlbnQuYm9keSk7XG5cdFx0fSk7XG5cdH1cblxuXHRwdWJsaWMgc3RhcnQoaW5TdHJlYW06IE5vZGVKUy5SZWFkYWJsZVN0cmVhbSwgb3V0U3RyZWFtOiBOb2RlSlMuV3JpdGFibGVTdHJlYW0pOiB2b2lkIHtcblx0XHRzdXBlci5zdGFydChpblN0cmVhbSwgb3V0U3RyZWFtKTtcblx0XHRsb2dnZXIuaW5pdChlID0+IHRoaXMuc2VuZEV2ZW50KGUpLCB0aGlzLm9ic29sZXRlX2xvZ0ZpbGVQYXRoLCB0aGlzLl9pc1NlcnZlcik7XG5cdH1cblxuXHQvKipcblx0ICogT3ZlcmxvYWQgc2VuZEV2ZW50IHRvIGxvZ1xuXHQgKi9cblx0cHVibGljIHNlbmRFdmVudChldmVudDogRGVidWdQcm90b2NvbC5FdmVudCk6IHZvaWQge1xuXHRcdGlmICghKGV2ZW50IGluc3RhbmNlb2YgTG9nZ2VyLkxvZ091dHB1dEV2ZW50KSkge1xuXHRcdFx0Ly8gRG9uJ3QgY3JlYXRlIGFuIGluZmluaXRlIGxvb3AuLi5cblxuXHRcdFx0bGV0IG9iamVjdFRvTG9nID0gZXZlbnQ7XG5cdFx0XHRpZiAoZXZlbnQgaW5zdGFuY2VvZiBPdXRwdXRFdmVudCAmJiBldmVudC5ib2R5ICYmIGV2ZW50LmJvZHkuZGF0YSAmJiBldmVudC5ib2R5LmRhdGEuZG9Ob3RMb2dPdXRwdXQpIHtcblx0XHRcdFx0ZGVsZXRlIGV2ZW50LmJvZHkuZGF0YS5kb05vdExvZ091dHB1dDtcblx0XHRcdFx0b2JqZWN0VG9Mb2cgPSB7IC4uLmV2ZW50IH07XG5cdFx0XHRcdG9iamVjdFRvTG9nLmJvZHkgPSB7IC4uLmV2ZW50LmJvZHksIG91dHB1dDogJzxvdXRwdXQgbm90IGxvZ2dlZD4nIH1cblx0XHRcdH1cblxuXHRcdFx0bG9nZ2VyLnZlcmJvc2UoYFRvIGNsaWVudDogJHtKU09OLnN0cmluZ2lmeShvYmplY3RUb0xvZyl9YCk7XG5cdFx0fVxuXG5cdFx0c3VwZXIuc2VuZEV2ZW50KGV2ZW50KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBPdmVybG9hZCBzZW5kUmVxdWVzdCB0byBsb2dcblx0ICovXG5cdHB1YmxpYyBzZW5kUmVxdWVzdChjb21tYW5kOiBzdHJpbmcsIGFyZ3M6IGFueSwgdGltZW91dDogbnVtYmVyLCBjYjogKHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlJlc3BvbnNlKSA9PiB2b2lkKTogdm9pZCB7XG5cdFx0bG9nZ2VyLnZlcmJvc2UoYFRvIGNsaWVudDogJHtKU09OLnN0cmluZ2lmeShjb21tYW5kKX0oJHtKU09OLnN0cmluZ2lmeShhcmdzKX0pLCB0aW1lb3V0OiAke3RpbWVvdXR9YCk7XG5cdFx0c3VwZXIuc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncywgdGltZW91dCwgY2IpO1xuXHR9XG5cblx0LyoqXG5cdCAqIE92ZXJsb2FkIHNlbmRSZXNwb25zZSB0byBsb2dcblx0ICovXG5cdHB1YmxpYyBzZW5kUmVzcG9uc2UocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuUmVzcG9uc2UpOiB2b2lkIHtcblx0XHRsb2dnZXIudmVyYm9zZShgVG8gY2xpZW50OiAke0pTT04uc3RyaW5naWZ5KHJlc3BvbnNlKX1gKTtcblx0XHRzdXBlci5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIGRpc3BhdGNoUmVxdWVzdChyZXF1ZXN0OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHRsb2dnZXIudmVyYm9zZShgRnJvbSBjbGllbnQ6ICR7cmVxdWVzdC5jb21tYW5kfSgke0pTT04uc3RyaW5naWZ5KHJlcXVlc3QuYXJndW1lbnRzKSB9KWApO1xuXHRcdHN1cGVyLmRpc3BhdGNoUmVxdWVzdChyZXF1ZXN0KTtcblx0fVxufVxuIl19","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handles = exports.Response = exports.Event = exports.ErrorDestination = exports.CompletionItem = exports.Module = exports.Source = exports.Breakpoint = exports.Variable = exports.Scope = exports.StackFrame = exports.Thread = exports.MemoryEvent = exports.InvalidatedEvent = exports.ProgressEndEvent = exports.ProgressUpdateEvent = exports.ProgressStartEvent = exports.CapabilitiesEvent = exports.LoadedSourceEvent = exports.ModuleEvent = exports.BreakpointEvent = exports.ThreadEvent = exports.OutputEvent = exports.ContinuedEvent = exports.StoppedEvent = exports.ExitedEvent = exports.TerminatedEvent = exports.InitializedEvent = exports.logger = exports.Logger = exports.LoggingDebugSession = exports.DebugSession = void 0;\nconst debugSession_1 = require(\"./debugSession\");\nObject.defineProperty(exports, \"DebugSession\", { enumerable: true, get: function () { return debugSession_1.DebugSession; } });\nObject.defineProperty(exports, \"InitializedEvent\", { enumerable: true, get: function () { return debugSession_1.InitializedEvent; } });\nObject.defineProperty(exports, \"TerminatedEvent\", { enumerable: true, get: function () { return debugSession_1.TerminatedEvent; } });\nObject.defineProperty(exports, \"ExitedEvent\", { enumerable: true, get: function () { return debugSession_1.ExitedEvent; } });\nObject.defineProperty(exports, \"StoppedEvent\", { enumerable: true, get: function () { return debugSession_1.StoppedEvent; } });\nObject.defineProperty(exports, \"ContinuedEvent\", { enumerable: true, get: function () { return debugSession_1.ContinuedEvent; } });\nObject.defineProperty(exports, \"OutputEvent\", { enumerable: true, get: function () { return debugSession_1.OutputEvent; } });\nObject.defineProperty(exports, \"ThreadEvent\", { enumerable: true, get: function () { return debugSession_1.ThreadEvent; } });\nObject.defineProperty(exports, \"BreakpointEvent\", { enumerable: true, get: function () { return debugSession_1.BreakpointEvent; } });\nObject.defineProperty(exports, \"ModuleEvent\", { enumerable: true, get: function () { return debugSession_1.ModuleEvent; } });\nObject.defineProperty(exports, \"LoadedSourceEvent\", { enumerable: true, get: function () { return debugSession_1.LoadedSourceEvent; } });\nObject.defineProperty(exports, \"CapabilitiesEvent\", { enumerable: true, get: function () { return debugSession_1.CapabilitiesEvent; } });\nObject.defineProperty(exports, \"ProgressStartEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressStartEvent; } });\nObject.defineProperty(exports, \"ProgressUpdateEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressUpdateEvent; } });\nObject.defineProperty(exports, \"ProgressEndEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressEndEvent; } });\nObject.defineProperty(exports, \"InvalidatedEvent\", { enumerable: true, get: function () { return debugSession_1.InvalidatedEvent; } });\nObject.defineProperty(exports, \"MemoryEvent\", { enumerable: true, get: function () { return debugSession_1.MemoryEvent; } });\nObject.defineProperty(exports, \"Thread\", { enumerable: true, get: function () { return debugSession_1.Thread; } });\nObject.defineProperty(exports, \"StackFrame\", { enumerable: true, get: function () { return debugSession_1.StackFrame; } });\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return debugSession_1.Scope; } });\nObject.defineProperty(exports, \"Variable\", { enumerable: true, get: function () { return debugSession_1.Variable; } });\nObject.defineProperty(exports, \"Breakpoint\", { enumerable: true, get: function () { return debugSession_1.Breakpoint; } });\nObject.defineProperty(exports, \"Source\", { enumerable: true, get: function () { return debugSession_1.Source; } });\nObject.defineProperty(exports, \"Module\", { enumerable: true, get: function () { return debugSession_1.Module; } });\nObject.defineProperty(exports, \"CompletionItem\", { enumerable: true, get: function () { return debugSession_1.CompletionItem; } });\nObject.defineProperty(exports, \"ErrorDestination\", { enumerable: true, get: function () { return debugSession_1.ErrorDestination; } });\nconst loggingDebugSession_1 = require(\"./loggingDebugSession\");\nObject.defineProperty(exports, \"LoggingDebugSession\", { enumerable: true, get: function () { return loggingDebugSession_1.LoggingDebugSession; } });\nconst Logger = require(\"./logger\");\nexports.Logger = Logger;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return messages_1.Event; } });\nObject.defineProperty(exports, \"Response\", { enumerable: true, get: function () { return messages_1.Response; } });\nconst handles_1 = require(\"./handles\");\nObject.defineProperty(exports, \"Handles\", { enumerable: true, get: function () { return handles_1.Handles; } });\nconst logger = Logger.logger;\nexports.logger = logger;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHO0FBQ2hHLFlBQVksQ0FBQzs7O0FBRWIsaURBT3dCO0FBU3ZCLDZGQWZBLDJCQUFZLE9BZUE7QUFJWixpR0FsQkEsK0JBQWdCLE9Ba0JBO0FBQUUsZ0dBbEJBLDhCQUFlLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsNkZBbEJBLDJCQUFZLE9Ba0JBO0FBQUUsK0ZBbEJBLDZCQUFjLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsZ0dBbEJBLDhCQUFlLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQ25JLGtHQWxCQSxnQ0FBaUIsT0FrQkE7QUFBRSxrR0FsQkEsZ0NBQWlCLE9Ba0JBO0FBQUUsbUdBbEJBLGlDQUFrQixPQWtCQTtBQUFFLG9HQWxCQSxrQ0FBbUIsT0FrQkE7QUFBRSxpR0FsQkEsK0JBQWdCLE9Ba0JBO0FBQUUsaUdBbEJBLCtCQUFnQixPQWtCQTtBQUFFLDRGQWxCQSwwQkFBVyxPQWtCQTtBQUMvSCx1RkFsQkEscUJBQU0sT0FrQkE7QUFBRSwyRkFsQkEseUJBQVUsT0FrQkE7QUFBRSxzRkFsQkEsb0JBQUssT0FrQkE7QUFBRSx5RkFsQkEsdUJBQVEsT0FrQkE7QUFDbkMsMkZBbEJBLHlCQUFVLE9Ba0JBO0FBQUUsdUZBbEJBLHFCQUFNLE9Ba0JBO0FBQUUsdUZBbEJBLHFCQUFNLE9Ba0JBO0FBQUUsK0ZBbEJBLDZCQUFjLE9Ba0JBO0FBQzFDLGlHQWxCQSwrQkFBZ0IsT0FrQkE7QUFoQmpCLCtEQUEwRDtBQVN6RCxvR0FUTyx5Q0FBbUIsT0FTUDtBQVJwQixtQ0FBbUM7QUFTbEMsd0JBQU07QUFSUCx5Q0FBNkM7QUFlNUMsc0ZBZlEsZ0JBQUssT0FlUjtBQUFFLHlGQWZRLG1CQUFRLE9BZVI7QUFkaEIsdUNBQW9DO0FBZW5DLHdGQWZRLGlCQUFPLE9BZVI7QUFiUixNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBTTVCLHdCQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQge1xuXHREZWJ1Z1Nlc3Npb24sXG5cdEluaXRpYWxpemVkRXZlbnQsIFRlcm1pbmF0ZWRFdmVudCwgRXhpdGVkRXZlbnQsIFN0b3BwZWRFdmVudCwgQ29udGludWVkRXZlbnQsIE91dHB1dEV2ZW50LCBUaHJlYWRFdmVudCwgQnJlYWtwb2ludEV2ZW50LCBNb2R1bGVFdmVudCxcblx0XHRMb2FkZWRTb3VyY2VFdmVudCwgQ2FwYWJpbGl0aWVzRXZlbnQsIFByb2dyZXNzU3RhcnRFdmVudCwgUHJvZ3Jlc3NVcGRhdGVFdmVudCwgUHJvZ3Jlc3NFbmRFdmVudCwgSW52YWxpZGF0ZWRFdmVudCwgTWVtb3J5RXZlbnQsXG5cdFRocmVhZCwgU3RhY2tGcmFtZSwgU2NvcGUsIFZhcmlhYmxlLFxuXHRCcmVha3BvaW50LCBTb3VyY2UsIE1vZHVsZSwgQ29tcGxldGlvbkl0ZW0sXG5cdEVycm9yRGVzdGluYXRpb25cbn0gZnJvbSAnLi9kZWJ1Z1Nlc3Npb24nO1xuaW1wb3J0IHtMb2dnaW5nRGVidWdTZXNzaW9ufSBmcm9tICcuL2xvZ2dpbmdEZWJ1Z1Nlc3Npb24nO1xuaW1wb3J0ICogYXMgTG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcbmltcG9ydCB7IEV2ZW50LCBSZXNwb25zZSB9IGZyb20gJy4vbWVzc2FnZXMnO1xuaW1wb3J0IHsgSGFuZGxlcyB9IGZyb20gJy4vaGFuZGxlcyc7XG5cbmNvbnN0IGxvZ2dlciA9IExvZ2dlci5sb2dnZXI7XG5cbmV4cG9ydCB7XG5cdERlYnVnU2Vzc2lvbixcblx0TG9nZ2luZ0RlYnVnU2Vzc2lvbixcblx0TG9nZ2VyLFxuXHRsb2dnZXIsXG5cdEluaXRpYWxpemVkRXZlbnQsIFRlcm1pbmF0ZWRFdmVudCwgRXhpdGVkRXZlbnQsIFN0b3BwZWRFdmVudCwgQ29udGludWVkRXZlbnQsIE91dHB1dEV2ZW50LCBUaHJlYWRFdmVudCwgQnJlYWtwb2ludEV2ZW50LCBNb2R1bGVFdmVudCxcblx0XHRMb2FkZWRTb3VyY2VFdmVudCwgQ2FwYWJpbGl0aWVzRXZlbnQsIFByb2dyZXNzU3RhcnRFdmVudCwgUHJvZ3Jlc3NVcGRhdGVFdmVudCwgUHJvZ3Jlc3NFbmRFdmVudCwgSW52YWxpZGF0ZWRFdmVudCwgTWVtb3J5RXZlbnQsXG5cdFRocmVhZCwgU3RhY2tGcmFtZSwgU2NvcGUsIFZhcmlhYmxlLFxuXHRCcmVha3BvaW50LCBTb3VyY2UsIE1vZHVsZSwgQ29tcGxldGlvbkl0ZW0sXG5cdEVycm9yRGVzdGluYXRpb24sXG5cdEV2ZW50LCBSZXNwb25zZSxcblx0SGFuZGxlc1xufVxuIl19","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Event = exports.Response = exports.Message = void 0;\nclass Message {\n    constructor(type) {\n        this.seq = 0;\n        this.type = type;\n    }\n}\nexports.Message = Message;\nclass Response extends Message {\n    constructor(request, message) {\n        super('response');\n        this.request_seq = request.seq;\n        this.command = request.command;\n        if (message) {\n            this.success = false;\n            this.message = message;\n        }\n        else {\n            this.success = true;\n        }\n    }\n}\nexports.Response = Response;\nclass Event extends Message {\n    constructor(event, body) {\n        super('event');\n        this.event = event;\n        if (body) {\n            this.body = body;\n        }\n    }\n}\nexports.Event = Event;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbWVzc2FnZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Z0dBR2dHOzs7QUFLaEcsTUFBYSxPQUFPO0lBSW5CLFlBQW1CLElBQVk7UUFDOUIsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBQ0Q7QUFSRCwwQkFRQztBQUVELE1BQWEsUUFBUyxTQUFRLE9BQU87SUFLcEMsWUFBbUIsT0FBOEIsRUFBRSxPQUFnQjtRQUNsRSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQy9CLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUMvQixJQUFJLE9BQU8sRUFBRTtZQUNaLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQ2YsSUFBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7U0FDOUI7YUFBTTtZQUNOLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1NBQ3BCO0lBQ0YsQ0FBQztDQUNEO0FBaEJELDRCQWdCQztBQUVELE1BQWEsS0FBTSxTQUFRLE9BQU87SUFHakMsWUFBbUIsS0FBYSxFQUFFLElBQVU7UUFDM0MsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxJQUFJLEVBQUU7WUFDSCxJQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUN4QjtJQUNGLENBQUM7Q0FDRDtBQVZELHNCQVVDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7IERlYnVnUHJvdG9jb2wgfSBmcm9tICdAdnNjb2RlL2RlYnVncHJvdG9jb2wnO1xuXG5cbmV4cG9ydCBjbGFzcyBNZXNzYWdlIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5Qcm90b2NvbE1lc3NhZ2Uge1xuXHRzZXE6IG51bWJlcjtcblx0dHlwZTogc3RyaW5nO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3Rvcih0eXBlOiBzdHJpbmcpIHtcblx0XHR0aGlzLnNlcSA9IDA7XG5cdFx0dGhpcy50eXBlID0gdHlwZTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgUmVzcG9uc2UgZXh0ZW5kcyBNZXNzYWdlIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5SZXNwb25zZSB7XG5cdHJlcXVlc3Rfc2VxOiBudW1iZXI7XG5cdHN1Y2Nlc3M6IGJvb2xlYW47XG5cdGNvbW1hbmQ6IHN0cmluZztcblxuXHRwdWJsaWMgY29uc3RydWN0b3IocmVxdWVzdDogRGVidWdQcm90b2NvbC5SZXF1ZXN0LCBtZXNzYWdlPzogc3RyaW5nKSB7XG5cdFx0c3VwZXIoJ3Jlc3BvbnNlJyk7XG5cdFx0dGhpcy5yZXF1ZXN0X3NlcSA9IHJlcXVlc3Quc2VxO1xuXHRcdHRoaXMuY29tbWFuZCA9IHJlcXVlc3QuY29tbWFuZDtcblx0XHRpZiAobWVzc2FnZSkge1xuXHRcdFx0dGhpcy5zdWNjZXNzID0gZmFsc2U7XG5cdFx0XHQoPGFueT50aGlzKS5tZXNzYWdlID0gbWVzc2FnZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5zdWNjZXNzID0gdHJ1ZTtcblx0XHR9XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIEV2ZW50IGV4dGVuZHMgTWVzc2FnZSBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuRXZlbnQge1xuXHRldmVudDogc3RyaW5nO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihldmVudDogc3RyaW5nLCBib2R5PzogYW55KSB7XG5cdFx0c3VwZXIoJ2V2ZW50Jyk7XG5cdFx0dGhpcy5ldmVudCA9IGV2ZW50O1xuXHRcdGlmIChib2R5KSB7XG5cdFx0XHQoPGFueT50aGlzKS5ib2R5ID0gYm9keTtcblx0XHR9XG5cdH1cbn1cbiJdfQ==","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolServer = void 0;\nconst ee = require(\"events\");\nconst messages_1 = require(\"./messages\");\nclass Disposable0 {\n    dispose() {\n    }\n}\nclass Emitter {\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArg) => {\n                this._listener = listener;\n                this._this = thisArg;\n                let result;\n                result = {\n                    dispose: () => {\n                        this._listener = undefined;\n                        this._this = undefined;\n                    }\n                };\n                return result;\n            };\n        }\n        return this._event;\n    }\n    fire(event) {\n        if (this._listener) {\n            try {\n                this._listener.call(this._this, event);\n            }\n            catch (e) {\n            }\n        }\n    }\n    hasListener() {\n        return !!this._listener;\n    }\n    dispose() {\n        this._listener = undefined;\n        this._this = undefined;\n    }\n}\nclass ProtocolServer extends ee.EventEmitter {\n    constructor() {\n        super();\n        this._sendMessage = new Emitter();\n        this._pendingRequests = new Map();\n        this.onDidSendMessage = this._sendMessage.event;\n    }\n    // ---- implements vscode.Debugadapter interface ---------------------------\n    dispose() {\n    }\n    handleMessage(msg) {\n        if (msg.type === 'request') {\n            this.dispatchRequest(msg);\n        }\n        else if (msg.type === 'response') {\n            const response = msg;\n            const clb = this._pendingRequests.get(response.request_seq);\n            if (clb) {\n                this._pendingRequests.delete(response.request_seq);\n                clb(response);\n            }\n        }\n    }\n    _isRunningInline() {\n        return this._sendMessage && this._sendMessage.hasListener();\n    }\n    //--------------------------------------------------------------------------\n    start(inStream, outStream) {\n        this._sequence = 1;\n        this._writableStream = outStream;\n        this._rawData = Buffer.alloc(0);\n        inStream.on('data', (data) => this._handleData(data));\n        inStream.on('close', () => {\n            this._emitEvent(new messages_1.Event('close'));\n        });\n        inStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'inStream error: ' + (error && error.message)));\n        });\n        outStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'outStream error: ' + (error && error.message)));\n        });\n        inStream.resume();\n    }\n    stop() {\n        if (this._writableStream) {\n            this._writableStream.end();\n        }\n    }\n    sendEvent(event) {\n        this._send('event', event);\n    }\n    sendResponse(response) {\n        if (response.seq > 0) {\n            console.error(`attempt to send more than one response for command ${response.command}`);\n        }\n        else {\n            this._send('response', response);\n        }\n    }\n    sendRequest(command, args, timeout, cb) {\n        const request = {\n            command: command\n        };\n        if (args && Object.keys(args).length > 0) {\n            request.arguments = args;\n        }\n        this._send('request', request);\n        if (cb) {\n            this._pendingRequests.set(request.seq, cb);\n            const timer = setTimeout(() => {\n                clearTimeout(timer);\n                const clb = this._pendingRequests.get(request.seq);\n                if (clb) {\n                    this._pendingRequests.delete(request.seq);\n                    clb(new messages_1.Response(request, 'timeout'));\n                }\n            }, timeout);\n        }\n    }\n    // ---- protected ----------------------------------------------------------\n    dispatchRequest(request) {\n    }\n    // ---- private ------------------------------------------------------------\n    _emitEvent(event) {\n        this.emit(event.event, event);\n    }\n    _send(typ, message) {\n        message.type = typ;\n        message.seq = this._sequence++;\n        if (this._writableStream) {\n            const json = JSON.stringify(message);\n            this._writableStream.write(`Content-Length: ${Buffer.byteLength(json, 'utf8')}\\r\\n\\r\\n${json}`, 'utf8');\n        }\n        this._sendMessage.fire(message);\n    }\n    _handleData(data) {\n        this._rawData = Buffer.concat([this._rawData, data]);\n        while (true) {\n            if (this._contentLength >= 0) {\n                if (this._rawData.length >= this._contentLength) {\n                    const message = this._rawData.toString('utf8', 0, this._contentLength);\n                    this._rawData = this._rawData.slice(this._contentLength);\n                    this._contentLength = -1;\n                    if (message.length > 0) {\n                        try {\n                            let msg = JSON.parse(message);\n                            this.handleMessage(msg);\n                        }\n                        catch (e) {\n                            this._emitEvent(new messages_1.Event('error', 'Error handling data: ' + (e && e.message)));\n                        }\n                    }\n                    continue; // there may be more complete messages to process\n                }\n            }\n            else {\n                const idx = this._rawData.indexOf(ProtocolServer.TWO_CRLF);\n                if (idx !== -1) {\n                    const header = this._rawData.toString('utf8', 0, idx);\n                    const lines = header.split('\\r\\n');\n                    for (let i = 0; i < lines.length; i++) {\n                        const pair = lines[i].split(/: +/);\n                        if (pair[0] == 'Content-Length') {\n                            this._contentLength = +pair[1];\n                        }\n                    }\n                    this._rawData = this._rawData.slice(idx + ProtocolServer.TWO_CRLF.length);\n                    continue;\n                }\n            }\n            break;\n        }\n    }\n}\nexports.ProtocolServer = ProtocolServer;\nProtocolServer.TWO_CRLF = '\\r\\n\\r\\n';\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runDebugAdapter = void 0;\nconst Net = require(\"net\");\nfunction runDebugAdapter(debugSession) {\n    // parse arguments\n    let port = 0;\n    const args = process.argv.slice(2);\n    args.forEach(function (val, index, array) {\n        const portMatch = /^--server=(\\d{4,5})$/.exec(val);\n        if (portMatch) {\n            port = parseInt(portMatch[1], 10);\n        }\n    });\n    if (port > 0) {\n        // start as a server\n        console.error(`waiting for debug protocol on port ${port}`);\n        Net.createServer((socket) => {\n            console.error('>> accepted connection from client');\n            socket.on('end', () => {\n                console.error('>> client connection closed\\n');\n            });\n            const session = new debugSession(false, true);\n            session.setRunAsServer(true);\n            session.start(socket, socket);\n        }).listen(port);\n    }\n    else {\n        // start a session\n        //console.error('waiting for debug protocol on stdin/stdout');\n        const session = new debugSession(false);\n        process.on('SIGTERM', () => {\n            session.shutdown();\n        });\n        session.start(process.stdin, process.stdout);\n    }\n}\nexports.runDebugAdapter = runDebugAdapter;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuRGVidWdBZGFwdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3J1bkRlYnVnQWRhcHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztnR0FHZ0c7OztBQUVoRywyQkFBMkI7QUFJM0IsU0FBZ0IsZUFBZSxDQUFDLFlBQWlDO0lBRWhFLGtCQUFrQjtJQUNsQixJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFDYixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLO1FBQ3ZDLE1BQU0sU0FBUyxHQUFHLHNCQUFzQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuRCxJQUFJLFNBQVMsRUFBRTtZQUNkLElBQUksR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ2xDO0lBQ0YsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLElBQUksR0FBRyxDQUFDLEVBQUU7UUFDYixvQkFBb0I7UUFDcEIsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUM1RCxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDM0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1lBQ3BELE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtnQkFDckIsT0FBTyxDQUFDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1lBQ2hELENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxPQUFPLEdBQUcsSUFBSSxZQUFZLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzlDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2hCO1NBQU07UUFFTixrQkFBa0I7UUFDbEIsOERBQThEO1FBQzlELE1BQU0sT0FBTyxHQUFHLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRTtZQUMxQixPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzdDO0FBQ0YsQ0FBQztBQWxDRCwwQ0FrQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuaW1wb3J0ICogYXMgTmV0IGZyb20gJ25ldCc7XG5cbmltcG9ydCB7IERlYnVnU2Vzc2lvbiB9IGZyb20gJy4vZGVidWdTZXNzaW9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bkRlYnVnQWRhcHRlcihkZWJ1Z1Nlc3Npb246IHR5cGVvZiBEZWJ1Z1Nlc3Npb24pIHtcblxuXHQvLyBwYXJzZSBhcmd1bWVudHNcblx0bGV0IHBvcnQgPSAwO1xuXHRjb25zdCBhcmdzID0gcHJvY2Vzcy5hcmd2LnNsaWNlKDIpO1xuXHRhcmdzLmZvckVhY2goZnVuY3Rpb24gKHZhbCwgaW5kZXgsIGFycmF5KSB7XG5cdFx0Y29uc3QgcG9ydE1hdGNoID0gL14tLXNlcnZlcj0oXFxkezQsNX0pJC8uZXhlYyh2YWwpO1xuXHRcdGlmIChwb3J0TWF0Y2gpIHtcblx0XHRcdHBvcnQgPSBwYXJzZUludChwb3J0TWF0Y2hbMV0sIDEwKTtcblx0XHR9XG5cdH0pO1xuXG5cdGlmIChwb3J0ID4gMCkge1xuXHRcdC8vIHN0YXJ0IGFzIGEgc2VydmVyXG5cdFx0Y29uc29sZS5lcnJvcihgd2FpdGluZyBmb3IgZGVidWcgcHJvdG9jb2wgb24gcG9ydCAke3BvcnR9YCk7XG5cdFx0TmV0LmNyZWF0ZVNlcnZlcigoc29ja2V0KSA9PiB7XG5cdFx0XHRjb25zb2xlLmVycm9yKCc+PiBhY2NlcHRlZCBjb25uZWN0aW9uIGZyb20gY2xpZW50Jyk7XG5cdFx0XHRzb2NrZXQub24oJ2VuZCcsICgpID0+IHtcblx0XHRcdFx0Y29uc29sZS5lcnJvcignPj4gY2xpZW50IGNvbm5lY3Rpb24gY2xvc2VkXFxuJyk7XG5cdFx0XHR9KTtcblx0XHRcdGNvbnN0IHNlc3Npb24gPSBuZXcgZGVidWdTZXNzaW9uKGZhbHNlLCB0cnVlKTtcblx0XHRcdHNlc3Npb24uc2V0UnVuQXNTZXJ2ZXIodHJ1ZSk7XG5cdFx0XHRzZXNzaW9uLnN0YXJ0KHNvY2tldCwgc29ja2V0KTtcblx0XHR9KS5saXN0ZW4ocG9ydCk7XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBzdGFydCBhIHNlc3Npb25cblx0XHQvL2NvbnNvbGUuZXJyb3IoJ3dhaXRpbmcgZm9yIGRlYnVnIHByb3RvY29sIG9uIHN0ZGluL3N0ZG91dCcpO1xuXHRcdGNvbnN0IHNlc3Npb24gPSBuZXcgZGVidWdTZXNzaW9uKGZhbHNlKTtcblx0XHRwcm9jZXNzLm9uKCdTSUdURVJNJywgKCkgPT4ge1xuXHRcdFx0c2Vzc2lvbi5zaHV0ZG93bigpO1xuXHRcdH0pO1xuXHRcdHNlc3Npb24uc3RhcnQocHJvY2Vzcy5zdGRpbiwgcHJvY2Vzcy5zdGRvdXQpO1xuXHR9XG59XG4iXX0=","function Subject() {\n  this.waiters = [];\n}\n\nSubject.prototype.wait = function (timeout) {\n  var self = this;\n  var waiter = {};\n  this.waiters.push(waiter);\n  var promise = new Promise(function (resolve) {\n    var resolved = false;\n    waiter.resolve = function (noRemove) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      if (waiter.timeout) {\n        clearTimeout(waiter.timeout);\n        waiter.timeout = null;\n      }\n      if (!noRemove) {\n        var pos = self.waiters.indexOf(waiter);\n        if (pos > -1) {\n          self.waiters.splice(pos, 1);\n        }\n      }\n      resolve();\n    };\n  });\n  if (timeout > 0 && isFinite(timeout)) {\n    waiter.timeout = setTimeout(function () {\n      waiter.timeout = null;\n      waiter.resolve();\n    }, timeout);\n  }\n  return promise;\n};\n\nSubject.prototype.notify = function () {\n  if (this.waiters.length > 0) {\n    this.waiters.pop().resolve(true);\n  }\n};\n\nSubject.prototype.notifyAll = function () {\n  for (var i = this.waiters.length - 1; i >= 0; i--) {\n    this.waiters[i].resolve(true);\n  }\n  this.waiters = [];\n}\n\nexports.Subject = Subject;\n","\"use strict\";\n\nvar parser = require('./lib/parse.js');\nvar renderer = require('./lib/render.js');\n\nfunction parseLine(inputString) {\n\n    var tmpObject = {};\n\n    //Parsing must be performed sequentially.\n    tmpObject = parser.extractLabel(inputString, tmpObject);\n    tmpObject = parser.extractComment(tmpObject.lineExpression, tmpObject);\n    tmpObject = parser.extractIndentation(tmpObject.lineExpression, tmpObject);\n    tmpObject = parser.extractRoutines(tmpObject.lineExpression, tmpObject);\n\n    //Line Expression is no longer needed.\n    delete tmpObject.lineExpression;\n    return tmpObject;\n}\n\nfunction renderLine(inputObject) {\n\n    var tmpLine = \"\";\n\n    //Rendering must be performed sequentially.\n    tmpLine = renderer.appendLabel(inputObject, tmpLine);\n    tmpLine = renderer.appendIndentation(inputObject, tmpLine);\n    tmpLine = renderer.appendRoutines(inputObject, tmpLine);\n    tmpLine = renderer.appendComment(inputObject, tmpLine);\n\n    return tmpLine;\n\n}\n\nfunction parse(inputString) {\n\n    //Strip out carriage returns.\n    inputString = inputString.replace(\"\\r\", \"\");\n    var inputArray = inputString.split('\\n');\n    var returnArray = [];\n\n    for (var i = 0; i < inputArray.length; i++) {\n        var tmpLineObject = parseLine(inputArray[i]);\n        tmpLineObject.lineNumber = i + 1;\n        returnArray.push(tmpLineObject);\n    }\n    return returnArray;\n}\n\nfunction render(inputObject) {\n\n    var response = \"\";\n    var parseArray = [];\n\n    if (!Array.isArray(inputObject)) {\n        parseArray.push(inputObject);\n    } else {\n        parseArray = inputObject;\n    }\n\n    for (var i = 0; i < parseArray.length; i++) {\n        var tmpLine = renderLine(parseArray[i]);\n        if (i === (parseArray.length - 1)) {\n            response = response + tmpLine;\n        } else {\n            response = response + tmpLine + \"\\n\";\n        }\n    }\n\n    return response;\n\n}\n\nmodule.exports.parse = parse;\nmodule.exports.render = render;\n","\"use strict\";\n\n//Extract Labels and Lead Spacing.\nfunction extractLabel(inputLine, inputObject) {\n\n    for (var i = 0; i <= inputLine.length; i++) {\n        if (inputLine[i] !== \" \" && inputLine[i] !== \"\\t\") {\n            //If no leading chars, label.\n            if (i === 0) {\n                inputObject.lineLabel = inputLine.split(/[ \\t]/, 1)[0];\n                for (var ii = inputObject.lineLabel.length; ii <= inputLine.length; ii++) {\n                    //After label spacing.\n                    if (inputLine[ii] !== \" \" && inputLine[ii] !== \"\\t\") {\n                        inputObject.lineLeadSpace = inputLine.substring(inputObject.lineLabel.length, ii);\n                        inputObject.lineExpression = inputLine.substring(ii);\n                        break;\n                    }\n                    //After label spacing for empty lines.\n                    if (ii === (inputLine.length - 1)) {\n                        inputObject.lineLeadSpace = inputLine.substring(inputObject.lineLabel.length);\n                        inputObject.lineExpression = \"\";\n                        break;\n                    }\n                }\n                break;\n                //Unlabeled spacing with code.\n            } else {\n                inputObject.lineLeadSpace = inputLine.substring(0, i);\n                inputObject.lineExpression = inputLine.substring(i);\n                break;\n            }\n        }\n        //Unlabeled spacing without code.\n        if (i === (inputLine.length - 1)) {\n            inputObject.lineLeadSpace = inputLine;\n            inputObject.lineExpression = \"\";\n            break;\n        }\n    }\n    return inputObject;\n}\n\n//Extract Comments.\nfunction extractComment(inputLine, inputObject) {\n\n    //Semicolon identifies comments.\n    if (inputLine.search(\";\") >= 0) {\n        for (var i = 0; i < inputLine.length; i++) {\n            if (inputLine[i] === \";\") {\n                //Check if semicolon is double quoted.\n                if ((inputLine.substring(0, i).split(\"\\\"\").length % 2 !== 0) && (inputLine.substring(i).split(\"\\\"\").length % 2 !== 0)) {\n                    inputObject.lineExpression = inputLine.substring(0, i);\n                    inputObject.lineComment = inputLine.substring(i).substring(1);\n                    break;\n                } else {\n                    //Check if semicolon has only trailing quote.\n                    if (((inputLine.substring(0, i).replace(\"\").split(\"\\\"\").length % 2 !== 0) && (inputLine.substring(i).split(\"\\\"\").length % 2 === 0))) {\n                        inputObject.lineExpression = inputLine.substring(0, i);\n                        inputObject.lineComment = inputLine.substring(i).substring(1);\n                        break;\n                    }\n                    //If only quoted semicolons, set expression.\n                    inputObject.lineExpression = inputLine;\n                }\n            }\n        }\n        return inputObject;\n        //If no comments, set expression.\n    } else {\n        inputObject.lineExpression = inputLine;\n        return inputObject;\n    }\n}\n\n//Extract Indentation.\n//Assumes inputLine has extracted comments/spacing.\nfunction extractIndentation(inputLine, inputObject) {\n\n    var lineIndentationArray = [];\n    var lineIndentation = 0;\n    var tmpPosStart = 0;\n    var tmpPosEnd = 0;\n\n    for (var i = 0; i <= inputLine.length; i++) {\n        //Period identifies indentation.\n        if (inputLine[i] === \".\") {\n            //Second period identifies sub-indentation, push to array.\n            if (lineIndentation !== 0) {\n                tmpPosEnd = i;\n                lineIndentationArray.push(inputLine.substring(tmpPosStart, tmpPosEnd));\n            }\n            //Flag start position and presence.\n            tmpPosStart = i + 1;\n            lineIndentation++;\n        } else {\n            //End of indentation with code.\n            if (inputLine[i] !== \".\" && inputLine[i] !== \" \" && inputLine[i] !== \"\\t\") {\n                //Make sure a period was found.\n                if (lineIndentation !== 0) {\n                    tmpPosEnd = i;\n                    lineIndentationArray.push(inputLine.substring(tmpPosStart, tmpPosEnd));\n                    inputObject.lineExpression = inputLine.substring(i);\n                }\n                break;\n            }\n            //End of indentation without code.\n            if (i === (inputLine.length - 1)) {\n                tmpPosEnd = i + 1;\n                lineIndentationArray.push(inputLine.substring(tmpPosStart, tmpPosEnd));\n                inputObject.lineExpression = inputLine.substring(i + 1);\n                break;\n            }\n        }\n    }\n    //Only assign array if present.\n    if (lineIndentationArray.length > 0) {\n        inputObject.lineIndentationArray = lineIndentationArray;\n    } else {\n        inputObject.lineExpression = inputLine;\n    }\n    return inputObject;\n}\n\n//Divide routines and arguments into array, used by extractRoutines.\nfunction splitRoutinesAndArguments(inputLine) {\n\n    var lineCommands = [];\n    var tmpCursor = 0;\n\n    for (var i = 0; i <= inputLine.length; i++) {\n\n        //Flag spaces/tabs as dividers.\n        if (inputLine[i] === \" \" || inputLine[i] === \"\\t\") {\n            //Ensure space isn't quoted.\n            if ((inputLine.substring(0, i).split(\"\\\"\").length % 2 !== 0) && (inputLine.substring(i).split(\"\\\"\").length % 2 !== 0)) {\n                //If has content, push.\n                if (inputLine.substring(tmpCursor, i).length > 0) {\n                    lineCommands.push(inputLine.substring(tmpCursor, i));\n                    //Otherwise, push empty commands.\n                } else if (inputLine.substring(tmpCursor, i).length === 0 && (inputLine.substring(tmpCursor - 1, tmpCursor) === \" \" || inputLine.substring(tmpCursor - 1, tmpCursor) === \"\\t\")) {\n                    lineCommands.push(inputLine.substring(tmpCursor, i));\n                }\n                tmpCursor = i + 1;\n            }\n            //Flag splits at line end.\n        } else if (i === inputLine.length) {\n            //If has content, push.\n            if (inputLine.substring(tmpCursor, i).length > 0) {\n                lineCommands.push(inputLine.substring(tmpCursor, i));\n                //Gather empty commands from end of line.\n            } else if (i === tmpCursor && (inputLine.substring(i - 1, i) === \" \" || inputLine.substring(i - 1, i) === \"/t\")) {\n                lineCommands.push('');\n            }\n            //tmpCursor = 0;\n        }\n    }\n    return lineCommands;\n}\n\n//Extracts Post-Conditionals from Routines, used by extractRoutines.\nfunction extractPostConditional(inputObject) {\n\n    //Assign to new variable to truncate Routines.\n    var tmpObject = inputObject;\n    for (var i = 0; i < tmpObject.length; i++) {\n        if (tmpObject[i].mRoutine) {\n            //Semicolon indicates Post-Conditionals.\n            var tmpIndex = tmpObject[i].mRoutine.indexOf(\":\");\n            if (tmpIndex > -1) {\n                tmpObject[i].mPostConditional = tmpObject[i].mRoutine.substring(tmpIndex + 1);\n                tmpObject[i].mRoutine = tmpObject[i].mRoutine.substring(0, tmpIndex);\n            }\n        }\n    }\n    return tmpObject;\n}\n\n//Extract Routines.\n//Assumes inputLine has extracted comments/spacing/indentation.\nfunction extractRoutines(inputLine, inputObject) {\n\n    var tmpFunction = {};\n    var tmpFunctionArray = [];\n\n    //Divide Routines and Arguments.\n    var splitLine = splitRoutinesAndArguments(inputLine);\n\n    //Loop, even is function, odd is arguments.\n    var i = 0;\n    while (i < splitLine.length) {\n\n        if (i % 2 === 0) {\n            tmpFunction.mRoutine = splitLine[i];\n        } else {\n\n            tmpFunction.mArguments = splitLine[i];\n\n            //Custom handler for trailing argument spacing.\n            //Go until splitline hits a non empty val.\n            var ii = i + 1;\n            while (ii < splitLine.length) {\n                if (splitLine[ii] === \"\") {\n                    splitLine.splice(ii, 1);\n                    tmpFunction.mArguments = tmpFunction.mArguments + \" \";\n                } else {\n                    break;\n                }\n            }\n\n            tmpFunctionArray.push(tmpFunction);\n            tmpFunction = {};\n\n        }\n\n        //Last command doesn't always require parameter, so if odd number of pairs, push it.\n        if (splitLine.length % 2 !== 0 && splitLine.length > 0 && i === (splitLine.length - 1)) {\n            tmpFunction.mRoutine = splitLine[i];\n            tmpFunctionArray.push(tmpFunction);\n            tmpFunction = {};\n        }\n\n        i++;\n\n    }\n\n    //Extract and output Post Conditionals.\n    var postConditionFunctionArray = extractPostConditional(tmpFunctionArray);\n    if (postConditionFunctionArray.length > 0) {\n        inputObject.lineRoutines = postConditionFunctionArray;\n    }\n    return inputObject;\n}\n\n//Export all routines.\nmodule.exports.extractLabel = extractLabel;\nmodule.exports.extractComment = extractComment;\nmodule.exports.extractIndentation = extractIndentation;\nmodule.exports.splitRoutinesAndArguments = splitRoutinesAndArguments;\nmodule.exports.extractPostConditional = extractPostConditional;\nmodule.exports.extractRoutines = extractRoutines;\n","\"use strict\";\n\n//Append Line Label and Lead Spacing.\nfunction appendLabel(inputObject, inputLine) {\n    if (inputObject.lineLabel) {\n        inputLine = inputLine + inputObject.lineLabel;\n    }\n    if (inputObject.lineLeadSpace) {\n        inputLine = inputLine + inputObject.lineLeadSpace;\n    }\n    return inputLine;\n}\n\n//Append Indentation to Label/Spacing.\nfunction appendIndentation(inputObject, inputLine) {\n    var tmpIndentation = \"\";\n    if (inputObject.lineIndentationArray) {\n        if (inputObject.lineIndentationArray.length > 0) {\n            for (var i in inputObject.lineIndentationArray) {\n                tmpIndentation = tmpIndentation + \".\" + inputObject.lineIndentationArray[i];\n            }\n            inputLine = inputLine + tmpIndentation;\n        }\n    }\n    return inputLine;\n}\n\n//Append Routines to Label/Spacing/Indentation.\nfunction appendRoutines(inputObject, inputLine) {\n    if (inputObject.lineRoutines) {\n        for (var i in inputObject.lineRoutines) {\n            if (inputObject.lineRoutines[i].mRoutine || inputObject.lineRoutines[i].mRoutine === \"\") {\n                //Leave off interval spacing for first Routine.\n                if (i === \"0\") {\n                    inputLine = inputLine + inputObject.lineRoutines[i].mRoutine;\n                } else {\n                    inputLine = inputLine + \" \" + inputObject.lineRoutines[i].mRoutine;\n                }\n                //Append Post-Conditional.\n                if (inputObject.lineRoutines[i].mPostConditional) {\n                    inputLine = inputLine + \":\" + inputObject.lineRoutines[i].mPostConditional;\n                }\n                //Append Arguments.\n                if (inputObject.lineRoutines[i].hasOwnProperty(\"mArguments\")) {\n                    inputLine = inputLine + \" \" + inputObject.lineRoutines[i].mArguments;\n                }\n            }\n        }\n    }\n    return inputLine;\n}\n\n//Append Comment.\nfunction appendComment(inputObject, inputLine) {\n    if (inputObject.hasOwnProperty(\"lineComment\")) {\n        inputLine = inputLine + \";\" + inputObject.lineComment;\n    }\n    return inputLine;\n}\n\n//Export all Routines.\nmodule.exports.appendLabel = appendLabel;\nmodule.exports.appendIndentation = appendIndentation;\nmodule.exports.appendRoutines = appendRoutines;\nmodule.exports.appendComment = appendComment;\n","'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport { autoSpaceEnter, autoSpaceTab } from './mumpsAutospace';\r\nimport { MumpsHighlighter, SemanticTokens } from './mumpsHighlighter';\r\nimport MumpsConfigurationProvider from './mumpsConfigurationProvider';\r\nimport MumpsDebugSession from './mumpsDebug';\r\nimport MumpsDocumentSymbolProvider from './mumpsDocumentSymbolProvider';\r\nimport MumpsDefinitionProvider from './mumpsDefinitionProvider';\r\nimport MumpsEvalutableExpressionProvider from './mumpsEvalutableExpressionProvider';\r\nimport MumpsFormattingHelpProvider from './mumpsFormattingHelpProvider';\r\nimport MumpsHoverProvider from './mumpsHoverProvider';\r\nimport MumpsReferenceProvider from './mumpsReferenceProvider';\r\nimport MumpsSignatureHelpProvider from './mumpsSignatureHelpProvider';\r\nimport MumpsDocumenter from './mumpsDocumenter';\r\nimport CompletionItemProvider from './mumpsCompletionItemProvider';\r\nimport expandCompress from './mumpsCompExp';\r\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider';\r\nimport fs = require('fs');\r\nlet timeout: ReturnType<typeof setTimeout> | undefined;\r\nconst entryRef: string | undefined = \"\";\r\nexport async function activate(context: vscode.ExtensionContext) {\r\n\tconst MUMPS_MODE: vscode.DocumentFilter = { language: 'mumps', scheme: 'file' };\r\n\t// register a configuration provider for 'mumps' debug type\r\n\tconst mumpsDiagnostics = vscode.languages.createDiagnosticCollection(\"mumps\");\r\n\tlet storage = \"\";\r\n\tif (context.storageUri !== undefined) {\r\n\t\tstorage = context.storageUri.fsPath;\r\n\t\tif (!fs.existsSync(storage)) {\r\n\t\t\tfs.mkdirSync(storage);\r\n\t\t}\r\n\t\tconst dbFile = storage + \"/labeldb.json\";\r\n\t\tcontext.subscriptions.push(vscode.languages.registerCompletionItemProvider(MUMPS_MODE, new CompletionItemProvider(dbFile)));\r\n\t}\r\n\tconst wsState = context.workspaceState;\r\n\tcontext.subscriptions.push(\r\n\t\tvscode.commands.registerCommand(\"mumps.documentFunction\", () => { MumpsDocumenter(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.autoSpaceEnter\", () => { autoSpaceEnter(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.autoSpaceTab\", () => { autoSpaceTab(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.toggleExpandedCommands\", () => { expandCompress(wsState) }),\r\n\t\tvscode.commands.registerCommand('mumps.getEntryRef', () => { return getEntryRef() }),\r\n\t\tvscode.languages.registerHoverProvider(MUMPS_MODE, new MumpsHoverProvider()),\r\n\t\tvscode.languages.registerDefinitionProvider(MUMPS_MODE, new MumpsDefinitionProvider()),\r\n\t\tvscode.languages.registerEvaluatableExpressionProvider(MUMPS_MODE, new MumpsEvalutableExpressionProvider()),\r\n\t\tvscode.languages.registerSignatureHelpProvider(MUMPS_MODE, new MumpsSignatureHelpProvider(), '(', ','),\r\n\t\tvscode.languages.registerDocumentSymbolProvider(MUMPS_MODE, new MumpsDocumentSymbolProvider()),\r\n\t\tvscode.languages.registerDocumentSemanticTokensProvider(MUMPS_MODE, MumpsHighlighter, SemanticTokens),\r\n\t\tvscode.languages.registerDocumentFormattingEditProvider(MUMPS_MODE, new MumpsFormattingHelpProvider()),\r\n\t\tvscode.languages.registerDocumentRangeFormattingEditProvider(MUMPS_MODE, new MumpsFormattingHelpProvider()),\r\n\t\tvscode.languages.registerReferenceProvider(MUMPS_MODE, new MumpsReferenceProvider()),\r\n\t\tvscode.debug.registerDebugConfigurationProvider('mumps', new MumpsConfigurationProvider()),\r\n\t\tvscode.debug.registerDebugAdapterDescriptorFactory('mumps', new InlineDebugAdapterFactory()),\r\n\t\tvscode.window.onDidChangeActiveTextEditor(editor => { if (editor) { triggerUpdateDiagnostics(editor.document, mumpsDiagnostics) } }),\r\n\t\tvscode.workspace.onDidChangeTextDocument(editor => { if (editor) { triggerUpdateDiagnostics(editor.document, mumpsDiagnostics) } }),\r\n\t\tvscode.workspace.onDidOpenTextDocument(document => { triggerUpdateDiagnostics(document, mumpsDiagnostics) })\r\n\t);\r\n}\r\n\r\nexport function deactivate() {\r\n\t// nothing to do\r\n}\r\n\r\nclass InlineDebugAdapterFactory implements vscode.DebugAdapterDescriptorFactory {\r\n\r\n\tcreateDebugAdapterDescriptor(): vscode.ProviderResult<vscode.DebugAdapterDescriptor> {\r\n\t\treturn new vscode.DebugAdapterInlineImplementation(new MumpsDebugSession());\r\n\t}\r\n}\r\n\r\nfunction triggerUpdateDiagnostics(document: vscode.TextDocument, collection: vscode.DiagnosticCollection) {\r\n\tif (timeout) {\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = undefined;\r\n\t}\r\n\ttimeout = setTimeout(() => new MumpsDiagnosticsProvider(document, collection), 500);\r\n}\r\n\r\nfunction getEntryRef() {\r\n\treturn vscode.window.showInputBox({\r\n\t\tplaceHolder: \"Please enter the Entry-Reference to start Debugging\",\r\n\t\tvalue: entryRef\r\n\t})\r\n}\r\n\r\n","interface ParameterDefinition {\r\n\tname: string,\r\n\ttype: string,\r\n\tdescription?: string\r\n\toptional?: boolean\r\n}\r\nexport interface languageToken {\r\n\tname: string,\r\n\ttype: string,\r\n\tabbreviation: string,\r\n\tdescription: string,\r\n\tparameters?: ParameterDefinition[],\r\n\treturns?: { type: string }\r\n}\r\nexport const definitionsArray: languageToken[] =\r\n\t[{\r\n\t\t\"name\": \"BREAK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"B\",\r\n\t\t\"description\": \"Suspend execution or exit a block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"CLOSE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"C\",\r\n\t\t\"description\": \"Release an I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"DO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"D\",\r\n\t\t\"description\": \"Execute a program, section of code or block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ELSE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"E\",\r\n\t\t\"description\": \"Conditional execution based on $test\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"FOR\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"F\",\r\n\t\t\"description\": \"Iterative execution of a line or block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"GOTO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"G\",\r\n\t\t\"description\": \"Transfer of control to a label or program\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"HALT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"H\",\r\n\t\t\"description\": \"Terminate execution\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"HANG\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"H\",\r\n\t\t\"description\": \"Delay execution for a specified period of time\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"IF\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"I\",\r\n\t\t\"description\": \"Conditional execution of remainder of line\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"JOB\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"J\",\r\n\t\t\"description\": \"Start an independent process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"LOCK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"L\",\r\n\t\t\"description\": \"Exclusive access/release named resource\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"KILL\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"K\",\r\n\t\t\"description\": \"Deletes a local or global variable\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"MERGE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"M\",\r\n\t\t\"description\": \"Copy arrays\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"NEW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"N\",\r\n\t\t\"description\": \"Create new copies of local variables\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"OPEN\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"O\",\r\n\t\t\"description\": \"Obtain ownership of a device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"QUIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"Q\",\r\n\t\t\"description\": \"End a for loop or exit a block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"READ\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"R\",\r\n\t\t\"description\": \"Read from a device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SET\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"S\",\r\n\t\t\"description\": \"Assign a value to a global or local variable\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TCOMMIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TC\",\r\n\t\t\"description\": \"Commit a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TRESTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TRE\",\r\n\t\t\"description\": \"Roll back / restart a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TROLLBACK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TRO\",\r\n\t\t\"description\": \"Roll back a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TSTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TS\",\r\n\t\t\"description\": \"Begin a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"USE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"U\",\r\n\t\t\"description\": \"Select which device to read/write\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"VIEW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"V\",\r\n\t\t\"description\": \"Implementation defined\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"WRITE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"W\",\r\n\t\t\"description\": \"Write to device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"XECUTE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"X\",\r\n\t\t\"description\": \"Dynamically execute strings\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZALLOCATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZA\",\r\n\t\t\"description\": \"Reserves the specified name\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZBREAK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZB\",\r\n\t\t\"description\": \"Sets or clears a routine breakpoint\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZCOMPILE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZCOM\",\r\n\t\t\"description\": \"Compiles a routine\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZCONTINUE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZC\",\r\n\t\t\"description\": \"Continues excutioen after a break\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZDEALLOCATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZD\",\r\n\t\t\"description\": \"Release the specified name\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZEDIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZE\",\r\n\t\t\"description\": \"Invokes editor for routine editing\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZGOTO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZG\",\r\n\t\t\"description\": \"Moves to EntryRef on a given stacklevel\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZHALT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZHALT\",\r\n\t\t\"description\": \"Stops program execution with a return code\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZHELP\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZH\",\r\n\t\t\"description\": \"Accessses M help library\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZKILL\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZK\",\r\n\t\t\"description\": \"Kills a data value but not the descendants\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZLINK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZL\",\r\n\t\t\"description\": \"Compiles an links a routine to the current process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZMESSAGE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZM\",\r\n\t\t\"description\": \"Raises an exception specified by given code\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZPRINT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZP\",\r\n\t\t\"description\": \"Displays source code lines\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZRUPDATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZRUPDATE\",\r\n\t\t\"description\": \"Publishes the new versions of routines to subscribers\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSHOW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZSH\",\r\n\t\t\"description\": \"Displays information about the current environment\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSTEP\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZST\",\r\n\t\t\"description\": \"Controls routine execution\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSYSTEM\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZSY\",\r\n\t\t\"description\": \"Creates a child of the current process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTCOMMIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTC\",\r\n\t\t\"description\": \"Marks the end of a logical transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTRIGGER\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTR\",\r\n\t\t\"description\": \"Invokes specified Global Triggers\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTSTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTS\",\r\n\t\t\"description\": \"Marks the beginning of a logical transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZWITHDRAW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZWI\",\r\n\t\t\"description\": \"Kills a data value but not the descendants\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZWRITE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZWR\",\r\n\t\t\"description\": \"Displays a complete global or local variable\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"name\": \"$DEVICE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$D\",\r\n\t\t\"description\": \"Status of the current device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ECODE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$EC\",\r\n\t\t\"description\": \"List of unresolved error codes\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ESTACK\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ES\",\r\n\t\t\"description\": \"Number of stack levels; NEWing $ESTACK resets it to 0\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ETRAP\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ET\",\r\n\t\t\"description\": \"Code to execute on error\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$HOROLOG\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$H\",\r\n\t\t\"description\": \"Days,seconds time stamp\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$IO\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$I\",\r\n\t\t\"description\": \"Current IO unit\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$JOB\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$J\",\r\n\t\t\"description\": \"Current process ID\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$KEY\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$K\",\r\n\t\t\"description\": \"String that terminated the most recent READ command\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$PRINCIPAL\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$P\",\r\n\t\t\"description\": \"Principal I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QUIT\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$Q\",\r\n\t\t\"description\": \"Whether the current block of code was called as an extrinsic function (e.g. via $$)\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STACK\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ST\",\r\n\t\t\"description\": \"Current process stack level\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STORAGE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$S\",\r\n\t\t\"description\": \"Amount of memory available, in bytes\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$SYSTEM\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$SY\",\r\n\t\t\"description\": \"System ID\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TEST\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$T\",\r\n\t\t\"description\": \"Result of prior IF command or READ/OPEN/LOCK command if invoked with a timeout\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TLEVEL\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$TL\",\r\n\t\t\"description\": \"Number transactions in process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TRESTART\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$TR\",\r\n\t\t\"description\": \"Number of restarts on current transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$X\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$X\",\r\n\t\t\"description\": \"Position of horizontal cursor in current I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$Y\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$Y\",\r\n\t\t\"description\": \"Position of vertical cursor in current I/O device\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"name\": \"$ASCII\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$A\",\r\n\t\t\"description\": \"ASCII numeric code of a character\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to get a code from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based position of the character in VALUE; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$CHAR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$C\",\r\n\t\t\"description\": \"ASCII character from numeric code\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"CODE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Numeric code to convert to a character\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional codes to convert to characters\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$DATA\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$D\",\r\n\t\t\"description\": \"Returns data about a variable: 0: if undefined, 1: if valued but has no descendants, 10: if has descendants but no value; 11: if has both a value and descendants\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to get data about, e.g. ^X\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$EXTRACT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$E\",\r\n\t\t\"description\": \"Extract a substring\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to get a substring from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"START\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based start index; defaults to 1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"END\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based end index; defaults to 2\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$FIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$F\",\r\n\t\t\"description\": \"Find the 1-based index after the end of a substring or 0 if not found\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"WITHIN\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to search in\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The substring to search for\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"START\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based index to start searching from; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$FNUMBER\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$FN\",\r\n\t\t\"description\": \"Format a number\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"NUMBER\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The number to format\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FORMAT\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"One or more of the following: +: forces \\\"+\\\" on positive numbers; -: omits the \\\"-\\\" on negative numbers; ,: comma-separates the number by thousands; T: puts the sign in the trailing position; P: wraps negative numbers in parentheses and wraps positive numbers in spaces and may only be combined with comma (,)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIGITS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The numer of digits after the decimal point\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$GET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$G\",\r\n\t\t\"description\": \"Get default or actual value\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to query, e.g. ^X(THIS,THAT)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DEFAULT\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"A value to use if VAR has no value; defaults to \\\"\\\"\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$JUSTIFY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$J\",\r\n\t\t\"description\": \"Right-justify a number or string by prefixing with spaces\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to justify\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MINLENGTH\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The minimum length of the result\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIGITS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The number of digits after the decimal point; providing this argument makes $JUSTIFY treat VALUE as a number\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$LENGTH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$L\",\r\n\t\t\"description\": \"Determine string length\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"If present, $LENGTH returns one more than the number of occurences of SUBSTRING in VALUE\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$NAME\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$NA\",\r\n\t\t\"description\": \"Evaluate and describe a variable\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to evaluate, including naked references\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MAXSUBSCRIPT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The maximum number of subscripts to evaluate if VAR is an array\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ORDER\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$O\",\r\n\t\t\"description\": \"Find the subscript of the next or previous node\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIRECTION\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"1: forward, -1: reverse; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$PIECE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$P\",\r\n\t\t\"description\": \"Extract substring based on pattern\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A delimiting string within VALUE\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PIECE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Which 1-based piece of the split string to return; defaults to 1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LASTPIECE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based index of the last piece of the split string to return; defaults to PIECE\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QLENGTH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$QL\",\r\n\t\t\"description\": \"Number of subscripts in an array reference\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QSUBSCRIPT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$QS\",\r\n\t\t\"description\": \"Value of specified subscript\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSCRIPT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The 1-based index of the subscript to find; special values include -1: environment and 0: unsubscripted name\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QUERY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$Q\",\r\n\t\t\"description\": \"Next item in an array; invoke multiple times to iterate the entire array\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$RANDOM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$R\",\r\n\t\t\"description\": \"Random number\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LIMIT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The generated random number will be between 0 (inclusive) and this LIMIT (exclusive)\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$REVERSE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$RE\",\r\n\t\t\"description\": \"String in reverse order\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to reverse\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$SELECT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$S\",\r\n\t\t\"description\": \"Value of first true argument\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"TVEXPR\",\r\n\t\t\t\"type\": \"expression\",\r\n\t\t\t\"description\": \"An expression to test for truth, followed by a colon and a value, e.g. i=42:\\\"Answered!\\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"expression\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional truth value expressions to test; the last expression often starts with 1: to avoid errors\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STACK\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ST\",\r\n\t\t\"description\": \"Returns information about the process stack\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LEVEL\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"-1: returns the highest stack level; 0: returns information about how the program was started; 1 to $STACK(-1): returns information about how the stack level was created\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FIELD\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"\\\"MCODE\\\": the line of code that was executed; \\\"PLACE\\\": location of the executed code; \\\"ECODE\\\": the error code(s) added at the stack level, if any\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TEXT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$T\",\r\n\t\t\"description\": \"Returns the text of a line of M[UMPS] code\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"REFERENCE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A reference to a code location, e.g. 'LABEL' or '+4^PROGRAM' or 'LABEL^PROGRAM', etc.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TRANSLATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$TR\",\r\n\t\t\"description\": \"Translate characters in a string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The value to translate\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"OLD\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Characters in VALUE to replace\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NEW\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Characters to replace OLD characters with; if not provided then OLD characters will be removed\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$VIEW\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$V\",\r\n\t\t\"description\": \"Implementation defined\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZAHANDLE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZAH\",\r\n\t\t\"description\": \"Returns unique identifier for a name or an alias container\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to find the handle for e.g\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZASCII\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZA\",\r\n\t\t\"description\": \"ASCII numeric code of a 8-bit character\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to get a code from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based position of the byte in VALUE; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZATRANSFORM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZATR\",\r\n\t\t\"description\": \"Returns the transformed representation of the first argument expr in a normalized form using the alternative transform specified by the second argument intexpr; the return can be used as an operand to the follows (]) or sorts-after (]]) operator such that, if both operands are in the normalized form, the result is independent of alternative collation.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"String to transform\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ID\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"ID of the alternative transform to use\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NORMALIZE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"whether the transform is to normalized form, by default or if zero (0), or, if one (1), the reverse transform from the normalized to the native form\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MCOLLATION\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"whether to use standard M collation of numbers before strings, the default or zero (0), or to sort all values as strings (1)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITAND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITAND\",\r\n\t\t\"description\": \"Performs a logical AND function on two bit strings and returns a bit string equal in length to the shorter of the two arguments (containing set bits in those positions where both of the input strings have set bits). Positions corresponding to positions where either of the input strings have a cleared bit, also have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITCOUNT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITCOUNT\",\r\n\t\t\"description\": \"Returns the number of ON bits in a bit string.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"EXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITFIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITFIND\",\r\n\t\t\"description\": \"Performs the analog of $FIND() on a bit string. It returns an integer that identifies the position after the first position equal to a truth-valued expression that occurs at, or after, the specified starting position\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The truth-valued expression specifies the bit value for which $ZBITFIND() searches (1 or 0)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The optional integer argument specifies the starting position at which to begin the search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITGET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITGET\",\r\n\t\t\"description\": \"\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The integer argument specifies the position in the string for which the value is requested\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITLEN\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITLEN\",\r\n\t\t\"description\": \"Returns the length of a bit string, in bits\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITNOT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITNOT\",\r\n\t\t\"description\": \"Returns a copy of the bit string with each input bit position inverted\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to invert\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITOR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITOR\",\r\n\t\t\"description\": \"Performs a bitwise logical OR on two bit strings, and returns a bit string equal in length to the longer of the two arguments (containing set bits in those positions where either or both of the input strings have set bits). Positions that correspond to positions where neither input string has a set bit have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITSET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITSET\",\r\n\t\t\"description\": \"Returns an edited copy of the input bit string with a specified bit set to the value of the truth-valued expression\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the input bit string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The integer expression specifies the position of the bit to manipulate. Arguments that are negative, zero, or exceed the length of the bit string produce a run-time error. $ZBIT functions count the first bit as position one (1)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The truth-valued expression specifies the value to which to set the specified bit (0 or 1)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITSTR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITSTR\",\r\n\t\t\"description\": \"Returns a bit string of a specified length with all bit positions initially set to either zero or one\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LENGTH\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"description\": \"The integer expression specifies the length of the bit string to return; arguments that exceed the maximum length of 253,952 produce a run-time error\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The optional truth-valued expression specifies the value to which all bit positions should initially be set (0 or 1). If this argument is missing, the bits are set to zero\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITXOR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITXOR\",\r\n\t\t\"description\": \"Performs a bitwise exclusive OR on two bit strings, and returns a bit string equal in length to the shorter of the two arguments (containing set bits in those positions where either (but not both) of the input strings have set bits). Positions that correspond to positions where neither or both input strings have a set bit have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCHAR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZCH\",\r\n\t\t\"description\": \"Returns a string composed of bytes represented by the integer octet values specified in its argument(s).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"Integer\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"description\": \"The integer expression(s) specify the numeric byte value of the byte(s) $ZCHAR() returns\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional codes to convert to characters\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCOLLATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZCO\",\r\n\t\t\"description\": \"Returns the transformed representation of the first argument glvn in a normalized form using the alternative transform specified by the second argument intexpr; the return can be used as an operand to the follows (]) or sorts-after (]]) operator such that, if both operands are in the normalized form, the result is independent of alternative collation.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"var\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The subscripted or unsubscripted global or local variable name specifies the key to transform\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TransformId\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Specifies the ID of the alternative transform to use\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NormForm\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies whether the transform is to normalized form, by default or if zero (0), or, if one (1), the reverse transform from the normalized to the native form.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCONVERT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns its first argument as a string or value converted to a different encoding or numeric base. The two argument form changes the encoding for case within the ASCII character set. The three argument form changes the encoding scheme or base. Supported bases are decimal 'DEC' and 'HEX', case insensitive).\",\r\n\t\t\"abbreviation\": \"$ZCO\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"string or value to convert. $ZCONVERT() generates a run-time error if for Unicode conversion if the string contains a code-point value that is not in the character set, or for base conversion if the value to be converted is out of range\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"code\",\r\n\t\t\t\"description\": \"Specifies a code that determines the form of the result.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"code\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Code that specifies the character set or base of the result\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZDATA\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZDATA\",\r\n\t\t\"description\": \"Extends $DATA() to reflect the current alias state of the lvn or name argument to identify alias and alias container variables. It treats variables joined through pass-by-reference as well as TP RESTART variables within a transaction as alias variables. However, it does not distinguish nodes having alias containers among their descendants.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"var\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"Returns data about a variable: 0: if undefined, 1: if valued but has no descendants, 10: if has descendants but no value; 11: if has both a value and descendants; 100; 101; 111\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZDATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns a date and/or time formatted as text based on an argument formatted in the manner of $HOROLOG\",\r\n\t\t\"abbreviation\": \"$ZDATE\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"$HOROLOG format of the date and/or time\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Pattern of desired output p.e. 'YEAR-MM-DD'\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies a list of 12 month codes, separated by commas (,)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies a list of seven day codes, separated by commas (,)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZEXTRACT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZE\",\r\n\t\t\"description\": \"Returns a byte sequence from a given sequence of octets (8-bit bytes).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies a sequence of octets (8-bit bytes) from which $ZEXTRACT() derives a byte sequence\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"intexpr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the starting byte position in the byte string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"intexpr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the ending byte position for the result\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZFIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZF\",\r\n\t\t\"description\": \"Returns an integer byte position that locates the occurrence of a byte sequence within a sequence of octets(8-bit bytes).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the sequence of octets (8-bit bytes) in which $ZFIND() searches for the byte sequence\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \" specifies the byte sequence for which $ZFIND() searches\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Identifies the starting byte position for the $ZFIND() search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZGETJPI\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns job or process information of the specified process\",\r\n\t\t\"abbreviation\": \"$ZGETJPI\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Identifies the PID of the target job. If expr1 is an empty string (“”), $ZGETJPI() returns information about the current process.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the item keyword identifying the type of information returned\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZJOBEXAM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the full specification of the file specified by the optional expr1 argument into which the function places a ZSHOW output specified by expr2\",\r\n\t\t\"abbreviation\": \"$ZJOBEXAM\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"A template output device specification. It can be a device, a file directory, or a file name.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Defaulting to '*', expr2 specifies the ZSHOW Information Codes of data to be included in the output\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZJUSTIFY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZJ\",\r\n\t\t\"description\": \"\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"The expression specifies the sequence of octets formatted by $ZJUSTIFY().\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Specifies the minimum size of the resulting byte sequence.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The number of digits after the decimal point; providing this argument makes $ZJUSTIFY treat expr1 as a number\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZLENGTH\",\r\n\t\t\"abbreviation\": \"$ZL\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the length of a sequence of octets measured in bytes, or in “pieces” separated by a delimiter specified by one of its arguments\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the sequence of octets that $ZLENGTH() “measures”.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"specifies the delimiter that defines the measure; if this argument is missing, $ZLENGTH() returns the number of bytes in the sequence of octets.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZMESSAGE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns a message string associated with a specified status code .\",\r\n\t\t\"abbreviation\": \"ZM\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The integer expression specifies the status code for which $ZMESSAGE() returns error message text .\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPARSE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Expands a file name to a full pathname and then returns the full pathname or one of its fields (directory, name, or extension).\",\r\n\t\t\"abbreviation\": \"$ZPARSE\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the file name; if the file name is not valid, $ZPARSE() returns a null string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the field of the pathname that $ZPARSE() returns\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specify default values to use during file name expansion for missing fields (directory, name, or extension)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specify default values to use during file name expansion for missing fields (directory, name, or extension)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr5\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the mode or type of parse that $ZPARSE() performs.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPIECE\",\r\n\t\t\"abbreviation\": \"$ZPI\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Return a sequence of bytes delimited by a specified byte sequence made up of one or more bytes.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"specifies the sequence of octets from which $ZPIECE() takes its result.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the delimiting byte sequence that determines the piece 'boundaries'\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the beginning piece to return\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the last piece to return\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPREVIOUS\",\r\n\t\t\"abbreviation\": \"$ZP\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the subscript of the previous local or global variable name in collation sequence within the array level specified by its argument.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"glvn\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"Specifies the node prior to which $ZPREVIOUS() searches backwards for a defined node with data and/or descendants.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZQGBLMOD\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Enables an application to determine whether it can safely apply a lost transaction to the database.\",\r\n\t\t\"abbreviation\": \"$ZQGBLMOD\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"gvn\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The subscripted or non-subscripted global variable name (gvn) specifies the target node.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"boolean\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSEARCH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Attempts to locate a file matching the specified file name. If the file exists, it returns the file name; if the file does not exist, it returns the null string.\",\r\n\t\t\"abbreviation\": \"$ZSEARCH\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Contains a file name, with or without wildcards, for which $ZSEARCH() attempts to locate a matching file.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies an integer expression that is a stream number. It can be any value from 0 to 255 for each search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSIGPROC\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Sends a signal to a process. The format for the $ZSIGPROC function is\",\r\n\t\t\"abbreviation\": \"$ZSIGPROC\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The pid of the process to which the signal is to be sent.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The system signal name (e.g., 'SIGUSR1' or just 'USR1').\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSOCKET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns information about a SOCKET device and its attached sockets\",\r\n\t\t\"abbreviation\": \"$ZSOCKET\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the SOCKET device name\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies a keyword identifying the type of information returned\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the index (starting at zero) of a socket attached to the device\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies an individual delimiter when the second expression specifies DELIMITER.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}\r\n\t];\r\n","import * as vscode from 'vscode';\r\nimport em = require('emcellent');\r\n\r\nasync function autoSpaceEnter() {\r\n\tconst editor = vscode.window.activeTextEditor\r\n\tif (editor) {\r\n\t\tconst pos = editor.selection.active\r\n\t\tconst currentLine = editor.document.lineAt(pos.line).text;\r\n\t\tconst parsed = em.parse(currentLine);\r\n\t\tlet newLine = '';\r\n\t\tif (pos.character !== 0) {\r\n\t\t\t//check for removing a trailing .\r\n\t\t\tif ((parsed[0].lineRoutines === undefined || parsed[0].lineRoutines.length === 0) && currentLine.indexOf(\";\") === -1 && parsed[0].lineIndentationArray !== undefined && parsed[0].lineIndentationArray.length > 0) {\r\n\t\t\t\tparsed[0].lineIndentationArray.splice(-1)\r\n\t\t\t\teditor.edit((editBuilder) => {\r\n\t\t\t\t\teditBuilder.replace(new vscode.Range(pos.with(pos.line, 0), pos.with(pos.line, currentLine.length)), em.render(parsed))\r\n\t\t\t\t})\r\n\t\t\t\t//check for adding indentation to the new line\r\n\t\t\t} else {\r\n\t\t\t\tif (parsed[0].lineIndentationArray === undefined) {\r\n\t\t\t\t\tparsed[0].lineIndentationArray = []\r\n\t\t\t\t}\r\n\t\t\t\tif (lineContainsNoParamDo(parsed[0])) {\r\n\t\t\t\t\tparsed[0].lineIndentationArray.push(\" \")\r\n\t\t\t\t}\r\n\t\t\t\tparsed[0].lineRoutines = []\r\n\t\t\t\tdelete parsed[0].lineComment\r\n\t\t\t\tdelete parsed[0].lineLabel\r\n\t\t\t\tnewLine = em.render(parsed);\r\n\t\t\t}\r\n\t\t}\r\n\t\teditor.edit((editBuilder) => {\r\n\t\t\teditBuilder.insert(pos, \"\\n\" + newLine);\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction lineContainsNoParamDo(parsed) {\r\n\tconst cmds = parsed.lineRoutines;\r\n\tif (cmds) {\r\n\t\tfor (let i = 0; i < cmds.length; i++) {\r\n\t\t\tif (cmds[i].mRoutine.match(/(d|do)/i) && !cmds[i].mArguments) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nasync function autoSpaceTab() {\r\n\r\n\tconst editor = vscode.window.activeTextEditor\r\n\tif (editor) {\r\n\t\tconst pos = editor.selection.active\r\n\t\tconst currentLine = editor.document.lineAt(pos.line).text;\r\n\t\tconst parsed = em.parse(currentLine);\r\n\t\tif ((parsed[0].lineRoutines === undefined || parsed[0].lineRoutines.length === 0) &&\r\n\t\t\tcurrentLine.indexOf(\";\") === -1 && parsed[0].lineIndentationArray !== undefined &&\r\n\t\t\tparsed[0].lineIndentationArray.length > 0) {\r\n\t\t\tparsed[0].lineIndentationArray.push(\" \")\r\n\t\t\teditor.edit((editBuilder) => {\r\n\t\t\t\tif (currentLine.charAt(pos.character - 1) === \" \") {\r\n\t\t\t\t\teditBuilder.insert(pos.with(pos.line, pos.character), \". \")\r\n\t\t\t\t} else {\r\n\t\t\t\t\teditBuilder.insert(pos.with(pos.line, pos.character), \" . \")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\teditor.edit((eb) => {\r\n\t\t\t\teb.insert(pos, \"\\t\")\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { autoSpaceTab, autoSpaceEnter };","import * as vscode from 'vscode';\nimport { MumpsLineParser } from './mumpsLineParser';\nconst parser = new MumpsLineParser;\nexport default function expandCompress(state: vscode.Memento) {\n\tlet doExpand = true;\n\tconst editor = vscode.window.activeTextEditor\n\tif (editor) {\n\t\tconst filename = editor.document.fileName;\n\t\tif (state.get(filename + \"_expandState\") === true) {\n\t\t\tdoExpand = false;\n\t\t\tstate.update(filename + \"_expandState\", false);\n\t\t} else {\n\t\t\tstate.update(filename + \"_expandState\", true);\n\t\t}\n\t\tconst document = editor.document.getText();\n\t\tconst lines = document.split(\"\\n\")\n\t\tconst lineCount = lines.length;\n\t\tif (lineCount) {\n\t\t\tconst lastLineLength = lines[lineCount - 1].length;\n\t\t\tfor (let i = 0; i < lineCount; i++) {\n\t\t\t\tconst info = parser.expandCompressLine(lines[i], doExpand);\n\t\t\t\tif (info.errorText === '') {\n\t\t\t\t\tlines[i] = info.lineText;\n\t\t\t\t}\n\t\t\t}\n\t\t\teditor.edit(editBuilder => {\n\t\t\t\teditBuilder.replace(new vscode.Range(0, 0, lineCount, lastLineLength), lines.join(\"\\n\"));\n\t\t\t})\n\t\t}\n\t}\n}\n","import * as vscode from 'vscode';\r\nimport { MumpsLineParser, LabelInformation } from './mumpsLineParser';\r\nconst parser = new MumpsLineParser();\r\nimport fs = require('fs');\r\n\r\ninterface ItemHint {\r\n\tlineStatus: string,\r\n\tstartstring: string\r\n}\r\ninterface LabelItem {\r\n\troutine: string,\r\n\tlabel: string,\r\n\tline: string\r\n}\r\ninterface DbItem {\r\n\tlabels: LabelItem[],\r\n\troutines: { path: string }\r\n}\r\nexport default class CompletionItemProvider {\r\n\t/**\r\n * Provides the completion items for the supplied words.\r\n *\r\n * @param {TextDocument} document\r\n * @param {Position} position\r\n * @param {CancellationToken} token\r\n * @returns\r\n */\r\n\tprivate _labelsReady: boolean;\r\n\tprivate _labelDB: DbItem;\r\n\tprivate _filesToCheck: number;\r\n\tprivate _dbfile: string;\r\n\tprivate _document: vscode.TextDocument;\r\n\tconstructor(labeldb: string) {\r\n\t\tthis._labelsReady = false;\r\n\t\tthis._dbfile = labeldb;\r\n\t\tthis._refreshLabelDB();\r\n\t}\r\n\tprovideCompletionItems(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\t//let word = document.getText(document.getWordRangeAtPosition(position));\r\n\t\tconst line = document.getText(new vscode.Range(new vscode.Position(position.line, 0), position))\r\n\t\tconst status = getLineStatus(line, position.character);\r\n\t\tthis._document = document;\r\n\t\tlet clean: Array<vscode.CompletionItem> = [];\r\n\t\tif (this._labelsReady && status.lineStatus === 'jumplabel') {\r\n\t\t\tconst replaceRange = new vscode.Range(new vscode.Position(position.line, position.character - status.startstring.length), position)\r\n\t\t\tclean = this._findLabel(status.startstring, clean, replaceRange);\r\n\t\t}\r\n\t\treturn clean;\r\n\t}\r\n\tprivate _refreshLabelDB() { // Look for all Labels in .m-Routines and them + Comments\r\n\t\tif (!fs.existsSync(this._dbfile)) {\r\n\t\t\tconst db = {\r\n\t\t\t\tlabels: [{ routine: '', label: '' }],\r\n\t\t\t\troutines: {}\r\n\t\t\t}\r\n\t\t\tfs.writeFileSync(this._dbfile, JSON.stringify(db));\r\n\t\t}\r\n\t\tfs.readFile(this._dbfile, (err, data) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tthis._labelDB = JSON.parse(data.toString());\r\n\t\t\t\tlet dbChanged = false;\r\n\t\t\t\tvscode.workspace.findFiles('*.m').then((files) => {\r\n\t\t\t\t\tthis._filesToCheck = files.length;\r\n\t\t\t\t\tfor (let i = 0; i < files.length; i++) {\r\n\t\t\t\t\t\tconst path = files[i].fsPath;\r\n\t\t\t\t\t\tfs.stat(path, (err, stats) => {\r\n\t\t\t\t\t\t\tif (!err) {\r\n\t\t\t\t\t\t\t\tconst ms = this._labelDB.routines[path];\r\n\t\t\t\t\t\t\t\tif (ms === undefined || stats.mtimeMs > ms) {\r\n\t\t\t\t\t\t\t\t\tthis._labelDB.routines[path] = stats.mtimeMs;\r\n\t\t\t\t\t\t\t\t\tdbChanged = true;\r\n\t\t\t\t\t\t\t\t\tif (stats.size < 50000) {  //parse only Files <50K\r\n\t\t\t\t\t\t\t\t\t\tthis._refreshFileLabels(path);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._labelsReady = true;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tprivate _checkReady(dbChanged: boolean) {\t// Check if all .m Files are processed and save LabelDB then\r\n\t\tif (--this._filesToCheck === 0) {\r\n\t\t\tif (dbChanged) {\r\n\t\t\t\tfs.writeFile(this._dbfile, JSON.stringify(this._labelDB), (err) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tvscode.window.showErrorMessage(\"Error writing Label DB\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate _refreshFileLabels(path: string) {  // Refresh all Labels of a changed .m File\r\n\t\tlet routine = path.replace(/\\\\\\\\/g, '/').split('/').pop();\r\n\t\troutine = routine?.split('.')[0].replace('_', '%') ?? \"\";\r\n\t\tfs.readFile(path, 'utf8', (err, content: string) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconst lines = content.split('\\n');\r\n\t\t\t\tlet label: RegExpMatchArray | null = null;\r\n\t\t\t\tthis._labelDB.labels = this._labelDB.labels.filter((label) => {\r\n\t\t\t\t\treturn label.routine !== routine;\r\n\t\t\t\t})\r\n\t\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t\t\tif (routine) {\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tthis._labelDB.labels.push({ label: '*FL', routine, line: lines[0] });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (label = lines[i].match(/^[%A-Za-z0-9][A-Za-z0-9]{0,31}/)) {\r\n\t\t\t\t\t\t\tthis._labelDB.labels.push({ label: label[0], routine, line: lines[i] })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._checkReady(true);\r\n\t\t});\r\n\t}\r\n\tprivate _findLabel(startstring: string, list: Array<vscode.CompletionItem>, replaceRange: vscode.Range) {\r\n\t\t//let hits = 0;\r\n\t\tlet hitlist: LabelItem[] = [];\r\n\t\tconst localLabels: LabelInformation[] = parser.getLabels(this._document.getText());\r\n\t\tlet sortText = '';\r\n\t\tif (startstring.charAt(0) === '^') {\r\n\t\t\tconst suchstring = startstring.substring(1);\r\n\t\t\thitlist = this._labelDB.labels.filter((item) => {\r\n\t\t\t\treturn item.routine.startsWith(suchstring);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (startstring.indexOf('^') !== -1) {\r\n\t\t\t\tconst label = startstring.split('^')[0];\r\n\t\t\t\tconst routinepart = startstring.split('^')[1];\r\n\t\t\t\thitlist = this._labelDB.labels.filter((item) => {\r\n\t\t\t\t\tconst fits = item.label === label && item.routine.startsWith(routinepart);\r\n\t\t\t\t\treturn fits;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < localLabels.length; i++) {\r\n\t\t\t\t\tif (localLabels[i].name.startsWith(startstring)) {\r\n\t\t\t\t\t\thitlist.push({ routine: '', label: localLabels[i].name, line: this._document.lineAt(localLabels[i].line).text })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thitlist = hitlist.concat(this._labelDB.labels.filter((item) => {\r\n\t\t\t\t\tconst fits = item.label.startsWith(startstring);\r\n\t\t\t\t\treturn fits;\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < hitlist.length && i < 100; i++) {\r\n\t\t\tsortText = '100';\r\n\t\t\tconst item = hitlist[i];\r\n\t\t\tlet label = item.routine !== '' ? item.label + '^' + item.routine : item.label;\r\n\t\t\tif (label === startstring) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (item.label === \"*FL\") {\r\n\t\t\t\tif (!startstring.startsWith('^')) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlabel = '^' + item.routine;\r\n\t\t\t}\r\n\t\t\tlet detail = ''\r\n\t\t\tif (item.line.charAt(item.label.length) === '(') {\r\n\t\t\t\tif (item.line.indexOf(')') !== -1) {\r\n\t\t\t\t\tdetail = item.line.split(')')[0] + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (item.line.indexOf(';') !== -1) {\r\n\t\t\t\tdetail += item.line.substring(item.line.indexOf(';') + 1);\r\n\t\t\t}\r\n\r\n\t\t\tif (detail.length > 0) { sortText = '099'; } //prefer documented lables\r\n\t\t\tif (item.routine === '') { // local labels first\r\n\t\t\t\tsortText = '098';\r\n\t\t\t}\r\n\t\t\tlist.push({ label, detail, sortText, range: replaceRange });\r\n\t\t}\r\n\t\treturn list;\r\n\t}\r\n}\r\nfunction getLineStatus(line: string | undefined, position: number): ItemHint {\r\n\tlet lineStatus = 'lineStart';\r\n\tlet lookPosition = 0;\r\n\tlet lastCommand = '';\r\n\tlet startstring = '';\r\n\tlet isInsidePostcond = false;\r\n\tif (line) {\r\n\t\twhile (lookPosition < position) {\r\n\t\t\tconst char = line.substring(lookPosition, ++lookPosition);\r\n\t\t\tconst isWhiteSpace = (char === \" \" || char === \"\\t\");\r\n\t\t\tconst isBeginOfVariable = char.match(/[A-Za-z%^]/);\r\n\t\t\tconst isAlphaChar = char.match(/[A-Za-z]/);\r\n\t\t\t//let isAlphanumeric=char.match(/[A-Za-z0-9%]/);\r\n\t\t\t//let isOperand = char.match(/[*+-/\\[\\]']/);\r\n\t\t\tif (lineStatus !== 'string' && char === ';') {\r\n\t\t\t\treturn { lineStatus: 'comment', startstring: '' };\r\n\t\t\t}\r\n\t\t\tif (!isBeginOfVariable) {\r\n\t\t\t\tif (startstring !== '' && char.match(/[0-9]/)) {\r\n\t\t\t\t\tstartstring += char\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstartstring = '';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tstartstring += char;\r\n\t\t\t}\r\n\t\t\tswitch (lineStatus) {\r\n\t\t\t\tcase 'argument': {\r\n\t\t\t\t\tif (isWhiteSpace) {\r\n\t\t\t\t\t\tif (isInsidePostcond) {\r\n\t\t\t\t\t\t\tisInsidePostcond = false;\r\n\t\t\t\t\t\t\tif (lastCommand.match(/[D|DO|G|GOTO|J|JOB]/i)) {\r\n\t\t\t\t\t\t\t\tlineStatus = 'jumplabel'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlineStatus = 'command';\r\n\t\t\t\t\t\t\tlastCommand = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (char === '\"') {\r\n\t\t\t\t\t\tlineStatus = 'string';\r\n\t\t\t\t\t} else if (isBeginOfVariable) {\r\n\t\t\t\t\t\tlineStatus = 'variable';\r\n\t\t\t\t\t} else if (char === \"$\") {\r\n\t\t\t\t\t\tlineStatus = 'function';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'command': {\r\n\t\t\t\t\tif (char === \":\") {\r\n\t\t\t\t\t\tlineStatus = 'argument';\r\n\t\t\t\t\t\tisInsidePostcond = true;\r\n\t\t\t\t\t} else if (isAlphaChar) {\r\n\t\t\t\t\t\tlastCommand += char;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else if (isWhiteSpace) {\r\n\t\t\t\t\t\tlineStatus = 'argument';\r\n\t\t\t\t\t\tif (lastCommand.match(/[D|DO|G|GOTO|J|JOB]/i)) {\r\n\t\t\t\t\t\t\tlineStatus = 'jumplabel'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlineStatus = 'error';\r\n\t\t\t\t\t\treturn { lineStatus: 'error', startstring: '' };\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'function': {\r\n\t\t\t\t\tif (isWhiteSpace) {\r\n\t\t\t\t\t\tif (isInsidePostcond) {\r\n\t\t\t\t\t\t\tisInsidePostcond = false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlineStatus = 'command';\r\n\t\t\t\t\t\t\tlastCommand = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (char === \"$\") {\r\n\t\t\t\t\t\tlineStatus = 'jumplabel';\r\n\t\t\t\t\t} else if (!isBeginOfVariable) {\r\n\t\t\t\t\t\tlineStatus = 'argument';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'jumplabel': {\r\n\t\t\t\t\tif (isWhiteSpace) {\r\n\t\t\t\t\t\tlineStatus = 'command';\r\n\t\t\t\t\t\tlastCommand = '';\r\n\t\t\t\t\t} else if (char === \":\") {\r\n\t\t\t\t\t\tlineStatus = 'argument';\r\n\t\t\t\t\t} else if (char === \"(\") {\r\n\t\t\t\t\t\tlineStatus = 'argument';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'label': {\r\n\t\t\t\t\tif (isWhiteSpace) {\r\n\t\t\t\t\t\tlineStatus = 'command';\r\n\t\t\t\t\t} else if (char === '(') {\r\n\t\t\t\t\t\tlineStatus = 'variable';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'lineStart': {\r\n\t\t\t\t\tif (isWhiteSpace) {\r\n\t\t\t\t\t\tlineStatus = 'command';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlineStatus = 'label';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'string': {\r\n\t\t\t\t\tif (char === '\"') {\r\n\t\t\t\t\t\tlineStatus = 'argument';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'variable': {\r\n\t\t\t\t\tif (isWhiteSpace) {\r\n\t\t\t\t\t\tif (isInsidePostcond) {\r\n\t\t\t\t\t\t\tisInsidePostcond = false;\r\n\t\t\t\t\t\t\tlineStatus = 'argument';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlineStatus = 'command';\r\n\t\t\t\t\t\t\tlastCommand = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (!isBeginOfVariable) {\r\n\t\t\t\t\t\tlineStatus = 'argument';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { lineStatus, startstring };\r\n}\r\n","import * as vscode from 'vscode';\n\nexport default class MumpsConfigurationProvider implements vscode.DebugConfigurationProvider {\n\n\t/**\n\t * Message a debug configuration just before a debug session is being launched,\n\t * e.g. add all missing attributes to the debug configuration.\n\t*/\n\tresolveDebugConfiguration(folder: vscode.WorkspaceFolder | undefined,\n\t\tconfig: vscode.DebugConfiguration): vscode.ProviderResult<vscode.DebugConfiguration> {\n\n\t\t// if launch.json is missing or empty\n\t\tif (!config.type && !config.request && !config.name) {\n\t\t\tconst editor = vscode.window.activeTextEditor;\n\t\t\tif (editor && editor.document.languageId === 'mumps') {\n\t\t\t\tconfig.type = 'mumps';\n\t\t\t\tconfig.name = 'Launch';\n\t\t\t\tconfig.request = 'launch';\n\t\t\t\tconfig.program = '${file}';\n\t\t\t\tconfig.stopOnEntry = true;\n\t\t\t\tconfig.hostname = '192.168.0.1';\n\t\t\t\tconfig.localRoutinesPath = 'y:\\\\';\n\t\t\t\tconfig.port = 9000;\n\t\t\t}\n\t\t}\n\n\t\tif (!config.program) {\n\t\t\treturn vscode.window.showInformationMessage(\"Cannot find a program to debug\").then(() => {\n\t\t\t\treturn undefined;\t// abort launch\n\t\t\t});\n\t\t}\n\n\t\treturn config;\n\t}\n}\n","/*\r\n\tConnector to MDEBUG-Server by Jens Wulf\r\n\tLicense: LGPL\r\n*/\r\nimport { DebugProtocol } from '@vscode/debugprotocol';\r\nimport { Socket } from \"net\";\r\nimport { EventEmitter } from 'events';\r\nimport { readFileSync } from 'fs';\r\n//import { Variable } from '@vscode/debugadapter';\r\nexport interface MumpsBreakpoint {\r\n\tid: number,\r\n\tfile: string,\r\n\tline: number,\r\n\tverified: boolean,\r\n\tcondition?: string\r\n}\r\ninterface VarData {\r\n\tname: string,\r\n\tindexCount: number,\r\n\tbases: Array<string>,\r\n\tcontent: string\r\n}\r\ninterface FrameInfo {\r\n\tindex: number,\r\n\tname: string,\r\n\tfile: string,\r\n\tline: number\r\n}\r\ninterface StackInfo {\r\n\tframes: FrameInfo[];\r\n\tcount: number;\r\n}\r\ninterface MumpsVariable {\r\n\t[variableType: string]: {\r\n\t\t[variableName: string]: string\r\n\t}\r\n}\r\ninterface IVariables {\r\n\t[varName: string]: string;\r\n}\r\nenum connectState {\r\n\tdisconnected, waitingforStart, waitingForVars, waitingForBreakpoints, waitingForSingleVar, waitingForSingleVarContent, waitingForErrorReport, waitingForHints\r\n}\r\n\r\nexport class MumpsConnect extends EventEmitter {\r\n\tprivate _socket = new Socket();\r\n\tprivate _connectState: connectState;\r\n\tprivate _readedData: string;\r\n\tprivate _mVars: MumpsVariable;\r\n\tprivate _mStack: Array<string>;\r\n\tprivate _activeBreakpoints: Array<string>;\r\n\tprivate _event = new EventEmitter();\r\n\tprivate _hostname: string;\r\n\tprivate _port: number;\r\n\tprivate _sourceFile: string;\r\n\tprivate _sourceLines: string[];\r\n\tprivate _currentLine = 0;\r\n\tprivate _errorLines: string[];\r\n\tprivate _hints: string[];\r\n\tprivate _breakPoints: MumpsBreakpoint[];\r\n\tprivate _localRoutinesPath: string;\r\n\tprivate _breakpointId = 1;\r\n\tprivate _commandQueue: string[];\r\n\tprivate _logging = false;\r\n\tprivate _singleVar = \"\";\r\n\tprivate _singleVarContent = \"\";\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._commandQueue = [];\r\n\t\tthis._connectState = connectState.disconnected;\r\n\t\tthis._readedData = \"\";\r\n\t\tthis._mVars = {};\r\n\t\tthis._mStack = [];\r\n\t\tthis._activeBreakpoints = [];\r\n\t\tthis._breakPoints = [];\r\n\t\tthis._errorLines = [];\r\n\t\tthis._singleVar = \"\";\r\n\t\tthis._singleVarContent = \"\";\r\n\t\tthis._hints = [];\r\n\t\tthis._event.on('varsComplete', () => {\r\n\t\t\tif (typeof (this._mVars[\"I\"]) !== 'undefined') {\r\n\t\t\t\tconst internals = this._mVars[\"I\"];\r\n\t\t\t\tthis.checkEvents(internals);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tpublic async init(hostname: string, port: number, localRoutinesPath: string) {\r\n\t\tthis._localRoutinesPath = localRoutinesPath;\r\n\t\tthis._hostname = hostname;\r\n\t\tthis._port = port;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._socket.connect(this._port, this._hostname, () => {\r\n\t\t\t\tthis._log(\"Debug-Server connected\\n\");\r\n\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\tthis._socket.on('data', (chunk) => {\r\n\t\t\t\t\tthis._readedData += chunk.toString();\r\n\t\t\t\t\tlet n = this._readedData.indexOf('\\n');\r\n\t\t\t\t\twhile (n !== -1) {\r\n\t\t\t\t\t\tconst data = this._readedData.substring(0, n);\r\n\t\t\t\t\t\tthis.processLine(data)\r\n\t\t\t\t\t\tthis._readedData = this._readedData.substring(n + 1);\r\n\t\t\t\t\t\tn = this._readedData.indexOf('\\n');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tresolve(this._socket);\r\n\t\t\t});\r\n\t\t\tthis._socket.on('error', (error) => {\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t\tthis._socket.on('end', () => { this._connectState = connectState.disconnected })\r\n\t\t})\r\n\t\t// Put a friendly message on the terminal of the server.\r\n\t}\r\n\tprivate _log(msg: string) {\r\n\t\tif (this._logging) { console.log(msg); }\r\n\t}\r\n\tprivate processLine(line: string) {\r\n\t\tthis._log(\"Line:  \" + line);\r\n\r\n\t\tlet varname: string;\r\n\t\tlet value: string;\r\n\t\tlet vartype: string;\r\n\t\tswitch (this._connectState) {\r\n\t\t\tcase connectState.waitingforStart: {\r\n\t\t\t\tif (line === \"***STARTVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForVars;\r\n\t\t\t\t\tthis._mStack = [];\r\n\t\t\t\t\tthis._mVars = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTBP\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForBreakpoints;\r\n\t\t\t\t\tthis._activeBreakpoints = [];\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***SINGLEVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForSingleVar;\r\n\t\t\t\t\tthis._singleVar = \"\";\r\n\t\t\t\t\tthis._singleVarContent = \"\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***ENDPROGRAM\") {\r\n\t\t\t\t\tthis.sendEvent(\"end\");\r\n\t\t\t\t\tthis._socket.end();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***BEGINERRCHK\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForErrorReport;\r\n\t\t\t\t\tthis._errorLines = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTHINTS\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForHints;\r\n\t\t\t\t\tthis._hints = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForVars: {\r\n\t\t\t\tif (line === \"***ENDVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit(\"varsComplete\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvartype = line.substring(0, 1); //I=internal,V=local Variable,S=Stackframe\r\n\t\t\t\t\tif (vartype === \"S\") {\r\n\t\t\t\t\t\tthis._mStack.push(line.substring(2));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvarname = line.substring(2, line.indexOf('='));\r\n\t\t\t\t\twhile ((varname.split('\"').length - 1) % 2 !== 0) {\r\n\t\t\t\t\t\tvarname = line.substring(0, line.indexOf('=', varname.length + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue = line.substring(varname.length + 3).replace(/^\"/, \"\").replace(/\"$/, \"\");\r\n\t\t\t\t\tif (typeof (this._mVars[vartype]) === 'undefined') { this._mVars[vartype] = {}; }\r\n\t\t\t\t\tthis._mVars[vartype][varname] = value;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForBreakpoints: {\r\n\t\t\t\tif (line === \"***ENDBP\") {\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis.verifyBreakpoints();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tthis._activeBreakpoints.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForSingleVar: {\r\n\t\t\t\tif (line === \"***SINGLEEND\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('SingleVarReceived', this._event, this._singleVar, this._singleVarContent);\r\n\t\t\t\t} else if (line === \"***SINGLEVARCONTENT\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForSingleVarContent;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._singleVar += line;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForSingleVarContent: {\r\n\t\t\t\tif (line === \"***SINGLEEND\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('SingleVarReceived', this._event, this._singleVar, this._singleVarContent);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._singleVarContent += line;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForErrorReport: {\r\n\t\t\t\tif (line === \"***ENDERRCHK\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('ErrorreportReceived', this._event, this._errorLines);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._errorLines.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForHints: {\r\n\t\t\t\tif (line === \"***ENDHINTS\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('HintsReceived', this._event, this._hints);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._hints.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tconsole.error(\"Unexpected Message: \" + line);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate writeln(message: string): void {\r\n\t\tthis._commandQueue.push(message);\r\n\t\tif (this._commandQueue.length > 1000) {\r\n\t\t\tconsole.error(\"Too many Commands in Queue: Check Debugger Connection\");\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\t\tif (this._connectState !== connectState.disconnected) {\r\n\t\t\twhile (this._commandQueue.length) {\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\tmessage = this._commandQueue.shift()!;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._socket.write(message + \"\\n\");\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tthis._commandQueue.unshift(message);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate sendBreakpoint(file: string, line: number, onOff: boolean, condition?: string): void {\r\n\t\tif (condition === undefined) { condition = \"\"; }\r\n\t\tif (onOff) { this.writeln(\"SETBP;\" + file + \";\" + line + \";\" + condition); }\r\n\t\telse { this.writeln(\"CLEARBP;\" + file + \";\" + line); }\r\n\t}\r\n\tpublic start(file: string, stopAtStart: boolean): void {\r\n\t\tif (stopAtStart) {\r\n\t\t\tif (file.indexOf(\"^\")) {\r\n\t\t\t\t//Stop direct at given Label not at first line\r\n\t\t\t\tthis.sendBreakpoint(file, 0, true, \"\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendBreakpoint(file, 1, true, \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.requestBreakpoints();\r\n\t\tthis.writeln(\"START;\" + file);\r\n\t}\r\n\tpublic step(type: string): void {\r\n\t\tthis.writeln(type);\r\n\t}\r\n\tpublic continue(): void {\r\n\t\tthis.writeln(\"CONTINUE\");\r\n\t}\r\n\tpublic disconnect(): void {\r\n\t\tthis.writeln(\"RESET\");\r\n\t\tthis._socket.end();\r\n\t}\r\n\tpublic requestBreakpoints(): void {\r\n\t\tthis.writeln(\"REQUESTBP\");\r\n\t}\r\n\tpublic restart(file: string) {\r\n\t\tthis.writeln(\"RESTART;\" + file);\r\n\t}\r\n\t/**\r\n\t * Fire events if line has a breakpoint or hs stopped beacause of a different reason\r\n\t */\r\n\tprivate checkEvents(internals: IVariables): void {\r\n\t\tconst mumpsposition = internals[\"$ZPOSITION\"];\r\n\t\tconst mumpsstatus = internals[\"$ZSTATUS\"];\r\n\t\tconst parts = mumpsposition.split(\"^\");\r\n\t\tconst position = parts[0];\r\n\t\tconst program = parts[1];\r\n\t\tconst file = this._localRoutinesPath + program + \".m\";\r\n\t\tthis.loadSource(file);\r\n\t\tconst startlabel = position.split(\"+\")[0];\r\n\t\tlet offset = 0;\r\n\t\tif (position.split(\"+\")[1] !== undefined) {\r\n\t\t\toffset = parseInt(position.split(\"+\")[1]);\r\n\t\t}\r\n\t\tlet line = 0\r\n\t\tif (startlabel !== \"\") {\r\n\t\t\tfor (let ln = 0; ln < this._sourceLines.length; ln++) {\r\n\t\t\t\tif (this._sourceLines[ln].substring(0, startlabel.length) === startlabel) {\r\n\t\t\t\t\tline = ln;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._currentLine = line + offset;\r\n\t\tif (mumpsstatus !== \"\" && internals[\"$ZTRAP\"] === internals[\"$ZSTEP\"]) {\r\n\t\t\tthis.sendEvent('stopOnException', mumpsstatus);\r\n\t\t\tthis._log(mumpsstatus);\r\n\t\t} else {\r\n\t\t\tconst bps = this._breakPoints.filter(bp => bp.file === this._sourceFile && bp.line === this._currentLine);\r\n\t\t\tif (bps.length > 0) {\r\n\t\t\t\tthis.sendEvent('stopOnBreakpoint');\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendEvent('stopOnStep');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the actual Stack\r\n\t */\r\n\tpublic stack(startFrame: number, endFrame: number): StackInfo {\r\n\r\n\t\tconst frames = new Array<FrameInfo>();\r\n\r\n\t\tfor (let i = startFrame; i < this._mStack.length; i++) {\r\n\t\t\tconst position = this._mStack[i];\r\n\t\t\tif (position.indexOf(\"^\") !== -1) {\r\n\t\t\t\tconst fileposition = this.convertMumpsPosition(position);\r\n\t\t\t\tframes.push({\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tname: `${position}(${i})`,\r\n\t\t\t\t\tfile: fileposition.file,\r\n\t\t\t\t\tline: fileposition.line\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tframes: frames,\r\n\t\t\tcount: Math.min(frames.length, endFrame)\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * Set breakpoint in file with given line.\r\n\t */\r\n\tpublic setBreakPoint(file: string, breakpoints: DebugProtocol.SourceBreakpoint[] | undefined): DebugProtocol.Breakpoint[] {\r\n\t\tconst confirmedBreakpoints: DebugProtocol.Breakpoint[] = [];\r\n\t\tif (breakpoints) {\r\n\t\t\tfor (let i = 0; i < breakpoints.length; i++) {\r\n\t\t\t\tconst breakpoint = breakpoints[i];\r\n\t\t\t\tconst line = breakpoint.line\r\n\t\t\t\tconfirmedBreakpoints.push({ id: this._breakpointId, verified: false })\r\n\t\t\t\tthis._breakPoints.push({ verified: false, file, line, id: this._breakpointId++ });\r\n\t\t\t\tthis.sendBreakpoint(file, line, true, breakpoint.condition);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn confirmedBreakpoints;\r\n\t}\r\n\r\n\t/*\r\n\t * Clear breakpoint in file with given line.\r\n\t */\r\n\tpublic clearBreakPoint(file: string, line: number): MumpsBreakpoint | undefined {\r\n\t\tconst bps = this._breakPoints;\r\n\t\tif (bps) {\r\n\t\t\tconst index = bps.findIndex(bp => bp.file === file && bp.line === line);\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\tconst bp = bps[index];\r\n\t\t\t\tthis.sendBreakpoint(file, bp.line, false);\r\n\t\t\t\tbps.splice(index, 1);\r\n\t\t\t\treturn bp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/*\r\n\t * Clear all breakpoints\r\n\t */\r\n\tpublic clearBreakpoints(file: string): void {\r\n\t\tthis.writeln(\"CLEARBP;\" + file);\r\n\t}\r\n\r\n\tprivate verifyBreakpoints(): void {\r\n\t\tconst merk: boolean[] = [];\r\n\t\tthis._breakPoints.forEach(bp => {\r\n\t\t\tbp.verified = false;\r\n\t\t\tfor (let i = 0; i < this._activeBreakpoints.length; i++) {\r\n\t\t\t\tconst internalBp = this.convertMumpsPosition(this._activeBreakpoints[i])\r\n\t\t\t\tinternalBp.file = this.normalizeDrive(internalBp.file.replace(/\\\\/g, \"/\"));\r\n\t\t\t\tbp.file = this.normalizeDrive(bp.file.replace(/\\\\/g, \"/\"));\r\n\t\t\t\tif (internalBp.file === bp.file && bp.line === internalBp.line) {\r\n\t\t\t\t\tbp.verified = true;\r\n\t\t\t\t\tthis.sendEvent('breakpointValidated', bp);\r\n\t\t\t\t\tmerk[i] = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!bp.verified) { this.sendEvent('breakpointValidated', bp); }\r\n\t\t});\r\n\t\tfor (let i = 0; i < this._activeBreakpoints.length; i++) {\r\n\t\t\tif (!merk[i]) {\r\n\t\t\t\tconst internalBp = this.convertMumpsPosition(this._activeBreakpoints[i])\r\n\t\t\t\tconst bp: MumpsBreakpoint = { 'verified': true, 'file': internalBp.file, 'line': internalBp.line, 'id': this._breakpointId++ }\r\n\t\t\t\tthis.sendEvent('breakpointValidated', bp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate normalizeDrive(path) {\r\n\t\tconst parts = path.split(':');\r\n\t\tif (parts.length === 2) {\r\n\t\t\treturn parts[0].toLowerCase() + ':' + parts[1];\r\n\t\t} else {\r\n\t\t\treturn path;\r\n\t\t}\r\n\t}\r\n\tpublic getVariables(type: string) {\r\n\t\tif (type === \"system\") {\r\n\t\t\treturn this._mVars[\"I\"];\r\n\t\t} else if (type === \"local\") {\r\n\t\t\treturn this._mVars[\"V\"];\r\n\t\t}\r\n\t}\r\n\tpublic async checkRoutine(lines: string[]) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis._event.on('ErrorreportReceived', function ErrorreportReceived(event: EventEmitter, errorLines: string[]) {\r\n\t\t\t\tevent.removeListener('ErrorreportReceived', ErrorreportReceived);\r\n\t\t\t\tresolve(errorLines);\r\n\t\t\t});\r\n\t\t\tthis.writeln(\"ERRCHK\");\r\n\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t\tthis.writeln(lines[i]);\r\n\t\t\t}\r\n\t\t\tthis.writeln(\"***ENDPROGRAM\");\r\n\t\t})\r\n\t}\r\n\tpublic async getSingleVar(expression: string): Promise<VarData> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tconst reply: VarData = { name: expression, indexCount: 0, content: \"undefined\", bases: [] }\r\n\t\t\tlet varType = \"V\";\r\n\t\t\tif (expression.charAt(0) === \"$\") {\r\n\t\t\t\tvarType = \"I\";\r\n\t\t\t}\r\n\t\t\tif (this._mVars[varType] !== undefined) {\r\n\t\t\t\tif (this._mVars[varType][expression] !== undefined) {\r\n\t\t\t\t\treply.content = this._mVars[varType][expression];\r\n\t\t\t\t\tresolve(reply);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._event.on('SingleVarReceived', function SingleVarReceived(event, singleVar, singleVarContent) {\r\n\t\t\t\t\t\tevent.removeListener('SingleVarReceived', SingleVarReceived);\r\n\t\t\t\t\t\treply.name = singleVar;\r\n\t\t\t\t\t\treply.content = singleVarContent;\r\n\t\t\t\t\t\tresolve(reply);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.writeln(\"GETVAR;\" + expression);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresolve(reply);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// private methods\r\n\r\n\tprivate loadSource(file: string) {\r\n\t\tfile = file.replace(/%/g, \"_\");\r\n\t\tif (this._sourceFile !== file) {\r\n\t\t\tthis._sourceFile = file;\r\n\t\t\ttry {\r\n\t\t\t\tthis._sourceLines = readFileSync(this._sourceFile).toString().split('\\n');\r\n\t\t\t} catch {\r\n\t\t\t\tconsole.log(\"Could not read Sourcefile \" + file)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate convertMumpsPosition(positionstring: string) {\r\n\t\tconst parts = positionstring.split(\"^\");\r\n\t\tconst position = parts[0];\r\n\t\tif (parts[1] !== undefined) {\r\n\r\n\t\t\tconst program = parts[1].split(\" \", 1)[0];\r\n\t\t\tconst file = (this._localRoutinesPath + program + \".m\").replace(/%/g, \"_\");\r\n\t\t\ttry {\r\n\t\t\t\tconst filecontent = readFileSync(file).toString().split('\\n');\r\n\t\t\t\tconst startlabel = position.split(\"+\")[0];\r\n\t\t\t\tconst labelRegexp = new RegExp(\"^\" + startlabel + \"[(\\\\s;]\");\r\n\t\t\t\tlet offset = 0;\r\n\t\t\t\tif (position.split(\"+\")[1] !== undefined) {\r\n\t\t\t\t\toffset = parseInt(position.split(\"+\")[1]);\r\n\t\t\t\t\t//if (startlabel === \"\") { offset-- }   //If there's no startlabel M reports +1^XXX\r\n\t\t\t\t}\r\n\t\t\t\tlet line = 0;\r\n\t\t\t\tif (startlabel !== \"\") {\r\n\t\t\t\t\tfor (let ln = 0; ln < filecontent.length; ln++) {\r\n\t\t\t\t\t\tif (filecontent[ln].match(labelRegexp)) {\r\n\t\t\t\t\t\t\tline = ln;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn { \"file\": file, \"line\": line + offset };\r\n\t\t\t} catch {\r\n\t\t\t\tconsole.log(\"Could not read Sourcefile \" + file)\r\n\t\t\t\treturn { \"file\": file, \"line\": 1 };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn { \"file\": \"\", \"line\": 1 };\r\n\t\t}\r\n\t}\r\n\r\n\tprivate sendEvent(event: string, ...args: unknown[]) {\r\n\t\tthis.emit(event, ...args);\r\n\t}\r\n}","/*\r\n\tImplementation of DebugProtocol-Server for GT.M, Yottadb by Jens Wulf\r\n\tbased on Mock-Debug by Microsoft Corp.\r\n\tLicense: LGPL\r\n*/\r\n\r\nimport {\r\n\tDebugSession,\r\n\tInitializedEvent, TerminatedEvent, StoppedEvent, BreakpointEvent,\r\n\tThread, StackFrame, Scope, Source, Handles\r\n} from '@vscode/debugadapter';\r\nimport { DebugProtocol } from '@vscode/debugprotocol';\r\nimport { basename } from 'path';\r\nimport { Subject } from 'await-notify';\r\nimport { MumpsConnect, MumpsBreakpoint } from './mumpsConnect';\r\nimport * as vscode from 'vscode';\r\nimport { readFileSync } from 'fs';\r\nconst MUMPSDIAGNOSTICS = vscode.languages.createDiagnosticCollection(\"mumps\");\r\n/**\r\n * This interface describes the mumps-debug specific launch attributes\r\n * The schema for these attributes lives in the package.json of the mumps-debug extension.\r\n * The interface should always match this schema.\r\n */\r\ninterface LaunchRequestArguments extends DebugProtocol.LaunchRequestArguments {\r\n\t/** An absolute path to the \"program\" to debug. */\r\n\tprogram: string;\r\n\t/** Automatically stop target after launch. If not specified, target does not stop. */\r\n\tstopOnEntry?: boolean;\r\n\t/** enable logging the Debug Adapter Protocol */\r\n\ttrace?: boolean;\r\n\t/** The Port on which MDEBUG listens */\r\n\tport: number;\r\n\t/**The Hostname of the MDEBUG-Server */\r\n\thostname: string;\r\n\t/**Map Local-Routines to Host-Routines */\r\n\tlocalRoutinesPath: string;\r\n\t/**Flag if internal Database for M-Labels should be build up */\r\n\tbuildLabelDb?: boolean;\r\n}\r\ninterface VarData {\r\n\tname: string,\r\n\tindexCount: number,\r\n\tbases: Array<string>,\r\n\tcontent: string\r\n}\r\nexport default class MumpsDebugSession extends DebugSession {\r\n\r\n\t// we don't support multiple threads, so we can use a hardcoded ID for the default thread\r\n\tprivate static THREAD_ID = 1;\r\n\r\n\tprivate _variableHandles = new Handles<string>();\r\n\tprivate _variableBases = {};\r\n\r\n\tprivate _configurationDone = new Subject();\r\n\r\n\tprivate _program: string;\r\n\r\n\tprivate _mconnect: MumpsConnect;\r\n\tprivate _localScope = this._variableHandles.create(\"~local|0\");\r\n\tprivate _systemScope = this._variableHandles.create(\"~system\")\r\n\t/**\r\n\t * Creates a new debug adapter that is used for one debug session.\r\n\t * We configure the default implementation of a debug adapter here.\r\n\t */\r\n\tpublic constructor() {\r\n\t\tsuper();\r\n\r\n\t\t// this debugger uses zero-based lines and columns\r\n\t\tthis.setDebuggerLinesStartAt1(false);\r\n\t\tthis.setDebuggerColumnsStartAt1(false);\r\n\t\tthis._program = \"\";\r\n\t\tthis._mconnect = new MumpsConnect();\r\n\r\n\t\t// setup event handlers\r\n\t\tthis._mconnect.on('stopOnEntry', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('entry', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnStep', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('step', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnBreakpoint', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('breakpoint', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnDataBreakpoint', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('data breakpoint', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnException', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('exception', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('breakpointValidated', (bp: MumpsBreakpoint) => {\r\n\t\t\tthis.sendEvent(new BreakpointEvent('changed', <DebugProtocol.Breakpoint>{ verified: bp.verified, id: bp.id }));\r\n\t\t});\r\n\r\n\t\tthis._mconnect.on('end', () => {\r\n\t\t\tthis.sendEvent(new TerminatedEvent());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * The 'initialize' request is the first request called by the frontend\r\n\t * to interrogate the features the debug adapter provides.\r\n\t */\r\n\tprotected initializeRequest(response: DebugProtocol.InitializeResponse): void {\r\n\r\n\t\t// build and return the capabilities of this debug adapter:\r\n\t\tresponse.body = response.body || {};\r\n\r\n\t\t// the adapter implements the configurationDoneRequest.\r\n\t\tresponse.body.supportsConfigurationDoneRequest = true;\r\n\r\n\t\t// make VS Code to use 'evaluate' when hovering over source\r\n\t\tresponse.body.supportsEvaluateForHovers = true;\r\n\r\n\t\t// make VS Code to support data breakpoints\r\n\t\tresponse.body.supportsDataBreakpoints = false;\r\n\t\tresponse.body.supportsConditionalBreakpoints = true;\r\n\t\t// make VS Code to support completion in REPL\r\n\t\tresponse.body.supportsCompletionsRequest = false;\r\n\t\tresponse.body.completionTriggerCharacters = [\".\", \"[\"];\r\n\r\n\t\t// make VS Code to send cancelRequests\r\n\t\tresponse.body.supportsCancelRequest = false;\r\n\r\n\t\t// make VS Code send the breakpointLocations request\r\n\t\tresponse.body.supportsBreakpointLocationsRequest = true;\r\n\t\tresponse.body.supportsExceptionInfoRequest = true;\r\n\t\tresponse.body.supportsRestartRequest = true;\r\n\r\n\r\n\t\t// since this debug adapter can accept configuration requests like 'setBreakpoint' at any time,\r\n\t\t// we request them early by sending an 'initializeRequest' to the frontend.\r\n\t\t// The frontend will end the configuration sequence by calling 'configurationDone' request.\r\n\t\tthis.sendResponse(response);\r\n\t\tthis.sendEvent(new InitializedEvent());\r\n\t}\r\n\r\n\t/**\r\n\t * Called at the end of the configuration sequence.\r\n\t * Indicates that all breakpoints etc. have been sent to the DA and that the 'launch' can start.\r\n\t */\r\n\tprotected configurationDoneRequest(response: DebugProtocol.ConfigurationDoneResponse, args: DebugProtocol.ConfigurationDoneArguments): void {\r\n\t\tsuper.configurationDoneRequest(response, args);\r\n\r\n\t\t// notify the launchRequest that configuration has finished\r\n\r\n\t\tthis._configurationDone.notify();\r\n\t}\r\n\r\n\tprotected async launchRequest(response: DebugProtocol.LaunchResponse, args: LaunchRequestArguments) {\r\n\r\n\t\t// make sure to 'Stop' the buffered logging if 'trace' is not set\r\n\t\t//logger.setup(args.trace ? Logger.LogLevel.Verbose : Logger.LogLevel.Stop, false);\r\n\r\n\t\t// wait until configuration has finished (and configurationDoneRequest has been called)\r\n\t\tawait this._configurationDone.wait(1000);\r\n\r\n\t\t// start the program in the runtime\r\n\t\tthis._mconnect.init(args.hostname, args.port, args.localRoutinesPath).then(async () => {\r\n\t\t\tthis.refreshDiagnostics(vscode.window.activeTextEditor?.document, MUMPSDIAGNOSTICS);\r\n\t\t\tthis._mconnect.start(args.program, !!args.stopOnEntry);\r\n\t\t\tthis._program = args.program;\r\n\t\t\tthis.sendResponse(response);\r\n\t\t}).catch(() => {\r\n\t\t\tvscode.window.showErrorMessage(\"Connection to MDEBUG failed. \\nPlease start MDEBUG first.\");\r\n\t\t})\r\n\t}\r\n\r\n\tprotected setBreakPointsRequest(response: DebugProtocol.SetBreakpointsResponse, args: DebugProtocol.SetBreakpointsArguments): void {\r\n\t\tconst path = <string>args.source.path;\r\n\t\tthis._mconnect.clearBreakpoints(path);\r\n\t\tconst actualBreakpoints = this._mconnect.setBreakPoint(path, args.breakpoints);\r\n\r\n\t\t// send back the actual breakpoint positions\r\n\t\tresponse.body = {\r\n\t\t\tbreakpoints: actualBreakpoints\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t\tthis._mconnect.requestBreakpoints();\r\n\t}\r\n\r\n\tprotected threadsRequest(response: DebugProtocol.ThreadsResponse): void {\r\n\r\n\t\t// runtime supports no threads so just return a default thread.\r\n\t\tresponse.body = {\r\n\t\t\tthreads: [\r\n\t\t\t\tnew Thread(MumpsDebugSession.THREAD_ID, \"thread 1\")\r\n\t\t\t]\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected stackTraceRequest(response: DebugProtocol.StackTraceResponse, args: DebugProtocol.StackTraceArguments): void {\r\n\r\n\t\tconst startFrame = typeof args.startFrame === 'number' ? args.startFrame : 0;\r\n\t\tconst maxLevels = typeof args.levels === 'number' ? args.levels : 1000;\r\n\t\tconst endFrame = startFrame + maxLevels;\r\n\r\n\t\tconst stk = this._mconnect.stack(startFrame, endFrame);\r\n\t\tresponse.body = {\r\n\t\t\tstackFrames: stk.frames.map(f => new StackFrame(f.index, f.name, this.createSource(f.file), this.convertDebuggerLineToClient(f.line))),\r\n\t\t\ttotalFrames: stk.count\r\n\t\t};\r\n\t\tif (stk.count === 0) {\r\n\t\t\tthis.sendEvent(new TerminatedEvent());\r\n\t\t}\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected scopesRequest(response: DebugProtocol.ScopesResponse): void {\r\n\r\n\t\tresponse.body = {\r\n\t\t\tscopes: [\r\n\t\t\t\tnew Scope(\"Local\", this._localScope, false),\r\n\t\t\t\tnew Scope(\"System\", this._systemScope, false)\r\n\t\t\t]\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected async variablesRequest(response: DebugProtocol.VariablesResponse, args: DebugProtocol.VariablesArguments) {\r\n\r\n\t\tconst variables: DebugProtocol.Variable[] = [];\r\n\t\tlet insertVariable: DebugProtocol.Variable | undefined;\r\n\t\tconst varReference = args.variablesReference;\r\n\t\tconst varId = this._variableHandles.get(args.variablesReference);\r\n\t\tif (varReference === this._systemScope) {\r\n\t\t\tconst varObject = this._mconnect.getVariables(\"system\");\r\n\t\t\tfor (const varname in varObject) {\r\n\t\t\t\tvariables.push({\r\n\t\t\t\t\tname: varname,\r\n\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\tvalue: varObject[varname],\r\n\t\t\t\t\tvariablesReference: 0\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst varparts: string[] = varId.split(\"|\");\r\n\t\t\tconst indexCount: number = parseInt(varparts.pop() || \"0\");\r\n\t\t\tconst varBase = varparts.join(\"|\");\r\n\t\t\tconst varObject = this._mconnect.getVariables(\"local\");\r\n\t\t\tlet lastVar: VarData | undefined = undefined;\r\n\t\t\tlet lastRef = \"\";\r\n\t\t\tfor (const varname in varObject) {\r\n\t\t\t\tconst actualVar = this.varAnalyze(varname, varObject[varname]);\r\n\t\t\t\tif (lastVar === undefined) { //First Variable not processed\r\n\t\t\t\t\tlastVar = actualVar;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// eslint-disable-next-line no-cond-assign\r\n\t\t\t\tif (insertVariable = this._checkVars(lastVar, actualVar, indexCount, varBase, lastRef)) {\r\n\t\t\t\t\tif (insertVariable.variablesReference !== 0) { lastRef = lastVar.bases[indexCount]; }\r\n\t\t\t\t\tvariables.push(insertVariable);\r\n\t\t\t\t}\r\n\t\t\t\tlastVar = actualVar;\r\n\t\t\t}\r\n\t\t\tif (lastVar !== undefined) { // process Last Variable if there was minimum one\r\n\t\t\t\tconst dummyVar: VarData = { name: \"\", \"indexCount\": 0, \"bases\": [], \"content\": \"\" }\r\n\t\t\t\tconst insertVariable = this._checkVars(lastVar, dummyVar, indexCount, varBase, lastRef)\r\n\t\t\t\tif (insertVariable) {\r\n\t\t\t\t\tvariables.push(insertVariable);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tresponse.body = {\r\n\t\t\tvariables: variables\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\t//checkVars checks if Variable has to be inserted in Var-Display and if it has descendants\r\n\tprivate _checkVars(lastVar: VarData, actualVar: VarData, indexCount: number, varBase: string, lastRef: string): DebugProtocol.Variable | undefined {\r\n\t\tlet returnVar: DebugProtocol.Variable | undefined = undefined;\r\n\t\tlet actualReference = 0;\r\n\t\tif (indexCount === 0 || (lastVar.bases[indexCount - 1] === varBase && lastVar.indexCount > indexCount)) {\r\n\t\t\tif (lastVar.indexCount > indexCount + 1) {\r\n\t\t\t\tif (lastRef !== lastVar.bases[indexCount]) {\r\n\t\t\t\t\tlet name = lastVar.bases[indexCount];\r\n\t\t\t\t\tif (indexCount > 0) { name += \")\"; }\r\n\t\t\t\t\tif (this._variableBases[lastVar.bases[indexCount]] === undefined) {\r\n\t\t\t\t\t\tthis._variableBases[lastVar.bases[indexCount]] = this._variableHandles.create(lastVar.bases[indexCount] + \"|\" + (indexCount + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturnVar = {\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tvalue: 'undefined',\r\n\t\t\t\t\t\tvariablesReference: this._variableBases[lastVar.bases[indexCount]]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else { //lastVar.indexCount==indexCount+1\r\n\t\t\t\tif (lastVar.bases[indexCount] === actualVar.bases[indexCount]) {\r\n\t\t\t\t\tif (this._variableBases[lastVar.bases[indexCount]] === undefined) {\r\n\t\t\t\t\t\tthis._variableBases[lastVar.bases[indexCount]] = this._variableHandles.create(lastVar.bases[indexCount] + \"|\" + (indexCount + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactualReference = this._variableBases[lastVar.bases[indexCount]];\r\n\t\t\t\t}\r\n\t\t\t\treturnVar = {\r\n\t\t\t\t\tname: lastVar.name,\r\n\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\tvalue: lastVar.content,\r\n\t\t\t\t\tvariablesReference: actualReference\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn returnVar\r\n\t}\r\n\tprotected continueRequest(response: DebugProtocol.ContinueResponse): void {\r\n\t\tthis._mconnect.continue();\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected nextRequest(response: DebugProtocol.NextResponse): void {\r\n\t\tthis._mconnect.step(\"OVER\");\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected stepInRequest(response: DebugProtocol.StepInResponse): void {\r\n\t\tthis._mconnect.step(\"INTO\");\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected stepOutRequest(response: DebugProtocol.StepOutResponse): void {\r\n\t\tthis._mconnect.step(\"OUTOF\");\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected async evaluateRequest(response: DebugProtocol.EvaluateResponse, args: DebugProtocol.EvaluateArguments) {\r\n\t\tif (args.context === \"hover\" || args.context === \"repl\") {\r\n\t\t\tthis._mconnect.getSingleVar(args.expression).then((varReply: VarData) => {\r\n\t\t\t\tresponse.body = {\r\n\t\t\t\t\tresult: varReply.name + \" := \" + varReply.content,\r\n\t\t\t\t\tvariablesReference: 0\r\n\t\t\t\t}\r\n\t\t\t\tif (!args.expression.includes(\")\") && this._variableBases[args.expression] !== undefined) {\r\n\t\t\t\t\tresponse.body.variablesReference = this._variableBases[args.expression];\r\n\t\t\t\t}\r\n\t\t\t\tthis.sendResponse(response);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected async restartRequest(response: DebugProtocol.RestartResponse) {\r\n\t\tconst sourceLines = readFileSync(this._program).toString().split('\\n');\r\n\t\tthis._mconnect.checkRoutine(sourceLines).then((errorLines: string[]) => {\r\n\t\t\tif (errorLines.length) {\r\n\t\t\t\tvscode.window.showErrorMessage(\"File contains Problems - No Restart possible!\");\r\n\t\t\t} else {\r\n\t\t\t\tthis._mconnect.restart(this._program);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected disconnectRequest(response: DebugProtocol.DisconnectResponse): void {\r\n\t\tthis._mconnect.disconnect();\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprivate createSource(filePath: string): Source {\r\n\t\treturn new Source(basename(filePath), this.convertDebuggerPathToClient(filePath), undefined, undefined, 'mumps-adapter-data');\r\n\t}\r\n\r\n\tprotected async exceptionInfoRequest(response: DebugProtocol.ExceptionInfoResponse) {\r\n\t\tconst statVariable: VarData = await this._mconnect.getSingleVar(\"$ZSTATUS\");\r\n\t\tconst status = statVariable.content.split(\",\");\r\n\t\tconst trashlength = status[0].length + status[1].length + status[2].length + 4;\r\n\t\tconst description = statVariable.content.substr(trashlength);\r\n\t\tresponse.body = {\r\n\t\t\texceptionId: status[2],\r\n\t\t\tdescription,\r\n\t\t\tbreakMode: 'always',\r\n\t\t\tdetails: {\r\n\t\t\t\tmessage: 'Line :' + status[1],\r\n\t\t\t\ttypeName: 'ErrorException',\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprivate varAnalyze(varname: string, content: string): VarData {\r\n\t\tlet indexcount = 1;\r\n\t\tconst bases: string[] = [];\r\n\t\tconst length = varname.length;\r\n\t\tconst klammerpos = varname.indexOf(\"(\");\r\n\t\tlet countKomma = true;\r\n\t\t//let lastKommaPos = varname.length;\r\n\t\tif (klammerpos > 0) {\r\n\t\t\tbases.push(varname.substring(0, klammerpos));\r\n\t\t\tindexcount++;\r\n\t\t\t//lastKommaPos = klammerpos;\r\n\t\t\tfor (let i = klammerpos; i < length; i++) {\r\n\t\t\t\tif (varname.substring(i, i + 1) === \",\" && countKomma) {\r\n\t\t\t\t\tbases.push(varname.substring(0, i));\r\n\t\t\t\t\tindexcount++;\r\n\t\t\t\t\t//lastKommaPos = i;\r\n\t\t\t\t}\r\n\t\t\t\tif (varname.substring(i, i + 1) === '\"') { countKomma = !countKomma; }\r\n\t\t\t}\r\n\t\t\tbases.push(varname.substring(0, varname.length - 1));\r\n\t\t} else {\r\n\t\t\tbases.push(varname);\r\n\t\t}\r\n\t\treturn { \"name\": varname, \"indexCount\": indexcount, \"bases\": bases, content };\r\n\t}\r\n\r\n\tprivate refreshDiagnostics(doc: vscode.TextDocument | undefined, mumpsDiagnostics: vscode.DiagnosticCollection): void {\r\n\t\tconst diagnostics: vscode.Diagnostic[] = [];\r\n\t\tif (doc) {\r\n\t\t\tconst lines: string[] = doc.getText().split(\"\\n\");\r\n\t\t\tthis._mconnect.checkRoutine(lines).then((errLines: string[]) => {\r\n\t\t\t\tfor (let i = 0; i < errLines.length; i++) {\r\n\t\t\t\t\tconst errData = errLines[i].split(\";\");\r\n\t\t\t\t\tlet column = parseInt(errData[0]) - 1;\r\n\t\t\t\t\tif (isNaN(column)) { column = 0 }\r\n\t\t\t\t\tlet line = parseInt(errData[1]) - 1;\r\n\t\t\t\t\tif (isNaN(line)) { line = 0 }\r\n\t\t\t\t\tlet endColumn = doc.lineAt(line).text.length\r\n\t\t\t\t\tif (line === 0 && column === 0) { endColumn = 0 }\r\n\t\t\t\t\tconst message = errData[2];\r\n\t\t\t\t\tconst range = new vscode.Range(line, column, line, endColumn);\r\n\t\t\t\t\tconst diagnostic = new vscode.Diagnostic(range, message, vscode.DiagnosticSeverity.Error);\r\n\t\t\t\t\tdiagnostic.code = message;\r\n\t\t\t\t\tdiagnostics.push(diagnostic);\r\n\t\t\t\t}\r\n\t\t\t\tmumpsDiagnostics.clear();\r\n\t\t\t\tmumpsDiagnostics.set(doc.uri, diagnostics);\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\n\r\nexport default class MumpsDefinitionProvider {\r\n\tprovideDefinition(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenRefLocation();\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\nimport { LineToken, TokenType, MumpsLineParser, LineInformation } from './mumpsLineParser'\nconst parser = new MumpsLineParser();\n\ninterface Parameter {\n\tname: string,\n\tposition: number\n}\ninterface Subroutine {\n\tstartLine: number,\n\tendLine: number\n\tparameters: Parameter[]\n}\ninterface GeneralSubroutine {\n\tname: string,\n\tstartLine: number,\n\tendLine: number\n}\ninterface VariableState {\n\tnewedAtLine?: number[],\n\tnewedAtPostion: number[],\n\tnewedAtLevel?: number[],\n\tisExcluded?: boolean,\n\tisParameter?: boolean,\n\tisUsed?: boolean\n\tparameterPosition: number\n}\ninterface VariableStates {\n\tname: VariableState\n}\nconst symbols: vscode.SymbolInformation[] = [];\n\n/**\n * Checks if mumps routines NEWs variables correctly\n * Checks if intendation levels are correct\n * Checks if there's unreachable code\n *\n */\nexport default class MumpsDiagnosticsProvider {\n\tprivate _linetokens: LineToken[][] = [];\n\tprivate _diags: vscode.Diagnostic[] = [];\n\tprivate _variablesToBeIgnored: string[] = [];\n\tprivate _enableVariableCheck = true;\n\tprivate _varStates: VariableStates;\n\tprivate _levelExclusiveNew: number[];\n\tprivate _subroutines: Subroutine[] = [];\n\tprivate _document: vscode.TextDocument;\n\tprivate _routine: Subroutine = { startLine: -1, endLine: -1, parameters: [] };\n\tprivate _level = 0;\n\tprivate _lineWithDo = -2;\n\tprivate _isBehindQuit = false;\n\tprivate _startUnreachable: vscode.Position | false = false;\n\tprivate _activeSubroutine: GeneralSubroutine = { name: '', startLine: -1, endLine: -1 }\n\n\tconstructor(document: vscode.TextDocument, collection: vscode.DiagnosticCollection) {\n\t\tthis._document = document;\n\t\tthis._diags = [];\n\t\tthis._linetokens = [];\n\t\tconst configuration = vscode.workspace.getConfiguration();\n\t\tif (configuration.mumps.variablesToBeIgnoredAtNewCheck !== undefined) {\n\t\t\tthis._variablesToBeIgnored = configuration.mumps.variablesToBeIgnoredAtNewCheck.split(\",\");\n\t\t}\n\t\tif (configuration.mumps.enableVariableCheck !== undefined) {\n\t\t\tthis._enableVariableCheck = configuration.mumps.enableVariableCheck;\n\t\t}\n\t\tif (document && document.languageId === 'mumps') {\n\t\t\tcollection.clear();\n\t\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\t\tconst line = document.lineAt(i);\n\t\t\t\tconst lineInfo: LineInformation = parser.analyzeLine(line.text);\n\t\t\t\tif (lineInfo.error.text !== '') {\n\t\t\t\t\tthis._addWarning(lineInfo.error.text, i, lineInfo.error.position, -1, vscode.DiagnosticSeverity.Error)\n\t\t\t\t}\n\t\t\t\tthis._linetokens.push(lineInfo.tokens);\n\t\t\t\tthis._checkLine(i, lineInfo.tokens);\n\t\t\t}\n\t\t\tif (this._activeSubroutine.startLine > -1) {\n\t\t\t\tthis._addSymbol(this._activeSubroutine.name, this._activeSubroutine.startLine, this._linetokens.length);\n\t\t\t}\n\t\t\tfor (let i = 0; i < this._subroutines.length; i++) {\n\t\t\t\tthis.analyzeSubroutine(this._subroutines[i]);\n\t\t\t}\n\t\t\tif (this._diags) {\n\t\t\t\tcollection.set(document.uri, this._diags);\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Checks a single subroutine if variables are NEWed correctly\n\t * sets found problems in this._warnings\n\t * @param routine subroutine to be checked\n\t */\n\tpublic analyzeSubroutine(routine: Subroutine): void {\n\t\tif (this._enableVariableCheck) {\n\t\t\tthis._varStates = {} as VariableStates;\n\t\t\tthis._levelExclusiveNew = [];\n\t\t\tlet level = 0; //intendation-level\n\t\t\tfor (let i = 0; i < routine.parameters.length; i++) {\n\t\t\t\tthis._varStates[routine.parameters[i].name] = { isParameter: true, parameterPosition: routine.parameters[i].position }\n\t\t\t}\n\t\t\tfor (let i = routine.startLine; i <= routine.endLine; i++) {\n\t\t\t\tlet intendationFound = false;\n\t\t\t\tfor (let j = 0; j < this._linetokens[i].length; j++) {\n\t\t\t\t\tlet token = this._linetokens[i][j];\n\t\t\t\t\tif (i === routine.startLine && j === 0) { // skip parameters\n\t\t\t\t\t\twhile (++j < this._linetokens[i].length && this._linetokens[i][j].type === TokenType.local) { /* empty */ }\n\t\t\t\t\t\tif (j < this._linetokens[i].length) {\n\t\t\t\t\t\t\ttoken = this._linetokens[i][j];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (token.type === TokenType.intendation) {\n\t\t\t\t\t\tintendationFound = true;\n\t\t\t\t\t\tconst newLevel = token.name.length\n\t\t\t\t\t\tif (newLevel < level) {\n\t\t\t\t\t\t\tthis._reduceIntendationLevel(level, newLevel);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlevel = newLevel;\n\t\t\t\t\t} else if (token.type === TokenType.comment) {\n\t\t\t\t\t\tif (!intendationFound && level > 0) {\n\t\t\t\t\t\t\tthis._reduceIntendationLevel(level, 0);\n\t\t\t\t\t\t\tlevel = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\t\t\tif (!intendationFound && level > 0) {\n\t\t\t\t\t\t\tthis._reduceIntendationLevel(level, 0);\n\t\t\t\t\t\t\tlevel = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (token.longName === \"NEW\") {\n\t\t\t\t\t\t\tlet anyVariablesNewed = false;\n\t\t\t\t\t\t\tlet containsExclusions = false;\n\t\t\t\t\t\t\twhile (++j < this._linetokens[i].length &&\n\t\t\t\t\t\t\t\t(this._linetokens[i][j].type === TokenType.local ||\n\t\t\t\t\t\t\t\t\tthis._linetokens[i][j].type === TokenType.sysvariable)) {\n\t\t\t\t\t\t\t\tanyVariablesNewed = true;\n\t\t\t\t\t\t\t\ttoken = this._linetokens[i][j];\n\t\t\t\t\t\t\t\tif (token.isExcludedVariable) {\n\t\t\t\t\t\t\t\t\tcontainsExclusions = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (token.type === TokenType.local) {\n\t\t\t\t\t\t\t\t\tconst varName = token.name;\n\t\t\t\t\t\t\t\t\tlet message = '';\n\t\t\t\t\t\t\t\t\tconst varState: VariableState = this._varStates[varName] ? this._varStates[varName] : { isExcluded: token.isExcludedVariable }\n\t\t\t\t\t\t\t\t\t// Variable is already NEWed or used\n\t\t\t\t\t\t\t\t\tif (varState.isParameter) {\n\t\t\t\t\t\t\t\t\t\tif (token.isExcludedVariable) {\n\t\t\t\t\t\t\t\t\t\t\tvarState.isExcluded = true;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif (level === 0) { //NEW inside higher intendation-level should be possible\n\t\t\t\t\t\t\t\t\t\t\t\tmessage = \"NEW hides formal parameter \" + varName;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (!varState.newedAtLevel) { // Variable not NEWed yet - New is OK\n\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLevel = [level];\n\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLine = [i];\n\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtPostion = [token.position];\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif (varState.newedAtLevel.indexOf(level) > -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tmessage = \"Variable \" + varName + \" already mentioned in NEW command\"\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLevel.push(level);\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLine!.push(i);\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtPostion!.push(token.position);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (message !== \"\") {\n\t\t\t\t\t\t\t\t\t\tthis._addWarning(message, i, token.position, token.name.length);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis._varStates[varName] = varState;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (anyVariablesNewed === false) {\n\t\t\t\t\t\t\t\tcontainsExclusions = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (containsExclusions) {\n\t\t\t\t\t\t\t\tthis._levelExclusiveNew.push(level);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//Check if parameters are hidden by NEW-exclusion\n\t\t\t\t\t\t\tif (routine.parameters.length > 0 && containsExclusions && level === 0) {\n\t\t\t\t\t\t\t\tfor (let k = 0; k < routine.parameters.length; k++) {\n\t\t\t\t\t\t\t\t\tif (!this._varStates[routine.parameters[k].name].isExcluded) {\n\t\t\t\t\t\t\t\t\t\tthis._addWarning(\"NEW hides formal parameters\", i, token.position, token.name.length);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (token.type === TokenType.local) {  // local variable found at a non NEW command\n\t\t\t\t\t\tconst varName = token.name;\n\t\t\t\t\t\tthis._checkNewed(varName, level, i, token.position);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._checkVariableUsage(routine)\n\t\t}\n\t}\n\t/**\n\t * Check if Variables are formal parameters but not used, or NEWed but not used\n\t * @param routine Subroutine to check\n\t * @param varStates array of found variable-states\n\t */\n\tprivate _checkVariableUsage(routine: Subroutine): void {\n\t\tfor (const key in this._varStates) {\n\t\t\tconst state: VariableState = this._varStates[key];\n\t\t\tif (state.isParameter && !state.isUsed && !this._isIgnoredVariable(key)) {\n\t\t\t\tthis._addWarning(\"Variable \" + key + \" is a formal parameter but not used\", routine.startLine,\n\t\t\t\t\tstate.parameterPosition,\n\t\t\t\t\tkey.length);\n\t\t\t} else if (state.newedAtLine && state.newedAtLine.length > 0 && !state.isUsed && !this._isIgnoredVariable(key)) {\n\t\t\t\tthis._addWarning(\"Variable \" + key + \" is NEWed but not used\",\n\t\t\t\t\tstate.newedAtLine[0],\n\t\t\t\t\tstate.newedAtPostion[0],\n\t\t\t\t\tkey.length);\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Check if a local Variable is correctly NEWed or generate Warning\n\t * @param varName Variable to be checked\n\t * @param level intendation-level on which Variable is found\n\t * @param line Line where variable is found\n\t * @param position Position inside Line\n\t */\n\tprivate _checkNewed(varName: string, level: number, line: number, position: number): void {\n\t\t//Check Variable-Ignore-List\n\t\tlet varState = this._varStates[varName];\n\t\tif (!this._isIgnoredVariable(varName)) {\n\t\t\tlet isNewed = false;\n\t\t\tfor (let k = 0; k < this._levelExclusiveNew.length; k++) {\n\t\t\t\tif (this._levelExclusiveNew[k] <= level) {\n\t\t\t\t\tisNewed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isNewed) {\n\t\t\t\tif (varState) {\n\t\t\t\t\tif (!varState.isParameter) {\n\t\t\t\t\t\tif (varState.newedAtLevel) {\n\t\t\t\t\t\t\tfor (let i = 0; i < varState.newedAtLevel.length; i++) {\n\t\t\t\t\t\t\t\tif (varState.newedAtLevel[i] <= level) {\n\t\t\t\t\t\t\t\t\tisNewed = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisNewed = true;\n\t\t\t\t\t}\n\t\t\t\t\tvarState.isUsed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isNewed) {\n\t\t\t\tthis._addWarning(\"Variable \" + varName + \" not NEWed\", line, position, varName.length);\n\t\t\t}\n\t\t}\n\t\tif (varState) {\n\t\t\tvarState.isUsed = true;\n\t\t} else {\n\t\t\tvarState = { isUsed: true }\n\t\t}\n\t\tthis._varStates[varName] = varState;\n\t}\n\t/**\n\t * Remember a new Warning in this._warnings\n\t * @param message Warning message\n\t * @param line Line where th problem was found\n\t * @param startPosition Position inside Line where the problem was found\n\t * @param len Length of variable-name\n\t */\n\tprivate _addWarning(message: string, line: number, startPosition: number, len: number, severity?) {\n\t\tif (severity === undefined) {\n\t\t\tseverity = vscode.DiagnosticSeverity.Warning;\n\t\t}\n\t\tlet endline = line;\n\t\tlet endPosition = startPosition + len;\n\t\tif (len === -1) { //mark complete rest of line\n\t\t\tendline = line + 1;\n\t\t\tendPosition = 0;\n\t\t}\n\t\tthis._diags.push({\n\t\t\tcode: '',\n\t\t\tmessage,\n\t\t\trange: new vscode.Range(new vscode.Position(line, startPosition), new vscode.Position(endline, endPosition)),\n\t\t\tseverity,\n\t\t\tsource: ''\n\t\t});\n\t}\n\tprivate _checkLine(line: number, tokens: LineToken[]) {\n\t\tlet ifFlag = false;\n\t\tlet intendationFound = false;\n\t\tif (tokens.length === 0) { //empty line = intendation 0 is it OK?\n\t\t\tif (line === this._lineWithDo + 1) {\n\t\t\t\tthis._addWarning(\"Expected intendation level: \" + (this._level + 1) + \", found: 0\", line, 0, 1);\n\t\t\t\tthis._lineWithDo = -2;\n\t\t\t}\n\t\t\tthis._level = 0;\n\t\t}\n\t\tfor (let tokenId = 0; tokenId < tokens.length; tokenId++) { // iterate over every token in actual line\n\t\t\tlet token: LineToken = tokens[tokenId];\n\t\t\tif (token.type === TokenType.comment && token.name.match(/ignoreVars:/)) { //Check for IgnoreVars-directive\n\t\t\t\tthis._variablesToBeIgnored = this._variablesToBeIgnored.concat(token.name.split(\"ignoreVars:\")[1].split(\",\"));\n\t\t\t}\n\t\t\tif (tokenId === 0 && token.type === TokenType.label) { \t//If there was unreachable code before this label\n\t\t\t\t//save a warning\n\t\t\t\t//Remember label in symbol library\n\t\t\t\tif (this._activeSubroutine.startLine > -1) {\n\t\t\t\t\tthis._addSymbol(this._activeSubroutine.name, this._activeSubroutine.startLine, line)\n\t\t\t\t}\n\t\t\t\tthis._activeSubroutine.startLine = line;\n\t\t\t\tthis._activeSubroutine.name = token.name;\n\t\t\t\tthis._isBehindQuit = false;\n\t\t\t\tif (this._startUnreachable) { //Only if there were Code lines after a quit or a goto\n\t\t\t\t\tthis._diags.push({\n\t\t\t\t\t\tcode: '',\n\t\t\t\t\t\tmessage: \"Unreachable Code\",\n\t\t\t\t\t\trange: new vscode.Range(this._startUnreachable, new vscode.Position(line, 0)),\n\t\t\t\t\t\tseverity: vscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\tsource: ''\n\t\t\t\t\t});\n\t\t\t\t\tthis._startUnreachable = false;\n\t\t\t\t}\n\t\t\t\tif (tokens[1] !== undefined && tokens[1].type === TokenType.local) { //Begin of a parametrized subroutine\n\t\t\t\t\tthis._routine.startLine = line;\n\t\t\t\t\twhile (++tokenId < tokens.length && tokens[tokenId].type === TokenType.local) {\n\t\t\t\t\t\tthis._routine.parameters.push({ name: tokens[tokenId].name, position: tokens[tokenId].position });\n\t\t\t\t\t}\n\t\t\t\t\tif (tokenId >= tokens.length) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\ttoken = tokens[tokenId];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === TokenType.keyword || token.type === TokenType.comment) { //Check intendation level\n\t\t\t\tif (intendationFound === false) {\n\t\t\t\t\tif (line === this._lineWithDo + 1) {\n\t\t\t\t\t\tthis._addWarning(\"Expected intendation level: \" + (this._level + 1) + \", found: \" + this._level, line, 0, token.position);\n\t\t\t\t\t\tthis._lineWithDo = -2;\n\t\t\t\t\t}\n\t\t\t\t\tthis._level = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\tif (this._isBehindQuit && this._startUnreachable === false) {\n\t\t\t\t\tthis._startUnreachable = new vscode.Position(line, token.position);\n\t\t\t\t}\n\t\t\t\tconst command = token.longName;\n\t\t\t\tif (command === \"IF\" || command === \"ELSE\") {\n\t\t\t\t\tifFlag = true;\n\t\t\t\t}\n\t\t\t\tif (command === \"DO\" && token.hasArguments === false) {\n\t\t\t\t\tthis._lineWithDo = line;\n\t\t\t\t}\n\t\t\t\tif (!ifFlag && (command === \"QUIT\" || command === \"GOTO\" || command === \"HALT\") && !token.isPostconditioned && this._level === 0) {\n\t\t\t\t\tlet hasPostcondition = false;\n\t\t\t\t\tif (command === \"GOTO\") { //Check if GOTO argument is postconditioned\n\t\t\t\t\t\tfor (let k = tokenId + 1; k < tokens.length; k++) {\n\t\t\t\t\t\t\tif (tokens[k].type === TokenType.argPostcondition) {\n\t\t\t\t\t\t\t\thasPostcondition = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (tokens[k].type === TokenType.keyword) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!hasPostcondition) {\n\t\t\t\t\t\tthis._routine.endLine = line;\n\t\t\t\t\t\tif (this._routine.startLine !== -1) {\n\t\t\t\t\t\t\tthis._subroutines.push(this._routine);\n\t\t\t\t\t\t\tthis._routine = { startLine: -1, endLine: -1, parameters: [] };\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._isBehindQuit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === TokenType.intendation) { //check if new intendation level is OK and remember new level\n\t\t\t\tconst expectedLevel = line === this._lineWithDo + 1 ? this._level + 1 : this._level;\n\t\t\t\tthis._level = token.name.length;\n\t\t\t\tintendationFound = true;\n\t\t\t\tif (this._level > expectedLevel) {\n\t\t\t\t\tthis._addWarning(\"Intendation Level wrong, found: \" + this._level + \", expected: \" + expectedLevel, line, 0, token.position);\n\t\t\t\t}\n\t\t\t\tif (line === this._lineWithDo + 1 && this._level < expectedLevel) {\n\t\t\t\t\tthis._addWarning(\"Higher intendation expected after argumentless Do\", line, 0, token.position);\n\t\t\t\t}\n\t\t\t\tthis._lineWithDo = -2;\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Checks if the given variablename is on the ignore-list\n\t * @param variable\n\t * @returns true if variable can be ignored at NEW-Check\n\t */\n\tprivate _isIgnoredVariable(variable: string): boolean {\n\t\tlet isIgnoredVariable = false;\n\t\tfor (let k = 0; k < this._variablesToBeIgnored.length; k++) {\n\t\t\tif (new RegExp(\"^\" + this._variablesToBeIgnored[k] + \"$\").test(variable)) {\n\t\t\t\tisIgnoredVariable = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn isIgnoredVariable;\n\t}\n\t/**\n\t * Clears all NEWs that were started above the new intendation-level\n\t * @param level old intendation-level\n\t * @param newLevel new-intendation-level\n\t */\n\tprivate _reduceIntendationLevel(level: number, newLevel: number) {\n\t\tfor (let k = newLevel + 1; k <= level; k++) {\n\t\t\tconst index = this._levelExclusiveNew.indexOf(k);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._levelExclusiveNew.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\tfor (const key in this._varStates) {\n\t\t\tconst state = this._varStates[key];\n\t\t\tlet found = false;\n\t\t\tlet memLine = 0;\n\t\t\tlet memPosition = 0;\n\t\t\tif (state.newedAtLevel) {\n\t\t\t\tfor (let k = newLevel + 1; k <= level; k++) {\n\t\t\t\t\tconst index = state.newedAtLevel?.indexOf(k)\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tmemLine = state.newedAtLine[index];\n\t\t\t\t\t\tmemPosition = state.newedAtPostion[index];\n\t\t\t\t\t\tstate.newedAtLevel.splice(index, 1);\n\t\t\t\t\t\tstate.newedAtLine.splice(index, 1);\n\t\t\t\t\t\tstate.newedAtPostion.splice(index, 1);\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tthis._varStates[key] = state;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found && !state.isUsed) {\n\t\t\t\t\tthis._addWarning(\"Variable \" + key + \" is NEWed but not used\",\n\t\t\t\t\t\tmemLine,\n\t\t\t\t\t\tmemPosition,\n\t\t\t\t\t\tkey.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate _addSymbol(name: string, startLine: number, endLine: number) {\n\t\tconst startPosition = new vscode.Position(startLine, 0);\n\t\tconst endPosition = new vscode.Position(endLine, 0);\n\t\tconst methodRange = new vscode.Location(this._document.uri, new vscode.Range(startPosition, endPosition));\n\t\tsymbols.push(new vscode.SymbolInformation(name, vscode.SymbolKind.Function, '', methodRange));\n\t}\n}\n","import * as vscode from 'vscode';\nimport { MumpsLineParser, LabelInformation } from './mumpsLineParser'\nconst parser = new MumpsLineParser();\n\nexport default class MumpsDocumentSymbolProvider implements vscode.DocumentSymbolProvider {\n\n\tpublic provideDocumentSymbols(document: vscode.TextDocument): Promise<vscode.SymbolInformation[]> {\n\t\treturn new Promise(resolve => {\n\n\t\t\tconst labels: LabelInformation[] = parser.getLabels(document.getText());\n\t\t\tconst symbols: vscode.SymbolInformation[] = [];\n\n\t\t\tfor (let i = 0; i < labels.length; i++) {\n\t\t\t\tconst startPosition = new vscode.Position(labels[i].line, 0);\n\t\t\t\tlet endPostionLine = document.lineCount - 1;\n\t\t\t\tif (labels[i + 1] !== undefined) {\n\t\t\t\t\tendPostionLine = labels[i + 1].line\n\t\t\t\t}\n\t\t\t\tconst endPosition = new vscode.Position(endPostionLine, 0);\n\t\t\t\tconst methodRange = new vscode.Location(document.uri, new vscode.Range(startPosition, endPosition));\n\t\t\t\tsymbols.push(new vscode.SymbolInformation(labels[i].name, vscode.SymbolKind.Function, '', methodRange));\n\t\t\t}\n\n\t\t\tresolve(symbols);\n\t\t})\n\t}\n}","import * as vscode from 'vscode';\r\nconst DIVIDERLINE = \"\\t;****************\\n\"\r\n\r\nexport default function mumpsDocumenter() {\r\n\tconst editor = vscode.window.activeTextEditor\r\n\tif (editor) {\r\n\t\tconst document = editor.document\r\n\t\tlet InsertPosition = editor.selection.start.with(editor.selection.start.line, 0)\r\n\r\n\t\t//if the line is empty look down for the label\r\n\t\twhile (InsertPosition.line < document.lineCount) {\r\n\t\t\tconst txt = editor.document.lineAt(InsertPosition.line).text\r\n\t\t\tif (txt.replace(/\\t| /ig, \"\") === \"\") {\r\n\t\t\t\tInsertPosition = InsertPosition.translate(1, 0)\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (InsertPosition.line === document.lineCount) {\r\n\t\t\tInsertPosition = InsertPosition.translate(-1, 0)\r\n\t\t}\r\n\t\t//start moving up the file looking for the label header\r\n\t\twhile (InsertPosition.line >= 0) {\r\n\t\t\tconst text = editor.document.lineAt(InsertPosition.line).text\r\n\t\t\tif (!(text.length === 0 || text.charAt(0) === \" \" || text.charAt(0) === '\\t' || text.charAt(0) === ';')) {\r\n\t\t\t\teditor.edit((editBuilder) => {\r\n\t\t\t\t\teditBuilder.insert(InsertPosition, makeSignature(text))\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tInsertPosition = InsertPosition.translate(-1, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction makeSignature(labelLine: string) {\r\n\tlet Signature = \"\"\r\n\tlet parameterString: string[] = [];\r\n\tSignature += DIVIDERLINE\r\n\tSignature += \"\\t; DESCRIPTION: \\n\"\r\n\tconst parameters = labelLine.match(/\\(.*\\)/);\r\n\tif (parameters !== null && parameters.length > 0) {\r\n\t\tparameterString = parameters[0].toString().substring(1, parameters[0].toString().length - 1).split(\",\")\r\n\t\tif (parameterString.length > 0) {\r\n\t\t\tSignature += \"\\t; PARAMETERS: \\n\"\r\n\t\t\tparameterString.forEach(function (element: string) {\r\n\t\t\t\tSignature += \"\\t;    \" + element + \": \\n\"\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tSignature += \"\\t; RETURNS: \\n\"\r\n\tSignature += \"\\t; REVISIONS: \\n\"\r\n\tSignature += DIVIDERLINE\r\n\treturn Signature;\r\n}\r\n\r\n","import * as vscode from 'vscode';\n\nexport default class MumpsEvalutableExpressionProvider {\n\tprovideEvaluatableExpression(document: vscode.TextDocument, position: vscode.Position): vscode.ProviderResult<vscode.EvaluatableExpression> {\n\t\t/*\n\t\tconst diags: readonly vscode.Diagnostic[] | undefined = mumpsDiagnostics.get(document.uri);\n\t\t//If Position is inside Error-marked Area then no Check for Variables is performed\n\t\tif (diags) {\n\t\t\tconst found = diags.find(diag => diag.range.contains(position))\n\t\t\tif (found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\t*/\n\t\tconst lineContent = document.lineAt(position.line).text;\n\t\tif (lineContent.charAt(position.character) === \")\") {\n\t\t\treturn this.getExpression(position.line, lineContent.substring(0, position.character))\n\t\t}\n\t\tlet result: RegExpExecArray | null = null;\n\t\tconst expression = /([ (.,+\\-*_:=])([\\^$]?%?[a-zA-Z][a-zA-Z\\d]*)/g;\n\n\t\t// find the word under the cursor\n\t\t// eslint-disable-next-line no-cond-assign\n\t\twhile (result = expression.exec(lineContent)) {\n\t\t\tlet start = result.index;\n\t\t\tstart += result[0].length - result[2].length; // ignore first part of expression\n\t\t\tconst end = start + result[2].length - 1;\n\n\t\t\tif (start <= position.character && end >= position.character) {\n\t\t\t\treturn new vscode.EvaluatableExpression(new vscode.Range(position.line, start, position.line, end), result[2]);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\tgetExpression(line: number, content: string): vscode.EvaluatableExpression | undefined {\n\t\tlet isInsideString = false;\n\t\tfor (let i = 0; i < content.length; i++) {\n\t\t\tif (content.charAt(i) === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t}\n\t\t}\n\t\tif (isInsideString) { //Closing Bracket is inside a String - no evaluable Expression\n\t\t\treturn;\n\t\t}\n\t\tlet level = 1;\n\t\tlet position = 0;\n\t\tfor (let i = content.length - 1; i > -1; i--) {\n\t\t\tconst char = content.charAt(i);\n\t\t\tif (char === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t}\n\t\t\tif (char === '(' && !isInsideString) {\n\t\t\t\tlevel--;\n\t\t\t\tif (level === 0) {\n\t\t\t\t\tposition = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (char === ')' && !isInsideString) {\n\t\t\t\tlevel++;\n\t\t\t}\n\t\t}\n\t\tif (level === 0) { // Corresponding opening bracket found\n\t\t\tconst part = content.substring(0, position);\n\t\t\tconst expression = /([ (,+\\-*_:=])([\\^$]?%?[a-zA-Z][a-zA-Z\\d]*)$/\n\t\t\tconst match = part.match(expression);\n\t\t\tif (match) {\n\t\t\t\treturn new vscode.EvaluatableExpression(new vscode.Range(line, position - match[2].length, line, content.length + 1));\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n}","import * as vscode from 'vscode';\nexport default class MumpsFormattingHelpProvider {\n\tprovideDocumentFormattingEdits(document: vscode.TextDocument) {\n\t\tconst textEdits: vscode.TextEdit[] = []\n\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\tconst line = document.lineAt(i).text;\n\t\t\tformatDocumentLine(line, i, textEdits);\n\t\t}\n\t\treturn textEdits;\n\t}\n\tprovideDocumentRangeFormattingEdits(document, range) {\n\t\tconst textEdits: vscode.TextEdit[] = []\n\t\tfor (let i = range.start.line; i <= range.end.line; i++) {\n\t\t\tconst line = document.lineAt(i).text;\n\t\t\tformatDocumentLine(line, i, textEdits);\n\t\t}\n\t\treturn textEdits;\n\t}\n}\nfunction formatDocumentLine(line: string, lineNumber: number, textEdits) {\n\tconst emptyLine = line.replace(/( |\\t)/ig, \"\");\n\tif (emptyLine.length === 0) {\n\t\ttextEdits.push(vscode.TextEdit.insert(new vscode.Position(lineNumber, 0), \"\\t;\"))\n\t}\n\tif (line.endsWith(\". \") || line.endsWith(\".\")) {\n\t\ttextEdits.push(vscode.TextEdit.insert(new vscode.Position(lineNumber, line.length), \";\"))\n\t}\n\tif (line.startsWith(\" \")) {\n\t\tlet endSpace: number;\n\t\tfor (endSpace = 0; endSpace < line.length; endSpace++) {\n\t\t\tif (line.charAt(endSpace) !== \" \") {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttextEdits.push(vscode.TextEdit.replace(new vscode.Range(new vscode.Position(lineNumber, 0), new vscode.Position(lineNumber, endSpace)), \"\\t\"));\n\t}\n\tif (line.match(/^([A-Za-z%][A-Za-z0-9]*(\\([A-Za-z%][A-Za-z0-9]*(,[A-Za-z%][A-Za-z0-9]*)*\\))?)?[\\t ]+\\./)) { //labeled or unlabeled Line with .\n\t\tlet replacementString = \". \";\n\t\tconst dotPosition = line.indexOf(\".\");\n\t\tlet dotCount = 1;\n\t\tlet spaceCount = 0;\n\t\tlet char = \"\";\n\t\tdo {\n\t\t\tchar = line.charAt(dotCount + spaceCount + dotPosition);\n\t\t\tif (char === \" \") {\n\t\t\t\tspaceCount++;\n\t\t\t} else if (char === \".\") {\n\t\t\t\tdotCount++;\n\t\t\t\treplacementString += \". \";\n\t\t\t}\n\t\t} while (char === \".\" || char === \" \")\n\t\tif (dotCount !== spaceCount) {\n\t\t\ttextEdits.push(vscode.TextEdit.replace(new vscode.Range(new vscode.Position(lineNumber, dotPosition), new vscode.Position(lineNumber, dotPosition + dotCount + spaceCount)), replacementString));\n\t\t}\n\t}\n}\n","import * as vscode from 'vscode';\r\nimport { TokenType, MumpsLineParser } from './mumpsLineParser'\r\nconst tokenModifiers = ['standard'];\r\nconst subtype = \"standard\";\r\nconst tokentypes: string[] = Object.keys(TokenType).map(key => TokenType[key]);\r\nconst SemanticTokens = new vscode.SemanticTokensLegend(tokentypes, tokenModifiers);\r\nconst parser = new MumpsLineParser();\r\n//type: \"global\" | \"local\" | \"exfunction\" | \"nonMfunction\" | \"entryref\" | \"operator\" |\r\n//      \"keyword\" | \"ifunction\" | \"label\" | \"comment\" | \"sysvariable\" | \"string\" | \"number\",\r\n\r\n\r\nconst MumpsHighlighter: vscode.DocumentSemanticTokensProvider = {\r\n\tprovideDocumentSemanticTokens(\r\n\t\tdocument: vscode.TextDocument\r\n\t): vscode.ProviderResult<vscode.SemanticTokens> {\r\n\t\t// analyze the document and return semantic tokens\r\n\t\tconst text = document.getText();\r\n\t\tconst result = parser.analyzeLines(text);\r\n\t\tconst tokensBuilder = new vscode.SemanticTokensBuilder(SemanticTokens);\r\n\t\tfor (let line = 0; line < result.length; line++) {\r\n\t\t\tconst tokens = result[line];\r\n\t\t\tfor (let tokenId = 0; tokenId < tokens.length; tokenId++) {\r\n\t\t\t\tconst t = tokens[tokenId];\r\n\t\t\t\tconst type = t.type;\r\n\t\t\t\tif (type === TokenType.exfunction) {\r\n\t\t\t\t\tt.position -= 2;\t\t\t//Correct Position because of leading $$\r\n\t\t\t\t\tt.name = \"$$\" + t.name;\r\n\t\t\t\t}\r\n\t\t\t\tif (t.position < 0) {\r\n\t\t\t\t\tconsole.log(tokens);\r\n\t\t\t\t}\r\n\t\t\t\ttokensBuilder.push(\r\n\t\t\t\t\tnew vscode.Range(new vscode.Position(line, t.position), new vscode.Position(line, t.position + t.name.length)),\r\n\t\t\t\t\tTokenType[type], [subtype]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tokensBuilder.build();\r\n\t}\r\n};\r\n\r\nexport { MumpsHighlighter, SemanticTokens }\r\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\nexport default class MumpsHoverProvider {\r\n\tprovideHover(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenHoverInfo();\r\n\t}\r\n}\r\n","/* eslint-disable no-cond-assign */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable no-prototype-builtins */\r\nimport fs = require('fs');\r\ninterface ErrorInformation {\r\n\ttext: string,\r\n\tposition: number,\r\n\tline?: number,\r\n\tindexFound?: boolean,\r\n\tglobalFound?: boolean,\r\n\tindirectionFound?: boolean\r\n}\r\nexport enum TokenType {\r\n\tglobal, local, exfunction, nonMfunction, entryref, operator, keyword, ifunction, label, comment, sysvariable,\r\n\tstring, number, intendation, argPostcondition\r\n}\r\nexport interface LineToken {\r\n\ttype: TokenType,\r\n\tname: string,\r\n\tlongName?: string,\r\n\tisPostconditioned?: boolean,\r\n\tisExcludedVariable?: boolean,\r\n\thasArguments?: boolean,\r\n\tposition: number\r\n}\r\ninterface LineComand {\r\n\tcommand: string,\r\n\tposition: number\r\n}\r\ninterface LineComment {\r\n\tcomment: string,\r\n\tposition: number\r\n}\r\ninterface LineObject {\r\n\tlineComment?: LineComment;\r\n\tlineIndentationArray?: string[];\r\n\tlineRoutines?: TmpFunction[];\r\n\tlineLeadSpace?: string,\r\n\tlineLabel?: string,\r\n\tlineExpression: string,\r\n\terrorText?: string,\r\n\terrorPosition?: number,\r\n\texpressionPosition: number\r\n}\r\ninterface TmpFunction {\r\n\tmCommand: string,\r\n\tmArguments: string,\r\n\tmPostCondition: string,\r\n\tcmdPosition: number,\r\n\targPosition: number,\r\n\tpcPosition: number\r\n}\r\ninterface ModifiedLine {\r\n\tlineText: string,\r\n\terrorText: string\r\n}\r\nexport interface LineInformation {\r\n\terror: ErrorInformation,\r\n\ttokens: LineToken[]\r\n}\r\nexport interface LabelInformation {\r\n\tname: string,\r\n\tline: number\r\n}\r\nconst label = /^[A-Za-z%][A-Za-z0-9]*(\\([A-Za-z%][A-Za-z0-9]*(,[A-Za-z%][A-Za-z0-9]*)*\\))?/\r\nconst lvn = /^[A-Za-z%][A-Za-z0-9]*/\r\nconst gvn = /^\\^[A-Za-z%][A-Za-z0-9]*/\r\nconst isv = /^\\$(DEVICE|ECODE|EC|ESTACK|ES|ETRAP|ET|HALT|HOROLOG|H|IO|I|JOB|J|KEY|K|NAMESPACE|PRINCIPAL|P|QUIT|Q|REFERENCE|R|STACK|ST|STORAGE|S|SYSTEM|TEST|THIS|TLEVEL|TL|T|USERNAME|X|Y|ZALLOCSTOR|ZA|ZB|ZCHSET|ZCLOSE|ZCMDLINE|ZCM|ZCOMPILE|ZCO|ZCSTATUS|ZCH[A-Z]*|ZC|ZDATEFORM|ZDA|ZDIRECTORY|ZD|ZEDITOR|ZED|ZEOF|ZEO|ZE[A-Z]*|ZGBLDIR|ZG|ZHRORLOG|ZH|ZININTERRUPT|ZINI|ZINTERRUPT|ZINT|ZIO|ZJOB|ZJ|ZKEY|ZLEVEL|ZL|ZMAXTPTIME|ZMAXTPTI|ZMODE|ZMO|ZONLNRLBK|ZPATNUMERIC|ZPATN|ZPIN|ZPOSITION|ZPOS|ZPOUT|ZPROMPT|ZQUIT|ZREALSTOR|ZRELDATE|ZRO[A-Z]*|ZSOURCE|ZSO|ZSTA[A-Z]*|ZSTEP|ZSTRP|ZSTRPLLIM|ZST|ZSYSTEM|ZSY|ZS|ZTEXIT|ZTE|ZTIMEOUT|ZTIM|ZTRAP|ZT|ZUSEDSTOR|ZUT|ZVERSION|ZV[A-Z]*|ZYERROR|ZYRELEASE|ZTDATA|ZTDELIM|ZTLEVEL|ZTNAME|ZTOLDVAL|ZTRIGGEROP|ZTSLATE|ZTUPDATE|ZTVALUE|ZTWORMHOLE)/i\r\nconst ifunction = /^\\$(ASCII|A|CHAR|C|DATA|D|EXTRACT|E|FIND|F|FNUMBER|FN|GET|G|INCREMENT|INCR|I|JUSTIFY|J|LENGTH|L|NAME|NA|NEXT|N|ORDER|O|PIECE|P|QLENGTH|QL|QSUBSCRIPT|QS|QUERY|Q|RANDOM|R|REVERSE|RE|SELECT|S|STACK|ST|TEXT|T|TRANSLATE|TR|VIEW|V|ZAHANDLE|ZAH|ZASCII|ZATRANSFORM|ZAT|ZBITAND|ZBITCOUNT|ZBITFIND|ZBITGET|ZBITLEN|ZBITNOT|ZBITOR|ZBITSET|ZBITSTR|ZBITXOR|ZCHAR|ZCH|ZCOLLATE|ZCONVERT|ZCO|ZDATE|ZDATA|ZD|ZEXTRACT|ZE|ZFIND|ZF|ZGETJPI|ZG|ZINCREMENT|ZINCR|ZJOBEXAM|ZJUSTIFY|ZJ|ZLENGTH|ZL|ZMESSAGE|ZPARSE|ZPEEK|ZPIECE|ZPI|ZPREVIOUS|ZP|ZQGBLMOD|ZSEARCH|ZSIGPROC|ZSOCKET|ZSUBSTR|ZSUB|ZSYSLOG|ZTRANSLATE|ZTRIGGER|ZTRI|ZTRNLNM|ZTR|ZWIDTH|ZWRITE|ZW)(?=\\()/i;\r\nconst nonMfunction = /^\\$&([A-Za-z%0-9][A-Za-z0-9]*\\.)?([A-Za-z%0-9][A-Za-z0-9]*)(\\^[A-Za-z%][A-Za-z0-9]*)?/\r\nconst entryref = /^(&[A-Za-z0-9]*\\.?)?@?([A-Za-z%0-9][A-Za-z0-9]*)?(\\^@?[A-Za-z%][A-Za-z0-9]*)?/\r\nconst routineref = /^\\^@?[A-Za-z%][A-Za-z0-9]*/\r\nconst numlit = /^(\\d*\\.?\\d*(E-?\\d+)?)/\r\n//const strlit = /^\"([^\"]*(\"\")*)*\"/\r\nconst strlit = /^\"(\"\"|[^\"])*\"/\r\nconst command = /^[B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|U|USE|V|VIEW|W|WRITE|X|XECUTE|ZA|ZALLOCATE|ZBR|ZBREAK|ZC|ZCONTINUE|ZD|ZDEALLOCATE|ZE|ZEDIT|ZG|ZGOTO|ZHALT|ZH|ZHELP|ZK|ZKILL|ZL|ZLINK|ZM|ZMESSAGE|ZP|ZPRINT|ZRUPDATE|ZSH|ZSHOW|ZST|ZSTEP|ZSY|ZSYSTEM|ZTC|ZTCOMMIT|ZTR|ZTRIGGER|ZTS|ZTSTART|ZWI|ZWITHDRAW|ZWR|ZWRITE]/i\r\nconst binoperator = /^('=|'>|'<|<=|>=|'&|'!|'\\?|'\\[|'\\]|\\*\\*|\\+|-|\\*|\\/|\\\\|#|'|&|!|_|<|>|=|\\[|\\]\\]|\\]|\\?|@)/\r\nconst unaryoperator = /(-|'|\\+|@)/\r\nconst patcode = /^([A|C|E|L|N|P|U]|^(\"([^\"](\"\")*)*\"))+/i\r\nconst repititionCount = /^\\d*\\.?\\d*/\r\nconst openkeywords = /^APPEND|ATTACH=|BLOCK(SIZE)?=|COMMAND=|CONNECT=|(NO)?DELIM(ITER)?=?|EXC(EPTION)?=|FIFO|(NO)?FIXED|GROUP=|[IO]?CHSET=|KEY|IKEY|INDEPENDANT|IOERROR=|NEW[A-Z]*|MOREREADTIME=|OKEY|OWNER=|(NO)?RCHK|(NO)?READ(ONLY)?|RECORD(SIZE)?=|(NO)?RETRY|REWIND|SEEK=|SHELL=|STDERR=|(NO)?STREAM|SYSTEM=|(NO)?TRUNCATE|UIC=|VARIABLE|WORLD=|Z?(NO)?WRAP|WRITE(ONLY)?|ZBFSIZE|Z(NO)?DELAY|Z(NO)?FF|ZIBFSIZE|Z?LISTEN=/i\r\nconst usekeywords = /^ATTACH|(NO)?CENABLE|[IO]?CHSET=|CLEAR(SCREEN)?|CONNECT|(NO)?CONVERT|CTRAP=|(NO)?DELIM(ITER)?=?|DETACH|DOWNSCROLL|(NO)?ECHO|(NO)?EDITING|ERASELINE|(NO)?ESC(APE)?|EXC(EPTION)?=|(NO)?FILTER=?|FLUSH|GROUP=|KEY|IKEY|IOERROR=|OKEY|OWNER=|(NO)?PASTHRU|(NO)?RCHK|(NO)?RETRY|REWIND|SEEK=|SKIPFILE=|SOCKET=|SPACE=|TERM(INATOR)?=|(NO)?TRUNCATE|(NO)?TTSNYC|(NO)?TYPEAHEAD|UPSCROLL|Z?LENGTH=|Z?WIDTH=|Z?(NO)?WRAP|WRITELB=|X=|Y=|ZBFSIZE|Z(NO)?DELAY|Z(NO)?FF|ZIBFSIZE|LISTEN=/i\r\nconst closekeywords = /^DELETE|(NO)?DESTROY|EXCEPTION=|GROUP=|OWNER=|RENAME=|SOCKET=|TIMEOUT=|UIC=|WORLD=/i\r\nconst jobkeywords = /^CMD=|CMDLINE=|DEF=|DEFAULT=|ERR=|ERROR=|GBL=|GBLDIR=|IN=|INPUT=|OUT=|OUTPUT=|PASS|PASSCURLVN|STA=|STARTUP=/i\r\nconst tstartkeywords = /^SERIAL|S|T=|TRANSACTIONID=/i\r\nconst cmdExpansions = {\r\n\t'B': 'BREAK', 'C': 'CLOSE', 'D': 'DO', 'E': 'ELSE', 'F': 'FOR', 'G': 'GOTO', 'H': 'HALT', 'I': 'IF', 'J': 'JOB', 'K': 'KILL', 'L': 'LOCK', 'M': 'MERGE', 'N': 'NEW',\r\n\t'O': 'OPEN', 'Q': 'QUIT', 'R': 'READ', 'S': 'SET', 'U': 'USE', 'V': 'VIEW', 'W': 'WRITE', 'X': 'XECUTE', 'ZA': 'ZALLOCATE', 'ZB': 'ZBREAK', 'ZC': 'ZCONTINUE',\r\n\t'ZD': 'ZDEALLOCATE', 'ZED': 'ZEDIT', 'ZG': 'ZGOTO', 'ZH': 'ZHELP', 'ZK': 'ZKILL', 'ZL': 'ZLINK', 'ZM': 'ZMESSAGE', 'ZP': 'ZPRINT', 'ZSH': 'ZSHOW',\r\n\t'ZST': 'ZSTEP', 'ZSY': 'ZSYSTEM', 'ZTC': 'ZTCOMMIT', 'ZTR': 'ZTRIGGER', 'ZTS': 'ZTSTART', 'ZWI': 'ZWITHDRAW', 'ZWR': 'ZWRITE'\r\n}\r\nconst funcExpansions = {\r\n\t'A': 'ASCII', 'C': 'CHAR', 'D': 'DATA', 'E': 'EXTRACT', 'F': 'FIND', 'FN': 'FNUMBER', 'G': 'GET', 'I': 'INCREMENT', 'J': 'JUSTIFY', 'L': 'LENGTH', 'NA': 'NAME', 'N': 'NEXT', 'O': 'ORDER',\r\n\t'P': 'PIECE', 'QL': 'QLENGTH', 'QS': 'QSUBSCRIPT', 'Q': 'QUERY', 'R': 'RANDOM', 'RE': 'REVERSE', 'S': 'SELECT', 'ST': 'STACK', 'T': 'TEXT', 'TR': 'TRANSLATE', 'V': 'VIEW',\r\n\t'ZA': 'ZASCII', 'ZAH': 'ZAHANDLE', 'ZCO': 'ZCONVERT', 'ZD': 'ZDATE', 'ZE': 'ZEXTRACT', 'ZF': 'ZFIND', 'ZG': 'ZGETJPI', 'ZJ': 'ZJUSTIFY', 'ZL': 'ZLENGTH', 'ZM': 'ZMESSAGE', 'ZPI': 'ZPIECE', 'ZP': 'ZPREVIOUS',\r\n\t'ZSUB': 'ZSUBSTR', 'ZTR': 'ZTRANSLATE', 'ZTRI': 'ZTRIGGER', 'ZW': 'ZWIDTH'\r\n}\r\nconst isvExpansions = {\r\n\t'D': 'DEVICE', 'EC': 'ECODE', 'ES': 'ESTACK', 'ET': 'ETRAP', 'H': 'HOROLOG', 'I': 'IO', 'J': 'JOB', 'K': 'KEY', 'P': 'PRINCIPAL', 'Q': 'QUIT', 'R': 'REFERENCE', 'ST': 'STACK',\r\n\t'S': 'STORAGE', 'SY': 'SYSTEM', 'T': 'TEST', 'TL': 'TLEVEL', 'TR': 'TRESTART', 'ZC': 'ZCSTATUS', 'ZDA': 'ZDATEFORM', 'ZD': 'ZDIRECTORY', 'ZED': 'ZEDITOR', 'ZEO': 'ZEOF', 'ZE': 'ZERROR',\r\n\t'ZG': 'ZGBLDIR', 'ZH': 'ZHRORLOG', 'ZINI': 'ZININTERRUPT', 'ZINT': 'ZINTERRUPT', 'ZJ': 'ZJOB', 'ZL': 'ZLEVEL', 'ZMAXPTI': 'ZMAXTPTIME', 'ZMO': 'ZMODE', 'ZPOS': 'ZPOSITION',\r\n\t'ZPROM': 'ZPROMPT', 'ZRO': 'ZROUTINES', 'ZSO': 'ZSOURCE', 'ZS': 'ZSTATUS', 'ZST': 'ZSTEP', 'ZSTRP': 'ZSTRPLLIM', 'ZSY': 'ZSYSTEM', 'ZTE': 'ZTEXIT', 'ZTIM': 'ZTIMEOUT', 'ZT': 'ZTRAP',\r\n\t'ZV': 'ZVERSION', 'ZYER': 'ZYERROR', 'ZYRE': 'ZYRELEASE', 'ZTDE': 'ZTDELIM'\r\n\r\n}\r\nconst cmdParams = {\r\n\t'BREAK': {\r\n\t\t'abbreviation': 'B',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[:tvexpr][,...]]'\r\n\t},\r\n\t'CLOSE': {\r\n\t\t'abbreviation': 'C',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:(keyword[=expr][:...])][,...]'\r\n\t},\r\n\t'DO': {\r\n\t\t'abbreviation': 'D',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[entryref[(expr:.lvn[,...])][:tvexpr][,...]]'\r\n\t},\r\n\t'ELSE':\r\n\t{\r\n\t\t'abbreviation': 'E',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'FOR': {\r\n\t\t'abbreviation': 'F',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': '[lvn=expr[:numexpr1[:numexpr2]][,...]]]'\r\n\t},\r\n\t'GOTO': {\r\n\t\t'abbreviation': 'G',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'entryref[:tvexpr][,...]'\r\n\t},\r\n\t'HALT': {\r\n\t\t'abbreviation': 'H',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'HANG': {\r\n\t\t'abbreviation': 'H',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'numexpr[,...]'\r\n\t},\r\n\t'IF': {\r\n\t\t'abbreviation': 'I',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': '[tvexpr[,...]]'\r\n\t},\r\n\t'JOB': {\r\n\t\t'abbreviation': 'J',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'entryref[(expr[,...])][:[(keyword[=value][:...])][:numexpr]][,...]'\r\n\t},\r\n\t'KILL': {\r\n\t\t'abbreviation': 'K',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[glvn | (lvn[,...]) | *lname | *lvn ]'\r\n\t},\r\n\t'LOCK': {\r\n\t\t'abbreviation': 'L',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[-|+]nref|(nref[,...])[:numexpr] [,...]]'\r\n\t},\r\n\t'MERGE': {\r\n\t\t'abbreviation': 'M',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn=glvn[,...]'\r\n\t},\r\n\t'NEW': {\r\n\t\t'abbreviation': 'N',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[(]lvn[,...][)][,...]]'\r\n\t},\r\n\t'OPEN': {\r\n\t\t'abbreviation': 'O',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:[(keyword[=expr][:...])] [:numexpr]][,...]'\r\n\t},\r\n\t'QUIT': {\r\n\t\t'abbreviation': 'Q',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr | *lname | *lvn]'\r\n\t},\r\n\t'READ': {\r\n\t\t'abbreviation': 'R',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '(glvn|*glvn|glvn#intexpr)[:numexpr]|strlit|fcc[,...]'\r\n\t},\r\n\t'SET': {\r\n\t\t'abbreviation': 'S',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'setleft=expr | (setleft[,...])=expr | *lvn=lname | aliascontainer[,...]'\r\n\t},\r\n\t'TCOMMIT': {\r\n\t\t'abbreviation': 'TC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'TRESTART': {\r\n\t\t'abbreviation': 'TRE',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'TROLLBACK': {\r\n\t\t'abbreviation': 'TRO',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'TSTART': {\r\n\t\t'abbreviation': 'TS',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[([lvn...])|lvn|*|][:keyword|(keyword...)]'\r\n\t},\r\n\t'USE': {\r\n\t\t'abbreviation': 'U',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:(keyword[=expr][:...])][,...]'\r\n\t},\r\n\t'VIEW': {\r\n\t\t'abbreviation': 'V',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'keyword[:expr[:...]][,...]'\r\n\t},\r\n\t'WRITE': {\r\n\t\t'abbreviation': 'W',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr|*intexpr|fcc[,...]'\r\n\t},\r\n\t'XECUTE': {\r\n\t\t'abbreviation': 'X',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:tvexpr][,...]'\r\n\t},\r\n\t'ZALLOCATE': {\r\n\t\t'abbreviation': 'ZA',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[(]nref[,...][)][:intexpr][,...]'\r\n\t},\r\n\t'ZBREAK': {\r\n\t\t'abbreviation': 'ZB',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[-]entryref[:[expr][:intexpr]][,...]'\r\n\t},\r\n\t'ZCOMPILE': {\r\n\t\t'abbreviation': 'ZCOM',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[,...]'\r\n\t},\r\n\t'ZCONTINUE': {\r\n\t\t'abbreviation': 'ZC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'ZDEALLOCATE': {\r\n\t\t'abbreviation': 'ZD',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[nref[,...]]'\r\n\t},\r\n\t'ZEDIT': {\r\n\t\t'abbreviation': 'ZED',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[,...]]'\r\n\t},\r\n\t'ZGOTO': {\r\n\t\t'abbreviation': 'ZG',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[intexpr][:entryref[:tvexpr]],...]'\r\n\t},\r\n\t'ZHALT': {\r\n\t\t'abbreviation': 'ZHALT',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'ZHELP': {\r\n\t\t'abbreviation': 'ZH',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr1[:expr2],...]'\r\n\t},\r\n\t'ZKILL': {\r\n\t\t'abbreviation': 'ZK',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn'\r\n\t},\r\n\t'ZLINK': {\r\n\t\t'abbreviation': 'ZL',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr1[:expr2][,...]]'\r\n\t},\r\n\t'ZMESSAGE': {\r\n\t\t'abbreviation': 'ZM',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'intexpr[:expr2][:...]'\r\n\t},\r\n\t'ZPRINT': {\r\n\t\t'abbreviation': 'ZP',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t},\r\n\t'ZRUPDATE': {\r\n\t\t'abbreviation': 'ZRUP',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[,...]'\r\n\t},\r\n\t'ZSHOW': {\r\n\t\t'abbreviation': 'ZSH',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[:glvn][,...]]'\r\n\t},\r\n\t'ZSTEP': {\r\n\t\t'abbreviation': 'ZST',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[keyword[:expr]][,...]'\r\n\t},\r\n\t'ZSYSTEM': {\r\n\t\t'abbreviation': 'ZSY',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr][,...]]'\r\n\t},\r\n\t'ZTCOMMIT': {\r\n\t\t'abbreviation': 'ZTC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'ZTRIGGER': {\r\n\t\t'abbreviation': 'ZTR',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'gvn'\r\n\t},\r\n\t'ZTSTART': {\r\n\t\t'abbreviation': 'ZTS',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'ZWITHDRAW': {\r\n\t\t'abbreviation': 'ZWI',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn'\r\n\t},\r\n\t'ZWRITE': {\r\n\t\t'abbreviation': 'ZWR',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[zwrglvn[,...]]'\r\n\t}\r\n}\r\nconst funcParams = {\r\n\t'ASCII': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'CHAR': {\r\n\t\t'maxparams': 99\r\n\t},\r\n\t'DATA': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn'\r\n\t},\r\n\t'EXTRACT': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'FIND': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'FNUMBER': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'GET': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'INCREMENT': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'JUSTIFY': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'LENGTH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'NAME': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'NEXT': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn('\r\n\t},\r\n\t'ORDER': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'PIECE': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'QLENGTH': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'expr'\r\n\t},\r\n\t'QSUBSCRIPT': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'expr,expr'\r\n\t},\r\n\t'QUERY': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn'\r\n\t},\r\n\t'RANDOM': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'REVERSE': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'SELECT': {\r\n\t\t'maxparams': 99,\r\n\t\t'format': 'special'\r\n\t},\r\n\t'STACK': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'TEXT': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'entryref'\r\n\t},\r\n\t'TRANSLATE': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'VIEW': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZASCII': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZATRANSFORM': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 4,\r\n\t\t'format': 'expr,expr,bool,bool'\r\n\t},\r\n\t'ZBITAND': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITCOUNT': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITFIND': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZBITGET': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITLEN': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITNOT': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITOR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITSET': {\r\n\t\t'minparams': 3,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZBITSTR': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITXOR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZCHAR': {\r\n\t\t'maxparams': 99\r\n\t},\r\n\t'ZCOLLATE': {\r\n\t\t'maxparams': 3,\r\n\t\t'format': 'glvn,expr,bool'\r\n\t},\r\n\t'ZCONVERT': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZDATA': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'lvn'\r\n\t},\r\n\t'ZDATE': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZEXTRACT': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZFIND': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZGETJPI': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZJOBEXAM': {\r\n\t\t'minparams': 0,\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZJUSTIFY': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZLENGTH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZMESSAGE': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZPARSE': {\r\n\t\t'maxparams': 5\r\n\t},\r\n\t'ZPEEK': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZPIECE': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZPREVIOUS': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn'\r\n\t},\r\n\t'ZQGBLMOD': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'gvn'\r\n\t},\r\n\t'ZSEARCH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZSIGPROC': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZSOCKET': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZSUBSTR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZSYSLOG': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZTRANSLATE': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZTRIGGER': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZTRNLNM': {\r\n\t\t'maxparams': 6\r\n\t},\r\n\t'ZWIDTH': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZWRITE': {\r\n\t\t'maxparams': 2\r\n\t}\r\n}\r\nconst expressiontype = {\r\n\t\"Standard\": 0,\r\n\t\"Index\": 1,\r\n\t\"eArgument\": 2,\r\n\t\"iArgument\": 3,\r\n\t\"Atom\": 4\r\n}\r\n\r\nclass MumpsLineParser {\r\n\tprivate _tokens: LineToken[] = [];\r\n\tprivate cmdCompressions: object;\r\n\tprivate funcCompressions: object;\r\n\tprivate isvCompressions: object;\r\n\tprivate linePosition = 0;\r\n\t/**\r\n\t * Checks if the given File is correct M-Code\r\n\t * @param filename\r\n\t * @returns Array with list of errors or an empty array if no errors found in file\r\n\t */\r\n\tpublic checkFile(filename: string): ErrorInformation[] {\r\n\t\tconst errlist: ErrorInformation[] = [];\r\n\t\tlet content: string;\r\n\t\ttry {\r\n\t\t\tcontent = fs.readFileSync(filename, \"utf8\");\r\n\t\t} catch (err) {\r\n\t\t\terrlist.push({ text: 'File read error: ' + filename, position: 0, line: 0 });\r\n\t\t\treturn errlist;\r\n\t\t}\r\n\t\tconst lines = content.split('\\n');\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tlines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\tconst info = this.checkLine(lines[i]);\r\n\t\t\tif (info.text !== '') {\r\n\t\t\t\tinfo.line = i + 1;\r\n\t\t\t\terrlist.push(info);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn errlist;\r\n\t}\r\n\tpublic checkLine(line: string): ErrorInformation {\r\n\t\tthis._tokens = [];\r\n\t\tthis.linePosition = 0;\r\n\t\tconst parsed = this._parseLine(line);\r\n\t\tif (parsed.lineLabel) {\r\n\t\t\tthis._splitLabelAndParameters(parsed.lineLabel);\r\n\t\t}\r\n\t\tif (parsed.lineIndentationArray) {\r\n\t\t\tlet position = 0;\r\n\t\t\tif (parsed.lineLeadSpace) {\r\n\t\t\t\tposition += parsed.lineLeadSpace.length;\r\n\t\t\t}\r\n\t\t\tif (parsed.lineLabel) {\r\n\t\t\t\tposition += parsed.lineLabel.length;\r\n\t\t\t}\r\n\t\t\tthis._tokens.push({ name: \".\".repeat(parsed.lineIndentationArray.length), type: TokenType.intendation, position });\r\n\t\t}\r\n\t\tif (parsed.lineComment) {\r\n\t\t\tthis._tokens.push({ name: parsed.lineComment.comment, position: parsed.lineComment.position, type: TokenType.comment });\r\n\t\t}\r\n\t\tlet result: ErrorInformation = { text: '', position: 0 }\r\n\t\tif (parsed.lineRoutines) {\r\n\t\t\tfor (let i = 0; i < parsed.lineRoutines.length; i++) {\r\n\t\t\t\tconst code = parsed.lineRoutines[i];\r\n\t\t\t\tif (code.mCommand.length > 0) {\r\n\t\t\t\t\tlet cmd = code.mCommand.toUpperCase();\r\n\t\t\t\t\tif (cmd === 'H') {\r\n\t\t\t\t\t\tif (code.mArguments === '') {\r\n\t\t\t\t\t\t\tcmd = 'HALT';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcmd = 'HANG';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (cmd.match(command)) {\r\n\t\t\t\t\t\tlet longcmd = cmd;\r\n\t\t\t\t\t\tif (cmdParams[cmd] === undefined) {\r\n\t\t\t\t\t\t\tlongcmd = cmdExpansions[cmd];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._tokens.push({\r\n\t\t\t\t\t\t\tname: code.mCommand,\r\n\t\t\t\t\t\t\ttype: TokenType.keyword,\r\n\t\t\t\t\t\t\tposition: code.cmdPosition,\r\n\t\t\t\t\t\t\tlongName: longcmd,\r\n\t\t\t\t\t\t\tisPostconditioned: code.mPostCondition !== \"\",\r\n\t\t\t\t\t\t\thasArguments: code.mArguments !== \"\"\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (longcmd === undefined) {\r\n\t\t\t\t\t\t\tresult.text = 'Unknown Command';\r\n\t\t\t\t\t\t\tresult.position = code.cmdPosition;\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresult = this._checkCommand(line, longcmd, code);\r\n\t\t\t\t\t\t} catch (result) {\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn { text: 'Invalid Command', position: code.cmdPosition }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic analyzeLine(line: string): LineInformation {\r\n\t\tthis._tokens = [];\r\n\t\tline = line.replace(/\\r/g, '');\r\n\t\tconst errInfo = this.checkLine(line);\r\n\t\treturn { error: errInfo, tokens: this._tokens }\r\n\t}\r\n\tpublic analyzeLines(input: string): Array<Array<LineToken>> {\r\n\t\tconst lines = input.split('\\n');\r\n\t\tconst linetokens: Array<Array<LineToken>> = [];\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tlines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\tthis.checkLine(lines[i]);\r\n\t\t\tlinetokens[i] = this._tokens;\r\n\t\t}\r\n\t\treturn linetokens;\r\n\t}\r\n\t/*\r\n\tpublic constructLine(inputObject: LineObject): string {\r\n\t\tlet line: string = \"\";\r\n\t\tline = renderer.appendLabel(inputObject, line);\r\n\t\tline = renderer.appendIndentation(inputObject, line);\r\n\t\tline = renderer.appendRoutines(inputObject, line);\r\n\t\tline = renderer.appendComment(inputObject, line);\r\n\t\treturn line;\r\n\t}\r\n\t*/\r\n\tpublic expandCompressFile(filename: string, doExpand: boolean): string {\r\n\t\tif (doExpand === undefined) { doExpand = false; }\r\n\t\tlet content: string;\r\n\t\tlet lines: string[] = [];\r\n\t\ttry {\r\n\t\t\tcontent = fs.readFileSync(filename, \"utf8\");\r\n\t\t} catch (err) {\r\n\t\t\tlines[0] = 'File read error: ';\r\n\t\t\treturn lines[0];\r\n\t\t}\r\n\t\tlines = content.split('\\n');\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t//lines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\tconst info = this.expandCompressLine(lines[i], doExpand);\r\n\t\t\tif (info.errorText !== '') {\r\n\t\t\t\tlines = [];\r\n\t\t\t\tlines[0] = \"Error in Line \" + i + \" : \" + info.errorText;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlines[i] = info.lineText;\r\n\t\t}\r\n\t\treturn lines.join(\"\\n\");\r\n\t}\r\n\tpublic expandCompressLine(line: string, doExpand: boolean): ModifiedLine {\r\n\t\tline = line.replace(/\\r/g, '');\r\n\t\tif (doExpand === false && this.cmdCompressions === undefined) {\r\n\t\t\tthis.cmdCompressions = {};\r\n\t\t\tObject.keys(cmdExpansions).forEach(shortCommand => {\r\n\t\t\t\tthis.cmdCompressions[cmdExpansions[shortCommand]] = shortCommand;\r\n\t\t\t});\r\n\t\t\tthis.funcCompressions = {};\r\n\t\t\tObject.keys(funcExpansions).forEach(shortFunction => {\r\n\t\t\t\tthis.funcCompressions[funcExpansions[shortFunction]] = shortFunction;\r\n\t\t\t});\r\n\t\t\tthis.isvCompressions = {};\r\n\t\t\tObject.keys(isvExpansions).forEach(shortIsv => {\r\n\t\t\t\tthis.isvCompressions[isvExpansions[shortIsv]] = shortIsv;\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst outline: ModifiedLine = { lineText: line, errorText: '' }\r\n\t\tconst errorinfo = this.checkLine(line);\r\n\t\tlet outText = line;\r\n\t\tif (errorinfo.text !== \"\") {\r\n\t\t\toutline.errorText = errorinfo.text;\r\n\t\t} else {\r\n\t\t\tlet posCorrector = 0;\r\n\t\t\tfor (let i = 0; i < this._tokens.length; i++) {\r\n\t\t\t\tconst token = this._tokens[i];\r\n\t\t\t\tif (token.hasOwnProperty(\"longName\")) {\r\n\t\t\t\t\tconst name = token.name;\r\n\t\t\t\t\tlet longName = name;\r\n\t\t\t\t\tconst position = token.position;\r\n\t\t\t\t\tif (doExpand) {\r\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\t\t\tlongName = token.longName!.toLowerCase();\r\n\t\t\t\t\t\tif (longName[0] === \"$\") {\r\n\t\t\t\t\t\t\tlongName = \"$\" + longName[1].toUpperCase() + longName.substring(2);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlongName = longName[0].toUpperCase() + longName.substring(1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet checkName = name.toUpperCase();\r\n\t\t\t\t\t\tif (name[0] === \"$\") { checkName = name.substring(1); }\r\n\t\t\t\t\t\tif (token.type === TokenType.keyword) {\r\n\t\t\t\t\t\t\tif (this.cmdCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = this.cmdCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (token.type === TokenType.ifunction) {\r\n\t\t\t\t\t\t\tif (this.funcCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = \"$\" + this.funcCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (token.type === TokenType.sysvariable) {\r\n\t\t\t\t\t\t\tif (this.isvCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = \"$\" + this.isvCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (name.length !== longName.length) {\r\n\t\t\t\t\t\toutText = outText.substring(0, posCorrector + position) + longName + outText.substring(posCorrector + position + name.length);\r\n\t\t\t\t\t\tposCorrector += longName.length - name.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\toutline.lineText = outText;\r\n\t\treturn outline;\r\n\t}\r\n\tpublic getLabels(text: string): LabelInformation[] {\r\n\t\tconst labels: LabelInformation[] = [];\r\n\t\tconst lines = text.split('\\n');\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tconst parsed = this._parseLine(lines[i]);\r\n\t\t\tif (parsed.lineLabel) {\r\n\t\t\t\tlabels.push({ name: parsed.lineLabel, line: i });\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn labels;\r\n\t}\r\n\tpublic getTokenAt(line: string, position: number): LineToken | undefined {\r\n\t\tthis.checkLine(line);\r\n\t\tlet memPosition = 0\r\n\t\tlet tokenId = -1\r\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\r\n\t\t\tconst token = this._tokens[i];\r\n\t\t\tif (token.position >= memPosition && token.position < position) {\r\n\t\t\t\tmemPosition = token.position;\r\n\t\t\t\ttokenId = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (tokenId === -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn this._tokens[tokenId];\r\n\t}\r\n\tprivate _checkEntryRefAndPostcondition(line: string, position: number, withParams: boolean): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkEntryRef(line, result.position, withParams);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tthis._tokens.push({ type: TokenType.argPostcondition, name: \":\", position });\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkEntryRef(line: string, position: number, withParams: boolean, isUserfunction?: boolean): ErrorInformation {\r\n\t\tif (isUserfunction === undefined) {\r\n\t\t\tisUserfunction = false;\r\n\t\t}\r\n\t\tlet tokentype: TokenType = TokenType.entryref;\r\n\t\tif (isUserfunction) {\r\n\t\t\ttokentype = TokenType.exfunction;\r\n\t\t}\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '@') { //Check Indirection\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\tif (line[result.position] === '+') { //Check Label+Offset\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === '^') { //Check if it's a Label like xxx^yyy\r\n\t\t\t\tif (line[result.position + 1] === '@') { // or a Label xxx^@expr\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (line.substring(result.position).match(entryref)) {\r\n\t\t\t\t\t\tconst ref = line.substring(result.position).match(entryref)![0];\r\n\t\t\t\t\t\tresult.position += ref.length;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.text = 'Invalid EntryRef';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (line.substring(result.position, result.position + 2) === '@(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t} else if (line.substring(result.position).match(entryref)) { //No Indirection and a valid entryref\r\n\t\t\tlet ref = line.substring(result.position).match(entryref)![0];\r\n\t\t\tconst merkpos = result.position;\r\n\t\t\tresult.position += ref.length;\r\n\t\t\tconst char = line[result.position];\r\n\t\t\tif (result.position >= line.length) {\r\n\t\t\t\tif (ref.length > 0) {\r\n\t\t\t\t\tif (ref[0] === '&') {\r\n\t\t\t\t\t\ttokentype = TokenType.nonMfunction;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._tokens.push({ 'type': tokentype, name: ref, position: merkpos + this.linePosition });\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.text = 'Missing Entryref';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ref.indexOf('^') === -1 && char === '+') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t//ref += \"+X\";\r\n\t\t\t\tif (result.position >= line.length) {\r\n\t\t\t\t\tthis._tokens.push({ 'type': tokentype, name: ref, position: merkpos + this.linePosition });\r\n\t\t\t\t\treturn result\r\n\t\t\t\t}\r\n\t\t\t\tif (line.substring(result.position).match(routineref)) {\r\n\t\t\t\t\tconst routine = line.substring(result.position).match(routineref)![0];\r\n\t\t\t\t\tref += routine;\r\n\t\t\t\t\tresult.position += routine.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._tokens.push({ 'type': tokentype, name: ref, position: merkpos + this.linePosition });\r\n\t\t} else {\r\n\t\t\tresult.text = 'Invalid Entryref';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tif (line[result.position] === '(' && withParams) {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.eArgument, line, ++result.position, 1);\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\tprivate _checkVar(line: string, position: number, globalOk?: boolean, indexOk?: boolean, isExluded?: boolean): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position, indexFound: false, globalFound: false, indirectionFound: false };\r\n\t\tlet varFound = false;\r\n\t\tif (globalOk === undefined) {\r\n\t\t\tglobalOk = true;\r\n\t\t}\r\n\t\tif (indexOk === undefined) {\r\n\t\t\tindexOk = true;\r\n\t\t}\r\n\t\tif (isExluded === undefined) {\r\n\t\t\tisExluded = false;\r\n\t\t}\r\n\t\tif (line[result.position] === '@') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\tresult.indirectionFound = true;\r\n\t\t\tvarFound = true;\r\n\t\t\tif (line.substring(result.position, result.position + 2) === '@(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (line.substring(result.position).match(gvn) || line.substring(result.position, result.position + 2) === '^|') {\r\n\t\t\t\tif (!globalOk) {\r\n\t\t\t\t\tresult.text = 'Global not allowed here';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.globalFound = true;\r\n\t\t\t\tif (line.substring(result.position, result.position + 2) === '^|') {\r\n\t\t\t\t\tresult.position += 2\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tresult.globalFound = true;\r\n\t\t\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t\tresult.globalFound = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== '|') {\r\n\t\t\t\t\t\tresult.text = 'Missing \"|\"';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tif (line.substring(result.position).match(lvn)) {\r\n\t\t\t\t\t\tconst global = line.substring(result.position).match(lvn)![0];\r\n\t\t\t\t\t\tthis._tokens.push({ name: global, type: TokenType.global, position: result.position + this.linePosition });\r\n\t\t\t\t\t\tvarFound = true;\r\n\t\t\t\t\t\tresult.position += global.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst global = line.substring(result.position).match(gvn)![0];\r\n\t\t\t\t\tthis._tokens.push({ name: global, type: TokenType.global, position: result.position + this.linePosition });\r\n\t\t\t\t\tvarFound = true;\r\n\t\t\t\t\tresult.position += global.length;\r\n\t\t\t\t}\r\n\t\t\t} else if (line.substring(result.position).match(lvn)) {  // local variable found\r\n\t\t\t\tconst local = line.substring(result.position).match(lvn)![0];\r\n\t\t\t\tthis._tokens.push({ name: local, type: TokenType.local, position: result.position + this.linePosition, isExcludedVariable: isExluded });\r\n\t\t\t\tvarFound = true;\r\n\t\t\t\tresult.position += local.length;\r\n\t\t\t} else if (line.substring(result.position, result.position + 2) === '^(') {\r\n\t\t\t\tresult.globalFound = true;\r\n\t\t\t\tif (!globalOk) {\r\n\t\t\t\t\tresult.text = 'Global not allowed here';\r\n\t\t\t\t\tvarFound = false;\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tvarFound = true;\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (varFound && line[result.position] === '(') {\r\n\t\t\tif (!indexOk) {\r\n\t\t\t\tresult.text = 'Index not allowed here';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tconst provResult = this._evaluateExpression(expressiontype.Index, line, ++result.position, 1);\r\n\t\t\tresult.position = provResult.position;\r\n\t\t\tresult.indexFound = true;\r\n\t\t}\r\n\t\tif (!varFound) {\r\n\t\t\tresult.text = 'Name missing';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkBreak(line: string, position: number): ErrorInformation {\r\n\t\t//[expr[:tvexpr][,...]]\r\n\t\tlet result = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkKeyword(keywords: RegExp, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line.substring(result.position).match(keywords)) {\r\n\t\t\tconst keyword = line.substring(result.position).match(keywords)![0];\r\n\t\t\tresult.position += keyword.length;\r\n\t\t\tif (keyword.slice(-1) === '=') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult.text = 'No valid Keyword for command found';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkOUC(keywords: RegExp, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\t//expr[:(keyword[=expr][:...])][,...]\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = this._checkKeyword(keywords, line, result.position);\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (!this._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\tresult = this._checkKeyword(keywords, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (keywords === openkeywords && line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (keywords === openkeywords && line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkFor(line: string, position: number, argNumber: number): ErrorInformation {\r\n\t\t//[lvn=expr[:numexpr1[:numexpr2]][,...]]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (argNumber > 1) { //If it's not the first Argument the Options are possible: F I=1:2:3,4 or F I=1:2:3,I=4:1:6\r\n\t\t\ttry {\r\n\t\t\t\tconst provResult = this._checkVar(line, result.position, false);\r\n\t\t\t\tif (line[provResult.position] === '\"') {\r\n\t\t\t\t\tresult.position = provResult.position + 1;\r\n\t\t\t\t}\r\n\t\t\t} catch (provResult) {\r\n\t\t\t\tif (provResult.text !== \"Name missing\") {\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\tif (line[result.position] !== '=') {\r\n\t\t\t\tresult.text = 'Missing equal-sign';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] !== ':') {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\tif (line[result.position] !== ':') {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkJobKeyword(line: string, position: number): ErrorInformation {\r\n\t\tconst result: ErrorInformation = { text: '', position };\r\n\t\tif (line.substring(result.position).match(jobkeywords)) {\r\n\t\t\tconst keyword = line.substring(result.position).match(jobkeywords)![0];\r\n\t\t\tresult.position += keyword.length;\r\n\t\t\tif (keyword[keyword.length - 1] === '=') {\r\n\t\t\t\tif (line.substring(result.position).match(strlit)) {\r\n\t\t\t\t\tconst stringlit = line.substring(result.position).match(strlit)![0];\r\n\t\t\t\t\tresult.position += stringlit.length;\r\n\t\t\t\t\tif (stringlit.length === 0) {\r\n\t\t\t\t\t\tresult.text = 'String literal expected';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.text = 'String literal expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult.text = 'No valid Keyword for JOB Command';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkJob(line: string, position: number): ErrorInformation {\r\n\t\t//entryref[(expr[,...])][:[(keyword[=value][:...])][:numexpr]][,...]\r\n\t\tlet result = this._checkEntryRef(line, position, true);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = this._checkJobKeyword(line, result.position);\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (!this._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\tresult = this._checkJobKeyword(line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (line[result.position] === ':') { //Numeric expression for Job-Timeout\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkKill(line: string, position: number): ErrorInformation {\r\n\t\t//[glvn | (lvn[,...]) | *lname | *lvn ]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!this._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkLock(line: string, position: number, isLock: boolean): ErrorInformation {\r\n\t\t//[[-|+]nref|(nref[,...])[:numexpr] [,...]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif ((line[result.position] === '+' || line[result.position] === '-') && isLock) {\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!this._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkMerge(line: string, position: number): ErrorInformation {\r\n\t\t//glvn=glvn[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkVar(line, result.position);\r\n\t\tif (line[result.position] !== '=') {\r\n\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tresult = this._checkVar(line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkNew(line: string, position: number): ErrorInformation {\r\n\t\t//[[(]lvn[,...][)][,...]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tif (line.substring(result.position).match(isv)) {\r\n\t\t\t\t\tconst sysvariable = line.substring(result.position).match(isv)![0];\r\n\t\t\t\t\tlet longName = sysvariable.toUpperCase();\r\n\t\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._tokens.push({ name: sysvariable, position: position + this.linePosition, type: TokenType.sysvariable, longName, isExcludedVariable: true });\r\n\t\t\t\t\tresult.position += sysvariable.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, false, false, true);\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!this._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (line.substring(result.position).match(isv)) {\r\n\t\t\t\tconst sysvariable = line.substring(result.position).match(isv)![0];\r\n\t\t\t\tlet longName = sysvariable.toUpperCase();\r\n\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t}\r\n\t\t\t\tthis._tokens.push({ name: sysvariable, position: position + this.linePosition, type: TokenType.sysvariable, longName, isExcludedVariable: false });\r\n\t\t\t\tresult.position += sysvariable.length;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkRead(line: string, position: number): ErrorInformation {\r\n\t\t//(glvn|*glvn|glvn#intexpr)[:numexpr]|strlit|fcc[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet starDetected = false;\r\n\t\tlet mat: string[] | null;\r\n\t\tif (line[result.position] === '*') {\r\n\t\t\tresult.position++;\r\n\t\t\tstarDetected = true;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst provResult = this._checkVar(line, result.position);\r\n\t\t\tresult.position = provResult.position;\r\n\t\t\tif (line[result.position] === '#') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\tif (result.text !== '') {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t} catch {\r\n\t\t\tif (starDetected) {\r\n\t\t\t\tresult.text = 'Variable expected';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tif (mat = line.substring(result.position).match(strlit)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t\treturn result;\r\n\t\t\t} else if (mat = line.substring(result.position).match(/^(#|!)+/)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === '?') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkSet(line: string, position: number): ErrorInformation {\r\n\t\t//setleft=expr | (setleft[,...])=expr | *lvn=lname | aliascontainer[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tlet isBraced = false;\r\n\t\tif (line[result.position] === '*') { //*lvn=lname\r\n\t\t\tresult = this._checkVar(line, ++result.position, false);\r\n\t\t\tif (line[result.position] !== '=') {\r\n\t\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tresult = this._checkVar(line, ++result.position, false);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tisBraced = true;\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tif (line[result.position] === '@') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst provResult = this._checkVar(line, result.position);\r\n\t\t\t\t\tresult.position = provResult.position;\r\n\t\t\t\t\tif (this._isEndOfArgument(line, result.position) || line[result.position] === ',') {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\t\t\tif (this._isEndOfArgument(line, result.position) || line[result.position] === ',') {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (mat = line.substring(result.position).match(/^\\$Z?(PIECE|P|EXTRACT|E)\\(/i)) {\r\n\t\t\t\tlet functionname = mat[0].substring(1, mat[0].length - 1).toUpperCase();\r\n\t\t\t\tresult.position += functionname.length + 2\r\n\t\t\t\tif (funcExpansions[functionname] !== undefined) {\r\n\t\t\t\t\tthis._tokens.push({ name: \"$\" + functionname, position: result.position - functionname.length - 2, type: TokenType.ifunction, longName: \"$\" + funcExpansions[functionname] });\r\n\t\t\t\t\tfunctionname = funcExpansions[functionname];\r\n\t\t\t\t}\r\n\t\t\t\tresult = this._checkFunction(functionname, line, result.position);\r\n\t\t\t} else if (mat = line.substring(result.position).match(isv)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, true);\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ',' && isBraced) {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ')' && isBraced) {\r\n\t\t\t\tisBraced = false;\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t} while (!this._isEndOfArgument(line, result.position) && isBraced);\r\n\t\tif (line[result.position] !== '=') {\r\n\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkTstart(line: string, position: number): ErrorInformation {\r\n\t\t//[([lvn...])|lvn|*|][:keyword|(keyword...)]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] !== ')') {\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, false, false);\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (!this._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (line[result.position] !== '*') {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = this._checkKeyword(tstartkeywords, line, result.position);\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (result.position < line.length)\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkKeyword(tstartkeywords, line, result.position);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkView(line: string, position: number): ErrorInformation {\r\n\t\t//keyword[:expr[:...]][,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\twhile (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkWrite(line: string, position: number): ErrorInformation {\r\n\t\t//expr|*intexpr|fcc[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tif (line[result.position] === '*') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line.substring(result.position).match(/^\\/(EOF|PASS|ACCEPT|LISTEN|L|TLS|WAIT|W)/i)) {\r\n\t\t\tresult = this._checkWriteSocket(line, result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (mat = line.substring(result.position).match(/^(#|!)+/)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t\tif (line[result.position] === '?') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line[result.position] === '?') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkWriteSocket(line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tif (mat = line.substring(result.position).match(/^\\/(EOF|PASS|ACCEPT|LISTEN|L|TLS|WAIT|W)/i)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t\tconst fname = mat![0].toUpperCase();\r\n\t\t\tif (fname === '/EOF') {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] !== '(') {\r\n\t\t\t\tif (!fname.match(/^\\/(LISTEN|L|WAIT|W)/)) {\r\n\t\t\t\t\tresult.text = fname + ' needs Parameter(s)';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tresult.position++;\r\n\t\t\tlet maxparams = 99;\r\n\t\t\tif (fname === '/LISTEN' || fname === '/L' || fname === '/WAIT' || fname === '/W') {\r\n\t\t\t\tmaxparams = 1;\r\n\t\t\t} else if (fname === '/TLS') {\r\n\t\t\t\tmaxparams = 4;\r\n\t\t\t}\r\n\t\t\tlet paramCount = 0;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tparamCount++;\r\n\t\t\t\tif (paramCount > maxparams) {\r\n\t\t\t\t\tresult.text = 'More Parameters than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tif (fname === '/ACCEPT' && paramCount === 1) {\r\n\t\t\t\t\tif (line[result.position] !== '.') {\r\n\t\t\t\t\t\tresult.text = 'Local Variablereference expected (.lvn)';\r\n\t\t\t\t\t\tthrow result\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult = this._checkVar(line, ++result.position, false, false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} while (!this._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing Parameter or \")\"';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkXecute(line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZbreak(line: string, position: number): ErrorInformation {\r\n\t\t//[-]entryref[:[expr][:intexpr]][,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '-') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZprint(line: string, position: number): ErrorInformation {\r\n\t\t// 'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._checkEntryRef(line, ++result.position, false);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZstep(line: string, position: number): ErrorInformation {\r\n\t\t// 'parameter': '[keyword[:expr]][,...]'\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\r\n\t\tif (mat = line.substring(result.position).match(/^(INTO|OUTOF|OU|OVER|OV)/i)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t} else {\r\n\t\t\tresult.text = 'Invalid ZSTEP Qualifier';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkCommand(line: string, longcmd: string, code: TmpFunction): ErrorInformation {\r\n\t\tconst para = cmdParams[longcmd];\r\n\t\tlet position = code.pcPosition\r\n\t\tconst postcondPossible = para.postcondition;\r\n\t\tconst argFormat = para.parameter;\r\n\t\tlet result: ErrorInformation = { text: '', position: 0 }\r\n\t\tif (!postcondPossible && code.mPostCondition !== '') {\r\n\t\t\tthrow { text: 'Poscondition not allowed', position }\r\n\t\t} else if (code.mPostCondition !== '') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t\t}\r\n\t\tposition = code.argPosition;\r\n\t\tif (code.mArguments === '') {\r\n\t\t\tif (argFormat === '' || argFormat[0] === '[') {\r\n\t\t\t\treturn { text: '', position }\r\n\t\t\t} else {\r\n\t\t\t\tthrow { text: 'Argument for command ' + code.mCommand + \" required\", position }\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.position = position;\r\n\t\tlet argCount = 0;\r\n\t\tdo {\r\n\t\t\targCount++;\r\n\t\t\tswitch (longcmd) {\r\n\t\t\t\tcase 'BREAK':\r\n\t\t\t\t\tresult = this._checkBreak(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'CLOSE':\r\n\t\t\t\t\tresult = this._checkOUC(closekeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'DO':\r\n\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, result.position, true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ELSE':\r\n\t\t\t\t\tif (line !== '') {\r\n\t\t\t\t\t\tthrow { text: 'No Argument expected', position }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'FOR':\r\n\t\t\t\t\tresult = this._checkFor(line, result.position, argCount);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'GOTO':\r\n\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, result.position, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'HANG':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'IF':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'JOB':\r\n\t\t\t\t\tresult = this._checkJob(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KILL':\r\n\t\t\t\t\tresult = this._checkKill(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'LOCK':\r\n\t\t\t\t\tresult = this._checkLock(line, result.position, true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'MERGE':\r\n\t\t\t\t\tresult = this._checkMerge(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'NEW':\r\n\t\t\t\t\tresult = this._checkNew(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'OPEN':\r\n\t\t\t\t\tresult = this._checkOUC(openkeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'QUIT':\r\n\t\t\t\t\tif (argCount > 1) {\r\n\t\t\t\t\t\tresult.text = 'Quit allows only one Argument'\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\t\t\t\tresult = this._checkVar(line, ++result.position, false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'READ':\r\n\t\t\t\t\tresult = this._checkRead(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SET':\r\n\t\t\t\t\tresult = this._checkSet(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TROLLBACK':\r\n\t\t\t\t\tif (argCount > 1) {\r\n\t\t\t\t\t\tresult.text = 'TROLLBACK allows only one Argument'\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TSTART':\r\n\t\t\t\t\tresult = this._checkTstart(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'USE':\r\n\t\t\t\t\tresult = this._checkOUC(usekeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'VIEW':\r\n\t\t\t\t\tresult = this._checkView(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'WRITE':\r\n\t\t\t\t\tresult = this._checkWrite(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'XECUTE':\r\n\t\t\t\t\tresult = this._checkXecute(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZALLOCATE':\r\n\t\t\t\t\tresult = this._checkLock(line, result.position, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZBREAK':\r\n\t\t\t\t\tresult = this._checkZbreak(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZCOMPILE':\r\n\t\t\t\t\t// 'abbreviation': 'ZCOM',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'expr[,...]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZDEALLOCATE':\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZD',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[nref[,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZEDIT':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZED',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr[,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZGOTO':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, ++result.position, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZG',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[[intexpr][:entryref[:tvexpr]],...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZHALT':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZHALT',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[intexpr]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZHELP':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZH',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr1[:expr2],...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZKILL':\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZK',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'glvn'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZLINK':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZL',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr1[:expr2][,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZMESSAGE':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\twhile (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZM',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'intexpr[:expr2][:...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZPRINT':\r\n\t\t\t\t\t// 'abbreviation': 'ZP',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t\t\t\t\tresult = this._checkZprint(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZRUPDATE':\r\n\t\t\t\t\t// 'abbreviation': 'ZRUP',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'expr[,...]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSHOW':\r\n\t\t\t\t\t// 'abbreviation': 'ZSH',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr[:glvn][,...]]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._checkVar(line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSTEP':\r\n\t\t\t\t\t// 'abbreviation': 'ZST',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[keyword[:expr]][,...]'\r\n\t\t\t\t\tresult = this._checkZstep(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSYSTEM':\r\n\t\t\t\t\t// 'abbreviation': 'ZSY',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr][,...]]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZTCOMMIT':\r\n\t\t\t\t\t// 'abbreviation': 'ZTC',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[intexpr]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZTRIGGER':\r\n\t\t\t\t\t// 'abbreviation': 'ZTR',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'gvn'\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, true, false);\r\n\t\t\t\t\tif (!result.globalFound) {\r\n\t\t\t\t\t\tresult.text = 'Global Variable expected';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZWITHDRAW':\r\n\t\t\t\t\t// 'abbreviation': 'ZWI',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'glvn'\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZWRITE':\r\n\t\t\t\t\t//'abbreviation': 'ZWR',\r\n\t\t\t\t\t//'postcondition': true,\r\n\t\t\t\t\t//'parameter': '[zwrglvn[,...]]'\r\n\t\t\t\t\t//not separately tested because ZWRITE is for debugging and should not appear in normal code\r\n\t\t\t\t\tresult.position += line.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tresult.position = line.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tif (result.position === line.length) {\r\n\t\t\t\t\tif (argFormat !== '' && argFormat[0] !== '[') {\r\n\t\t\t\t\t\tthrow { text: 'Argument for command ' + code.mCommand + \" required\", position: result.position }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (line[result.position] !== undefined) {\r\n\t\t\t\tconst char = line[result.position];\r\n\t\t\t\tif (char === \" \" || char === \"\\t\" || char === \";\") { break; }\r\n\t\t\t\tresult.text = 'Unexpected Character \"' + line[result.position] + '\"';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} while (result.position < line.length)\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkFunction(longfunc: string, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position: position };\r\n\t\tconst params = funcParams[longfunc];\r\n\t\tif (params === undefined) {\r\n\t\t\tresult.text = \"Unknown Function \" + longfunc;\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tconst minArguments = params.minparams !== undefined ? params.minparams : 1;\r\n\t\tconst formats = params.format !== undefined ? params.format.split(',') : undefined;\r\n\t\tlet argCount = 0;\r\n\t\tlongfunc = '$' + longfunc;\r\n\t\tif (minArguments === 0 && line[result.position] === ')') {\r\n\t\t\tresult.position++;\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tlet format = (formats !== undefined && formats[argCount] !== undefined) ? formats[argCount] : 'expr';\r\n\t\t\tif (longfunc === '$SELECT') {\r\n\t\t\t\tformat = 'special';\r\n\t\t\t}\r\n\t\t\tif (format === 'glvn' || format === 'gvn' || format === 'glvn(' || format === 'lvn') {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tif (format === 'glvn(' && (!result.indexFound && !result.indirectionFound)) {\r\n\t\t\t\t\tresult.text = 'Variable with Index expected for ' + longfunc;\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tif (format === 'lvn' && result.globalFound) {\r\n\t\t\t\t\tresult.text = 'Local variable expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else if (format === 'entryref') {\r\n\t\t\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\t\t} else if (format === 'expr') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t} else if (format === 'bool') {\r\n\t\t\t\tif (line[result.position] !== '0' && line[result.position] !== '1') {\r\n\t\t\t\t\tresult.text = '0/1 expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t} else if (format === 'special') {\r\n\t\t\t\tif (longfunc === '$SELECT') {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Missing Expression';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.position++\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\targCount++;\r\n\t\t\tconst char = line[result.position];\r\n\t\t\tif (char === ',') {\r\n\t\t\t\tif (argCount > params.maxparams) {\r\n\t\t\t\t\tresult.text = 'More Arguments for ' + longfunc + ' than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (char === ')') {\r\n\t\t\t\tif (argCount < minArguments) {\r\n\t\t\t\t\tresult.text = 'Less Arguments for ' + longfunc + ' than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tresult.text = 'Unxepected character ';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} while (!this._isEndOfArgument(line, result.position));\r\n\r\n\t\treturn result;\r\n\t}\r\n\tprivate _evaluateExpression(exType: number, line: string, position: number, level?: number | undefined): ErrorInformation {\r\n\t\tlet expressionComplete = false;\r\n\t\tlet startposition = position;\r\n\t\tif (level === undefined) {\r\n\t\t\tlevel = 0;\r\n\t\t}\r\n\t\tlet lastExpression = '';\r\n\t\twhile (position < line.length) {\r\n\t\t\tlet char = line.charAt(position);\r\n\t\t\tif (char === '(') {\r\n\t\t\t\tlet subExType = expressiontype.Standard\r\n\t\t\t\tswitch (lastExpression) {\r\n\t\t\t\t\tcase 'ifunction':\r\n\t\t\t\t\t\tsubExType = expressiontype.iArgument;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'exfunction':\r\n\t\t\t\t\t\tsubExType = expressiontype.eArgument;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'pattern':\r\n\t\t\t\t\t\tthrow { text: 'Unecpected \"(\"', position };\r\n\t\t\t\t}\r\n\t\t\t\tconst result = this._evaluateExpression(subExType, line, ++position, level + 1);\r\n\t\t\t\tif (exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\texpressionComplete = true;\r\n\t\t\t\tposition = result.position;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlastExpression = '';\r\n\t\t\tif (char === ')') {\r\n\t\t\t\tif (!expressionComplete) {\r\n\t\t\t\t\tif (position === startposition && exType === expressiontype.eArgument) {\r\n\t\t\t\t\t\treturn { text: '', position: ++position }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t\t\t}\r\n\t\t\t\tif (level > 0) {\r\n\t\t\t\t\tposition++;\r\n\t\t\t\t}\r\n\t\t\t\treturn { text: '', position: position };\r\n\t\t\t}\r\n\t\t\tif (char === '.' && exType === expressiontype.eArgument) {\r\n\t\t\t\tposition++;\r\n\t\t\t\tconst evalString = line.substring(position);\r\n\t\t\t\tif (evalString.match(lvn)) {\r\n\t\t\t\t\tconst localname = evalString.match(lvn)![0];\r\n\t\t\t\t\tthis._tokens.push({ type: TokenType.local, name: localname, position: position + this.linePosition });\r\n\t\t\t\t\tposition += localname.length;\r\n\t\t\t\t\tchar = line.charAt(position);\r\n\t\t\t\t\tif (char !== ',' && char !== ')') {\r\n\t\t\t\t\t\tthrow { text: 'Variablereference must stand alone', position }\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (char === ',') {\r\n\t\t\t\tif (!expressionComplete) {\r\n\t\t\t\t\tif (position === startposition && exType === expressiontype.eArgument) {\r\n\t\t\t\t\t\tif (level === 0) {\r\n\t\t\t\t\t\t\treturn { text: '', position: ++position }\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tposition++\r\n\t\t\t\t\t\t\texpressionComplete = false;\r\n\t\t\t\t\t\t\tstartposition = position;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t\t\t}\r\n\t\t\t\tif (exType === expressiontype.Standard || exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t\tposition++\r\n\t\t\t\texpressionComplete = false;\r\n\t\t\t\tstartposition = position;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (expressionComplete) {\r\n\t\t\t\tif (exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t\tif (line.substring(position).match(binoperator)) {\r\n\t\t\t\t\tconst operator = line.substring(position).match(binoperator)![0];\r\n\t\t\t\t\tthis._tokens.push({ name: operator, position: position + this.linePosition, type: TokenType.operator });\r\n\t\t\t\t\tposition += operator.length;\r\n\t\t\t\t\texpressionComplete = false;\r\n\t\t\t\t\tif (operator === '?' || operator === \"'?\") {\r\n\t\t\t\t\t\tconst result = this._evaluatePattern(line, position);\r\n\t\t\t\t\t\tposition = result.position;\r\n\t\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\t\tlastExpression = 'pattern';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst evalString = line.substring(position);\r\n\t\t\ttry {\r\n\t\t\t\tconst provResult = this._checkVar(line, position);\r\n\t\t\t\texpressionComplete = true;\r\n\t\t\t\tposition = provResult.position;\r\n\t\t\t} catch (provResult) {\r\n\t\t\t\tif (evalString.substring(0, 2) === '$$') {\r\n\t\t\t\t\tposition += 2;\r\n\t\t\t\t\t// eslint-disable-next-line no-ex-assign\r\n\t\t\t\t\tprovResult = this._checkEntryRef(line, position, true, true);\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\tposition = provResult.position;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(nonMfunction)) {\r\n\t\t\t\t\tconst functionname = evalString.match(nonMfunction)![0];\r\n\t\t\t\t\tthis._tokens.push({ type: TokenType.nonMfunction, name: functionname, position });\r\n\t\t\t\t\tposition += functionname.length;\r\n\t\t\t\t\tlastExpression = 'exfunction'\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(ifunction)) {\r\n\t\t\t\t\tconst functionname = evalString.match(ifunction)![0].substring(1).toUpperCase();\r\n\t\t\t\t\tposition += functionname.length + 2\r\n\t\t\t\t\tlet longName = functionname;\r\n\t\t\t\t\tif (funcExpansions[functionname] !== undefined) {\r\n\t\t\t\t\t\tlongName = funcExpansions[functionname];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._tokens.push({ name: \"$\" + functionname, position: position - functionname.length - 2, type: TokenType.ifunction, longName: \"$\" + longName });\r\n\t\t\t\t\tconst result = this._checkFunction(longName, line, position);\r\n\t\t\t\t\tposition = result.position;\r\n\t\t\t\t\tlastExpression = '';\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(isv)) {\r\n\t\t\t\t\tconst specialvarname = evalString.match(isv)![0];\r\n\t\t\t\t\tlet longName = specialvarname.toUpperCase();\r\n\t\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._tokens.push({ name: specialvarname, position: position + this.linePosition, type: TokenType.sysvariable, longName });\r\n\t\t\t\t\tposition += specialvarname.length\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(numlit) && evalString.match(numlit)![0] !== '') {\r\n\t\t\t\t\tconst numericliteral = evalString.match(numlit)![0];\r\n\t\t\t\t\tthis._tokens.push({ name: numericliteral, type: TokenType.number, position: position + this.linePosition });\r\n\t\t\t\t\tposition += numericliteral.length;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(strlit)) {\r\n\t\t\t\t\tconst stringlit = evalString.match(strlit)![0];\r\n\t\t\t\t\tthis._tokens.push({ name: stringlit, type: TokenType.string, position: position + this.linePosition });\r\n\t\t\t\t\tposition += stringlit.length;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (char.match(unaryoperator)) {\r\n\t\t\t\t\tthis._tokens.push({ name: char, type: TokenType.operator, position: position + this.linePosition });\r\n\t\t\t\t\tposition++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow { text: 'Unexpected Character ' + char, position }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (expressionComplete) {\r\n\t\t\tif (level > 0) {\r\n\t\t\t\tthrow { text: 'Missing \")\"', position }\r\n\t\t\t}\r\n\t\t\treturn { text: '', position }\r\n\t\t} else {\r\n\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n * Checks Mumps-patterns, throws error when error found in pattern\r\n * @param line: Line to be analyzed\r\n * @param position: startposition\r\n * @param level: is used for nested Patterns\r\n * @returns ErrorInformation, text empty when no error found, position is set behind pattern\r\n */\r\n\tprivate _evaluatePattern(line: string, position: number, level?: number): ErrorInformation {\r\n\t\tlet result = { text: '', position }\r\n\t\tlet patternComplete = false;\r\n\t\tif (level === undefined) {\r\n\t\t\tlevel = 0;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tif (line[position] === '@') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++position);\r\n\t\t\t\tpatternComplete = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (line.substring(result.position).match(repititionCount)) {\r\n\t\t\t\tconst repCount = line.substring(result.position).match(repititionCount)![0];\r\n\t\t\t\tif (repCount !== '') {\r\n\t\t\t\t\tpatternComplete = false;\r\n\t\t\t\t\tresult.position += repCount.length;\r\n\t\t\t\t\tif (line.substring(result.position).match(patcode)) {\r\n\t\t\t\t\t\tpatternComplete = true;\r\n\t\t\t\t\t\tresult.position += line.substring(result.position).match(patcode)![0].length;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (line[result.position] === '(') {\r\n\t\t\t\t\t\tresult = this._evaluatePattern(line, ++result.position, level + 1);\r\n\t\t\t\t\t\tpatternComplete = true;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (line[result.position] === ')') {\r\n\t\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (level > 0) {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t} else if (line[result.position] === ',' && level > 0) {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if (line[result.position] === ')') {\r\n\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t} else if (line[result.position] === ',' && level > 0) {\r\n\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} while (position < line.length)\r\n\t\tif (!patternComplete) {\r\n\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tif (level > 0) {\r\n\t\t\tresult.text = 'Missing \")\"';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t//Extract M-Commands.\r\n\t//Assumes inputLine has extracted comments/spacing/indentation.\r\n\tprivate _extractCommands(inputObject: LineObject): LineObject {\r\n\r\n\t\tlet tmpFunction: TmpFunction;\r\n\t\tconst tmpFunctionArray: Array<TmpFunction> = [];\r\n\t\t//Divide Routines and Arguments.\r\n\t\tconst splitLine = this._splitCommandsAndArguments(inputObject);\r\n\t\t//Loop, even is function, odd is arguments.\r\n\t\tlet i = 0;\r\n\t\ttmpFunction = { mCommand: '', mPostCondition: '', mArguments: '', cmdPosition: 0, argPosition: 0, pcPosition: 0 }\r\n\t\twhile (i < splitLine.length) {\r\n\t\t\tif (i % 2 === 0) {\r\n\t\t\t\ttmpFunction.mCommand = splitLine[i].command;\r\n\t\t\t\ttmpFunction.cmdPosition = splitLine[i].position;\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttmpFunction.mArguments = splitLine[i].command;\r\n\t\t\t\ttmpFunction.argPosition = splitLine[i].position;\r\n\r\n\t\t\t\t//Custom handler for trailing argument spacing.\r\n\t\t\t\t//Go until splitline hits a non empty val.\r\n\t\t\t\tconst ii = i + 1;\r\n\t\t\t\twhile (ii < splitLine.length) {\r\n\t\t\t\t\tif (splitLine[ii].command === \"\") {\r\n\t\t\t\t\t\tsplitLine.splice(ii, 1);\r\n\t\t\t\t\t\t//tmpFunction.mArguments = tmpFunction.mArguments + \" \";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttmpFunctionArray.push(tmpFunction);\r\n\t\t\t\ttmpFunction = { mCommand: '', mPostCondition: '', mArguments: '', cmdPosition: 0, argPosition: 0, pcPosition: 0 }\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t\t//Last command doesn't always require parameter, so if odd number of pairs, push it.\r\n\t\tif (splitLine.length % 2 !== 0) {\r\n\t\t\ttmpFunction.mCommand = splitLine[splitLine.length - 1].command;\r\n\t\t\ttmpFunction.cmdPosition = splitLine[splitLine.length - 1].position;\r\n\t\t\ttmpFunction.mArguments = '';\r\n\t\t\ttmpFunction.argPosition = inputObject.lineExpression!.length;\r\n\t\t\ttmpFunctionArray.push(tmpFunction);\r\n\t\t}\r\n\r\n\r\n\t\t//Extract and output Post Conditionals.\r\n\t\tconst postConditionFunctionArray = this._extractPostConditional(tmpFunctionArray);\r\n\t\tif (postConditionFunctionArray.length > 0) {\r\n\t\t\tinputObject.lineRoutines = postConditionFunctionArray;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\r\n\t//Extract Comments.\r\n\tprivate _extractComment(inputObject: LineObject): LineObject {\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\t//Semicolon identifies comments.\r\n\t\tif (inputLine.search(\";\") >= 0) {\r\n\t\t\tlet isInsideString = false;\r\n\t\t\tfor (let i = 0; i < inputLine.length; i++) {\r\n\t\t\t\tif (inputLine[i] === \";\") {\r\n\t\t\t\t\tif (!isInsideString) {\r\n\t\t\t\t\t\tinputObject.lineExpression = inputLine.substring(0, i);\r\n\t\t\t\t\t\tinputObject.lineComment = { comment: inputLine.substring(i).substring(1), position: i + inputObject.expressionPosition };\r\n\t\t\t\t\t\treturn inputObject;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (inputLine[i] === '\"') {\r\n\t\t\t\t\tisInsideString = !isInsideString;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\r\n\t//Extract Indentation.\r\n\t//Assumes inputLine has extracted comments/spacing.\r\n\tprivate _extractIndentation(inputObject: LineObject): LineObject {\r\n\r\n\t\tconst lineIndentationArray: string[] = [];\r\n\t\tlet lineIndentation = 0;\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\tlet spacer = '';\r\n\t\tlet i = 0;\r\n\t\tfor (i = 0; i <= inputLine.length; i++) {\r\n\t\t\tconst char = inputLine[i];\r\n\t\t\tif (char === \".\") {\r\n\t\t\t\tif (lineIndentation > 0) {\r\n\t\t\t\t\tlineIndentationArray.push(spacer);\r\n\t\t\t\t}\r\n\t\t\t\tlineIndentation++;\r\n\t\t\t\tspacer = '';\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (char === \" \" || char === \"\\t\") {\r\n\t\t\t\tspacer += char;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (lineIndentation > 0) {\r\n\t\t\tlineIndentationArray.push(spacer);\r\n\t\t\tinputObject.lineExpression = inputLine.substring(i);\r\n\t\t\tinputObject.expressionPosition! += i;\r\n\t\t\tinputObject.lineIndentationArray = lineIndentationArray;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\tprivate _extractLabel(inputObject: LineObject): LineObject {\r\n\t\tinputObject.lineLabel = '';\r\n\t\tconst inputLine = inputObject.lineExpression;\r\n\t\tinputObject.lineExpression = '';\r\n\t\tif (inputLine.match(label)) {\r\n\t\t\tinputObject.lineLabel = inputLine.match(label)![0];\r\n\t\t}\r\n\t\tconst position = inputObject.lineLabel.length;\r\n\t\tif (position === inputLine.length) {\r\n\t\t\treturn inputObject\r\n\t\t}\r\n\t\tif (!inputLine.charAt(position).match(/[\\s|;]/)) {\r\n\t\t\tinputObject.errorText = 'Unexpected Character' + inputLine.charAt(position);\r\n\t\t\tinputObject.errorPosition = position;\r\n\t\t\treturn inputObject;\r\n\t\t}\r\n\t\tlet i = 0;\r\n\t\tfor (i = position; i <= inputLine.length; i++) {\r\n\t\t\tif (inputLine[i] !== \" \" && inputLine[i] !== \"\\t\") {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tinputObject.lineLeadSpace = inputLine.substring(position, i);\r\n\t\tif (i !== (inputLine.length)) {\r\n\t\t\tinputObject.lineExpression = inputLine.substring(i);\r\n\t\t\tinputObject.expressionPosition = i;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\r\n\t//Extracts Post-Conditionals from Routines, used by extractRoutines.\r\n\tprivate _extractPostConditional(tmpFunctionArray: TmpFunction[]): TmpFunction[] {\r\n\r\n\t\t//Assign to new variable to truncate Routines.\r\n\t\tconst tmpObject = tmpFunctionArray;\r\n\t\tfor (let i = 0; i < tmpObject.length; i++) {\r\n\t\t\t//Colon indicates Post-Conditionals.\r\n\t\t\tconst tmpIndex = tmpObject[i].mCommand!.indexOf(\":\");\r\n\t\t\tif (tmpIndex > -1) {\r\n\t\t\t\ttmpObject[i].mPostCondition = tmpObject[i].mCommand.substring(tmpIndex + 1);\r\n\t\t\t\ttmpObject[i].mCommand = tmpObject[i].mCommand.substring(0, tmpIndex);\r\n\t\t\t\ttmpObject[i].pcPosition = tmpObject[i].cmdPosition + tmpIndex + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tmpObject;\r\n\t}\r\n\r\n\tprivate _isEndOfArgument(line: string, position: number): boolean {\r\n\t\tlet isEndOfArgument = false;\r\n\t\tconst char = line[position];\r\n\t\tif (char === undefined || char === \" \" || char === \"\\t\" || char === \";\") { isEndOfArgument = true; }\r\n\t\treturn isEndOfArgument;\r\n\t}\r\n\t/**\r\n * Divde inputString into Label, commands and comments and return corresponding LineObject\r\n * @param inputString\r\n * @returns LineObject\r\n */\r\n\tprivate _parseLine(inputString: string): LineObject {\r\n\r\n\t\tlet tmpObject: LineObject = { lineExpression: inputString, expressionPosition: 0 };\r\n\r\n\t\t//Parsing must be performed sequentially.\r\n\t\ttmpObject = this._extractLabel(tmpObject);\r\n\t\tif (tmpObject.errorText) {\r\n\t\t\treturn tmpObject;\r\n\t\t}\r\n\t\ttmpObject = this._extractComment(tmpObject);\r\n\t\ttmpObject = this._extractIndentation(tmpObject);\r\n\t\ttmpObject = this._extractCommands(tmpObject);\r\n\r\n\t\t//Line Expression is no longer needed.\r\n\t\ttmpObject.lineExpression = '';\r\n\t\treturn tmpObject;\r\n\t}\r\n\r\n\t//Divide commands and arguments into array, used by extractRoutines.\r\n\tprivate _splitCommandsAndArguments(inputObject: LineObject): LineComand[] {\r\n\r\n\t\tconst lineCommands: LineComand[] = [];\r\n\t\tlet tmpCursor = 0;\r\n\t\tlet isInsideString = false;\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\tconst start = inputObject.expressionPosition!;\r\n\t\tfor (let i = 0; i < inputLine.length; i++) {\r\n\r\n\t\t\t//Ensure space isn't quoted.\r\n\t\t\tif (inputLine[i] === '\"') {\r\n\t\t\t\tisInsideString = !isInsideString;\r\n\t\t\t}\r\n\t\t\t//Flag spaces/tabs as dividers.\r\n\t\t\tif ((inputLine[i] === \" \" || inputLine[i] === \"\\t\") && !isInsideString) {\r\n\t\t\t\t//If has content, push.\r\n\t\t\t\tif (inputLine.substring(tmpCursor, i).length > 0) {\r\n\t\t\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t\t\t//Otherwise, push empty commands.\r\n\t\t\t\t} else if (inputLine.substring(tmpCursor, i).length === 0 && (inputLine.substring(tmpCursor - 1, tmpCursor) === \" \" || inputLine.substring(tmpCursor - 1, tmpCursor) === \"\\t\")) {\r\n\t\t\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t\t}\r\n\t\t\t\ttmpCursor = i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst i = inputLine.length;\r\n\t\tif (inputLine.substring(tmpCursor, i).length > 0) {\r\n\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t//Gather empty commands from end of line.\r\n\t\t} else if (i === tmpCursor && (inputLine.substring(i - 1, i) === \" \" || inputLine.substring(i - 1, i) === \"/t\")) {\r\n\t\t\tlineCommands.push({ command: '', position: start + tmpCursor });\r\n\t\t}\r\n\t\treturn lineCommands;\r\n\t}\r\n\r\n\tprivate _splitLabelAndParameters(label: string) {\r\n\t\tif (label.indexOf('(') === -1) {\r\n\t\t\tthis._tokens.push({ name: label, position: 0, type: TokenType.label });\r\n\t\t} else {\r\n\t\t\tconst labelparts = label.split('(');\r\n\t\t\tconst labeltext = labelparts[0];\r\n\t\t\tthis._tokens.push({ name: labeltext, position: 0, type: TokenType.label });\r\n\t\t\tconst parameters = labelparts[1].split(')')[0];\r\n\t\t\tconst parameterVars = parameters.split(',');\r\n\t\t\tlet position = labeltext.length + 1\t\t// Position = lengths of Label + trailing \"(\"\r\n\t\t\tfor (let i = 0; i < parameterVars.length; i++) {\r\n\t\t\t\tthis._tokens.push({ name: parameterVars[i], position, type: TokenType.local });\r\n\t\t\t\tposition += parameterVars[i].length + 1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n/*\r\nlet dir = \"t:\\\\\";\r\nlet test = new MumpsLineParser();\r\nlet erg: Array<ErrorInformation> = [];\r\nfs.readdir(dir, function (err, files) {\r\n\t//handling error\r\n\tif (err) {\r\n\t\treturn console.log('Unable to scan directory: ' + err);\r\n\t}\r\n\t//listing all files using forEach\r\n\tfiles.forEach(function (file: string) {\r\n\t\tif (file.substring(file.length - 2, file.length) === \".m\")\r\n\t\t\terg = test.checkFile(dir + file);\r\n\t\tif (erg.length) {\r\n\t\t\tconsole.log(file);\r\n\t\t\tconsole.log(erg);\r\n\t\t}\r\n\t});\r\n});\r\nlet test = new MumpsLineParser();\r\nlet expanded = test.expandCompressFile(\"t:\\\\KTEST93.m\", true);\r\nconsole.log(expanded);\r\nlet lines = expanded.split(\"\\n\");\r\nfor (let i = 0; i < lines.length; i++) {\r\n\tconsole.log(test.expandCompressLine(lines[i], false).lineText);\r\n}\r\n*/\r\n//let result = test.checkLine('\tS VGZR=$E(YDL(2),5,6)-1 S:VGZR=0 VGZR=12_($E(YDL(2),1,4)-1)');\r\n//console.log(result);\r\nexport { ifunction, isv, MumpsLineParser }","import * as vscode from 'vscode';\nimport { TokenType, MumpsLineParser } from './mumpsLineParser';\nimport fs = require('fs');\nconst parser = new MumpsLineParser();\nexport default class MumpsReferenceProvider {\n\tprovideReferences(document: vscode.TextDocument, position: vscode.Position): Promise<vscode.Location[] | null | undefined> {\n\t\tconst myToken = parser.getTokenAt(document.lineAt(position).text, position.character);\n\t\tconst result: vscode.Location[] = [];\n\t\tif (myToken !== undefined) {\n\t\t\tlet searchType: TokenType = myToken.type;\n\t\t\tconst searchToken = myToken?.name;\n\t\t\tif (searchType === TokenType.label) {\n\t\t\t\tlet routine = document.fileName.replace(/\\\\/g, '/').split('/').pop();\n\t\t\t\troutine = routine?.split('.')[0].replace('_', '%');\n\t\t\t\tsearchType = TokenType.entryref\n\t\t\t\tconst externalLabel: string = searchToken + \"^\" + routine;\n\t\t\t\t// Check active document for entryrefs\n\t\t\t\tconst docLines: string[] = document.getText().split('\\n');\n\t\t\t\tfor (let i = 0; i < docLines.length; i++) {\n\t\t\t\t\tif (docLines[i].includes(externalLabel) || docLines[i].includes(searchToken)) {\n\t\t\t\t\t\tlet foundPosition = -1;\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tconst extPosition = docLines[i].indexOf(externalLabel, foundPosition + 1);\n\t\t\t\t\t\t\tif (extPosition === -1) {\n\t\t\t\t\t\t\t\tfoundPosition = docLines[i].indexOf(searchToken, foundPosition + 1);\n\t\t\t\t\t\t\t\tif (foundPosition === -1) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfoundPosition = extPosition;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst token = parser.getTokenAt(docLines[i], foundPosition + 1)\n\t\t\t\t\t\t\tif (token !== undefined && (token.name === externalLabel || token.name === searchToken) &&\n\t\t\t\t\t\t\t\t(token.type === TokenType.entryref || token.type === TokenType.exfunction)) {\n\t\t\t\t\t\t\t\tresult.push(new vscode.Location(document.uri, new vscode.Range(i, foundPosition, i, foundPosition + token.name.length)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\t\t} while (true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Check all other documents and return result\n\t\t\t\treturn this.getallLabelReferences(result, externalLabel, searchType);\n\t\t\t} else {\n\t\t\t\tif (searchType === TokenType.local || searchType === TokenType.global) {\n\t\t\t\t\treturn this.getallLabelReferences(result, searchToken, searchType);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\t}\n\tgetallLabelReferences(result: vscode.Location[], searchToken: string, searchType: TokenType): Promise<vscode.Location[]> {\n\t\t//result.push(new vscode.Location(vscode.Uri.file(\"X://AAFA02.m\"), new vscode.Position(1, 1)));\n\t\treturn new Promise(resolve => {\n\t\t\tvscode.workspace.findFiles('*.m').then((files) => {\n\t\t\t\tconst filesToCheck = files.length;\n\t\t\t\tfor (let i = 0; i < filesToCheck; i++) {\n\t\t\t\t\tconst path = files[i].fsPath;\n\t\t\t\t\tfs.readFile(path, 'utf8', (err, content: string) => {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\tif (content.includes(searchToken)) {\n\t\t\t\t\t\t\t\tconst lines = content.split('\\n');\n\t\t\t\t\t\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\t\t\t\t\t\tif (lines[i].includes(searchToken)) {\n\t\t\t\t\t\t\t\t\t\tconst foundPosition = lines[i].indexOf(searchToken);\n\t\t\t\t\t\t\t\t\t\tconst token = parser.getTokenAt(lines[i], foundPosition + 1)\n\t\t\t\t\t\t\t\t\t\tif (token !== undefined && token.name === searchToken &&\n\t\t\t\t\t\t\t\t\t\t\t(token.type === searchType || (token.type === TokenType.exfunction && searchType === TokenType.entryref))) {\n\t\t\t\t\t\t\t\t\t\t\tresult.push(new vscode.Location(vscode.Uri.file(path), new vscode.Range(i, foundPosition, i, foundPosition + token.name.length)));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i === filesToCheck - 1) {\n\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\nexport default class MumpsSignatureHelpProvider {\r\n\tprovideSignatureHelp(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenSignature();\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\nimport { TokenType, MumpsLineParser } from './mumpsLineParser';\nconst parser = new MumpsLineParser();\nimport { definitionsArray } from './language-definitions';\nconst definitions = {};\nimport fs = require('fs');\nimport path = require('path');\nconst Uri = vscode.Uri;\nconst EXTENSIONS = ['.m', '.int', '.zwr', '.M', '.INT', '.ZWR'];\nconst cache: { fsPath: string, text: string } = { fsPath: \"\", text: \"\" };\ninterface LocationInfo { location: vscode.Location, commentText: string, labelLine: string }\ninterface ParameterDefinition {\n\tname: string,\n\ttype: string,\n\tdescription?: string\n\toptional?: boolean\n}\ninterface TokenDefinition {\n\tname: string,\n\ttype: string,\n\tabbreviation?: string,\n\tcommentText?: string,\n\tdescription: string,\n\tparameters?: ParameterDefinition[],\n\treturns?: { type: string }\n\tlocation?: vscode.Location\n}\ninterface TokenData {\n\tname: string,\n\tparameters: vscode.ParameterInformation[],\n\tdescription: string\n}\nfunction addDefinition(name: string, definition: TokenDefinition) {\n\tif (!definitions[name]) {\n\t\tdefinitions[name] = [definition];\n\t} else {\n\t\tdefinitions[name].push(definition);\n\t}\n}\nif (Object.keys(definitions).length === 0) {\n\tfor (const definition of definitionsArray) {\n\t\taddDefinition(definition.name, definition);\n\t\tif (definition.abbreviation) {\n\t\t\taddDefinition(definition.abbreviation, definition);\n\t\t}\n\t}\n}\nexport class MumpsTokenHelper {\n\tprivate _document: vscode.TextDocument;\n\tprivate _position: vscode.Position;\n\tconstructor(document: vscode.TextDocument, position: vscode.Position) {\n\t\tthis._document = document;\n\t\tthis._position = position;\n\t}\n\tprivate _getText(uri: vscode.Uri) {\n\t\tif (uri === this._document.uri) {\n\t\t\treturn this._document.getText();\n\t\t}\n\t\tif (uri.fsPath === cache.fsPath) {\n\t\t\treturn cache.text;\n\t\t}\n\t\ttry {\n\t\t\tcache.text = fs.readFileSync(uri.fsPath, 'utf8');\n\t\t\tcache.fsPath = uri.fsPath;\n\t\t\treturn cache.text;\n\t\t} catch (e) {\n\t\t\treturn '';\n\t\t}\n\t}\n\tpublic getTokenSignature(): vscode.SignatureHelp | undefined {\n\t\tconst line = this._document.lineAt(this._position);\n\t\tif (!line) {\n\t\t\treturn;\n\t\t}\n\t\tconst text = line.text;\n\t\tconst myToken = this._getFunctionToken(text);\n\t\tif (myToken === undefined || (myToken.type !== TokenType.ifunction && myToken.type !== TokenType.exfunction)) {\n\t\t\treturn;\n\t\t}\n\t\tconst definition = this.getTokenData(myToken.name, myToken.type);\n\t\tif (!definition) {\n\t\t\treturn;\n\t\t}\n\t\tconst help = new vscode.SignatureHelp();\n\t\thelp.signatures = [this.convertDefinition(definition)];\n\t\thelp.activeSignature = 0;\n\t\thelp.activeParameter = this._calculateActiveParameter(line.text, myToken.position + myToken.name.length, this._position.character);\n\t\treturn help;\n\t}\n\tpublic getTokenHoverInfo(): vscode.Hover | undefined {\n\t\tconst myToken = parser.getTokenAt(this._document.lineAt(this._position).text, this._position.character);\n\t\tif (myToken === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (myToken.type === TokenType.exfunction || myToken.type === TokenType.ifunction ||\n\t\t\tmyToken.type === TokenType.entryref || myToken.type === TokenType.keyword) {\n\t\t\tconst definition = this.getTokenData(myToken.name, myToken.type);\n\t\t\tif (!definition) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (definition.parameters) {\n\t\t\t\tdefinition.name += \"(\";\n\t\t\t\tfor (let i = 0; i < definition.parameters.length; i++) {\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tdefinition.name += \",\";\n\t\t\t\t\t}\n\t\t\t\t\tdefinition.name += definition.parameters[i].name;\n\t\t\t\t}\n\t\t\t\tdefinition.name += \")\";\n\t\t\t}\n\t\t\tconst snippet = { language: 'mumps', value: definition.name };\n\t\t\treturn new vscode.Hover([snippet, definition.commentText || definition.description]);\n\t\t}\n\t}\n\tprivate _calculateActiveParameter(lineText: string, parametersStartIndex: number, insertIndex: number) {\n\t\tlet active = 0;\n\t\tlet depth = 0;\n\t\tlet isInsideString = false;\n\t\tfor (let i = parametersStartIndex + 1; i < insertIndex; i++) {\n\t\t\tconst char = lineText.charAt(i);\n\t\t\tif (char === '(' && !isInsideString) {\n\t\t\t\tdepth++;\n\t\t\t} else if (char === ')' && !isInsideString) {\n\t\t\t\tdepth--;\n\t\t\t} else if (char === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t} else if (char === ',' && depth === 0 && !isInsideString) {\n\t\t\t\tactive++;\n\t\t\t}\n\t\t}\n\t\treturn active;\n\t}\n\tpublic getTokenRefLocation(): vscode.Location | undefined {\n\t\tconst myToken = parser.getTokenAt(this._document.lineAt(this._position).text, this._position.character);\n\t\tif (myToken === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (myToken.type === TokenType.entryref || myToken.type === TokenType.exfunction) {\n\t\t\tconst tokendata = this.getTokenData(myToken.name, myToken.type);\n\t\t\tif (tokendata) {\n\t\t\t\treturn tokendata.location;\n\t\t\t}\n\t\t}\n\t}\n\n\t// get Information for given function or keyword\n\tpublic getTokenData(functionName: string, functionType: TokenType): TokenDefinition | undefined {\n\t\tif (functionType === TokenType.ifunction || functionType === TokenType.keyword) {\n\t\t\tconst matches = definitions[functionName.toUpperCase()];\n\t\t\tif (matches) {\n\t\t\t\tfor (const definition of matches) {\n\t\t\t\t\tif (definition.type !== 'function' && definition.type !== \"command\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\treturn Object.assign({}, definition);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (functionType === TokenType.exfunction || functionType === TokenType.entryref) {\n\t\t\tconst locationInfo = this.getPositionForLabel(functionName);\n\t\t\tif (locationInfo) {\n\t\t\t\treturn this._extractDefinition(locationInfo);\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\tpublic convertDefinition(definition: TokenDefinition): vscode.SignatureInformation {\n\t\tconst data: TokenData = {\n\t\t\tname: \"\",\n\t\t\tdescription: \"\",\n\t\t\tparameters: []\n\t\t}\n\t\tdata.description = definition.description;\n\t\tif (definition.parameters) {\n\t\t\tdata.name = definition.name + '(';\n\t\t\tfor (let i = 0; i < definition.parameters.length; i++) {\n\t\t\t\tconst parameter = definition.parameters[i];\n\t\t\t\tlet description = parameter.optional ? '(optional) ' : '';\n\t\t\t\tdescription += parameter.description || parameter.name;\n\t\t\t\tdata.parameters.push(new vscode.ParameterInformation(parameter.name, description));\n\t\t\t\tif (parameter.optional) {\n\t\t\t\t\tdata.name += '[';\n\t\t\t\t}\n\t\t\t\tdata.name += (i === 0 ? '' : ',');\n\t\t\t\tdata.name += parameter.name + ':' + parameter.type;\n\t\t\t\tif (parameter.optional) {\n\t\t\t\t\tdata.name += ']';\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.name += ')';\n\t\t\tif (definition.returns) {\n\t\t\t\tdata.name += ':' + definition.returns;\n\t\t\t}\n\t\t}\n\t\tconst signature = new vscode.SignatureInformation(data.name, data.description);\n\t\tsignature.parameters = data.parameters;\n\t\treturn signature;\n\t}\n\tpublic getPositionForLabel(label: string): LocationInfo | undefined {\n\t\tlet fileUri = this._document.uri;\n\t\tlet nakedLabel = label.split(\"^\")[0];\n\t\tlet offset = 0;\n\t\tlet labelLine = \"\";\n\t\tif (nakedLabel.split(\"+\")[1] !== undefined) {\n\t\t\toffset = parseInt(label.split(\"+\")[1]);\n\t\t\tnakedLabel = nakedLabel.split(\"+\")[0];\n\t\t}\n\t\tif (label.indexOf(\"^\") !== -1) {\n\t\t\tlet fileName = label.split(\"^\")[1];\n\t\t\tif (fileName.charAt(0) === '%') {\n\t\t\t\tfileName = '_' + fileName.substring(1);\n\t\t\t}\n\t\t\tlet fullPath = path.resolve(this._document.uri.fsPath, '../' + fileName);\n\t\t\tfor (const extension of EXTENSIONS) {\n\t\t\t\tconst extendedPath = fullPath + extension;\n\t\t\t\tif (fs.existsSync(extendedPath)) {\n\t\t\t\t\tfullPath = extendedPath;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfileUri = Uri.file(fullPath);\n\t\t}\n\t\tconst lines: string[] = this._getText(fileUri).split(\"\\n\");\n\t\tlet commentText = \"\";\n\t\tlet i = 0;\n\t\tconst labelLength = nakedLabel.length;\n\t\tfor (i = 0; i < lines.length; i++) {\n\t\t\tif (lines[i].substr(0, labelLength) === nakedLabel && lines[i].substr(labelLength, 1).match(/(;|\\s|\\()/) !== null) {\n\t\t\t\tlabelLine = lines[i];\n\t\t\t\tcommentText += lines[i] + \"\\n\";\n\t\t\t\tfor (let j = i - 1; j > 0; j--) {\n\t\t\t\t\tif (lines[j].length === 0 || lines[j].match(/^\\s*;/)) {\n\t\t\t\t\t\tcommentText += lines[j] + \"\\n\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (commentText.length > 0) {\n\t\t\tcommentText = commentText.split(\"\\n\").reverse().join(\"\\n\")\n\t\t\treturn {\n\t\t\t\tcommentText,\n\t\t\t\tlocation: new vscode.Location(fileUri, new vscode.Position(i + offset, 0)),\n\t\t\t\tlabelLine\n\t\t\t};\n\t\t}\n\t\treturn;\n\t}\n\tprivate _extractDefinition(locationInfo: LocationInfo): TokenDefinition | undefined {\n\t\tconst definition: TokenDefinition = {\n\t\t\tname: '',\n\t\t\ttype: 'function',\n\t\t\tcommentText: '',\n\t\t\tdescription: '',\n\t\t\treturns: { type: '' },\n\t\t\tlocation: locationInfo.location\n\t\t};\n\t\tconst labelLines = locationInfo.commentText;\n\t\tdefinition.commentText = labelLines\n\t\tconst definitionRegex = /^([%A-Z][A-Z0-9]*)(\\((,?[%A-Z][A-Z0-9]*)+\\))?/i;\n\t\tconst result = definitionRegex.exec(locationInfo.labelLine);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\t\tdefinition.name = result[1];\n\t\tif (labelLines.indexOf(';')) {\n\t\t\tdefinition.commentText = labelLines.substring(labelLines.indexOf(';') + 1);\n\t\t}\n\t\tlet parameterNames: string[] = [];\n\t\tconst parametersByName = {};\n\t\tif (result[2] !== undefined) {\n\t\t\tparameterNames = result[2].substring(1, result[2].length - 1).split(',')\n\t\t\tdefinition.parameters = [];\n\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\n\t\t\t\tdefinition.parameters.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: parameterNames[i],\n\t\t\t\t\t\ttype: 'any'\n\t\t\t\t\t});\n\t\t\t\tparametersByName[parameterNames[i]] = definition.parameters.length - 1;\n\t\t\t}\n\t\t}\n\t\tif (labelLines !== \"\") {\n\t\t\tconst description = labelLines.match(/DESCRIPTION:.*/i)\n\t\t\tif (description !== null) { definition.description = description[0]; }\n\n\t\t\tfor (const param in parametersByName) {\n\t\t\t\tconst paramDescription = labelLines.match(new RegExp(\"\\\\s\" + param + \"(\\\\(.*\\\\))?:.*\", 'i'))\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tif (paramDescription !== null) { definition.parameters![parametersByName[param]].description = paramDescription[0] }\n\t\t\t}\n\t\t}\n\t\treturn definition;\n\t}\n\tprivate _getFunctionToken(lineText: string) {\n\t\tlet depth = 1;\n\t\tlet index: number;\n\t\tconst linePosition = this._position.character;\n\t\tfor (index = linePosition - 1; index > 0 && depth > 0; index--) {\n\t\t\tconst char = lineText.charAt(index);\n\t\t\tif (char === ')') {\n\t\t\t\tdepth++;\n\t\t\t} else if (char === '(') {\n\t\t\t\tdepth--;\n\t\t\t}\n\t\t}\n\t\tif (depth > 0 || index <= 0) {\n\t\t\treturn;\n\t\t}\n\t\treturn parser.getTokenAt(lineText, index);\n\t}\n}\n\n","module.exports = require(\"vscode\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["Object","defineProperty","exports","value","DebugSession","ErrorDestination","MemoryEvent","InvalidatedEvent","ProgressEndEvent","ProgressUpdateEvent","ProgressStartEvent","CapabilitiesEvent","LoadedSourceEvent","ModuleEvent","BreakpointEvent","ThreadEvent","OutputEvent","ExitedEvent","TerminatedEvent","InitializedEvent","ContinuedEvent","StoppedEvent","CompletionItem","Module","Breakpoint","Variable","Thread","StackFrame","Scope","Source","protocol_1","messages_1","runDebugAdapter_1","url_1","constructor","name","path","id","origin","data","this","sourceReference","adapterData","reference","expensive","variablesReference","i","nm","src","ln","col","source","line","column","ref","indexedVariables","namedVariables","verified","e","setId","label","start","length","Event","reason","threadId","exceptionText","super","body","text","allThreadsContinued","restart","exitCode","output","category","undefined","breakpoint","module","capabilities","progressId","title","message","areas","stackFrameId","memoryReference","offset","count","ProtocolServer","obsolete_debuggerLinesAndColumnsStartAt1","obsolete_isServer","linesAndColumnsStartAt1","_debuggerLinesStartAt1","_debuggerColumnsStartAt1","_debuggerPathsAreURIs","_clientLinesStartAt1","_clientColumnsStartAt1","_clientPathsAreURIs","_isServer","on","shutdown","error","setDebuggerPathFormat","format","setDebuggerLinesStartAt1","enable","setDebuggerColumnsStartAt1","setRunAsServer","static","debugSession","runDebugAdapter","_isRunningInline","setTimeout","process","exit","sendErrorResponse","response","codeOrMessage","variables","dest","User","msg","showUser","Telemetry","sendTelemetry","success","formatPII","sendResponse","runInTerminalRequest","args","timeout","cb","sendRequest","dispatchRequest","request","Response","command","arguments","linesStartAt1","columnsStartAt1","pathFormat","initializeResponse","initializeRequest","launchRequest","attachRequest","disconnectRequest","terminateRequest","restartRequest","setBreakPointsRequest","setFunctionBreakPointsRequest","setExceptionBreakPointsRequest","configurationDoneRequest","continueRequest","nextRequest","stepInRequest","stepOutRequest","stepBackRequest","reverseContinueRequest","restartFrameRequest","gotoRequest","pauseRequest","stackTraceRequest","scopesRequest","variablesRequest","setVariableRequest","setExpressionRequest","sourceRequest","threadsRequest","terminateThreadsRequest","evaluateRequest","stepInTargetsRequest","gotoTargetsRequest","completionsRequest","exceptionInfoRequest","loadedSourcesRequest","dataBreakpointInfoRequest","setDataBreakpointsRequest","readMemoryRequest","writeMemoryRequest","disassembleRequest","cancelRequest","breakpointLocationsRequest","setInstructionBreakpointsRequest","customRequest","_exception","_stack","stack","supportsConditionalBreakpoints","supportsHitConditionalBreakpoints","supportsFunctionBreakpoints","supportsConfigurationDoneRequest","supportsEvaluateForHovers","supportsStepBack","supportsSetVariable","supportsRestartFrame","supportsStepInTargetsRequest","supportsGotoTargetsRequest","supportsCompletionsRequest","supportsRestartRequest","supportsExceptionOptions","supportsValueFormattingOptions","supportsExceptionInfoRequest","supportTerminateDebuggee","supportsDelayedStackTraceLoading","supportsLoadedSourcesRequest","supportsLogPoints","supportsTerminateThreadsRequest","supportsSetExpression","supportsTerminateRequest","supportsDataBreakpoints","supportsReadMemoryRequest","supportsDisassembleRequest","supportsCancelRequest","supportsBreakpointLocationsRequest","supportsClipboardContext","supportsSteppingGranularity","supportsInstructionBreakpoints","supportsExceptionFilterOptions","convertClientLineToDebugger","convertDebuggerLineToClient","convertClientColumnToDebugger","convertDebuggerColumnToClient","convertClientPathToDebugger","clientPath","uri2path","path2uri","convertDebuggerPathToClient","debuggerPath","platform","test","toLowerCase","substr","replace","encodeURI","uri","URL","pathname","toString","sourceUri","s","decodeURIComponent","excludePII","_formatPIIRegexp","match","paramName","hasOwnProperty","Handles","startHandle","START_HANDLE","_handleMap","Map","_nextHandle","reset","create","handle","set","get","dflt","InternalLogger","fs","logger_1","getFormattedTimeString","d","Date","_padZeroes","String","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","minDesiredLength","numberToPad","repeat","slice","logCallback","isServer","beforeExitCallback","dispose","_logCallback","_logToConsole","_minLogLevel","LogLevel","Warn","disposeCallback","signal","code","async","options","consoleMinLogLevel","_prependTimestamp","prependTimestamp","logFilePath","isAbsolute","handleError","err","sendLog","Error","promises","mkdir","dirname","recursive","log","_logFileStream","createWriteStream","logDateTime","setupShutdownListeners","timeAndDateStamp","getUTCFullYear","getUTCMonth","getUTCDate","Verbose","removeShutdownListeners","removeListener","Promise","resolve","end","level","Stop","logFn","console","warn","trimLastNewline","write","endsInNewline","event","LogOutputEvent","logger","Logger","internalLogger_1","debugSession_1","_pendingLogQ","Log","_write","verbose","_currentLogger","disposeP","push","setup","_logFilePath","_logFilePathFromInit","then","logQ","forEach","item","init","logToConsole","str","LoggingDebugSession","obsolete_logFilePath","inStream","outStream","sendEvent","objectToLog","doNotLogOutput","JSON","stringify","enumerable","loggingDebugSession_1","handles_1","Message","type","seq","request_seq","ee","Emitter","_event","listener","thisArg","result","_listener","_this","fire","call","hasListener","EventEmitter","_sendMessage","_pendingRequests","onDidSendMessage","handleMessage","clb","delete","_sequence","_writableStream","_rawData","Buffer","alloc","_handleData","_emitEvent","resume","stop","_send","keys","timer","clearTimeout","emit","typ","json","byteLength","concat","_contentLength","parse","idx","indexOf","TWO_CRLF","lines","split","pair","Net","port","argv","val","index","array","portMatch","exec","parseInt","createServer","socket","session","listen","stdin","stdout","Subject","waiters","prototype","wait","self","waiter","promise","resolved","noRemove","pos","splice","isFinite","notify","pop","notifyAll","parser","renderer","parseLine","inputString","tmpObject","extractLabel","extractComment","lineExpression","extractIndentation","extractRoutines","renderLine","inputObject","tmpLine","appendLabel","appendIndentation","appendRoutines","appendComment","inputArray","returnArray","tmpLineObject","lineNumber","render","parseArray","Array","isArray","splitRoutinesAndArguments","inputLine","lineCommands","tmpCursor","substring","extractPostConditional","mRoutine","tmpIndex","mPostConditional","lineLabel","ii","lineLeadSpace","search","lineComment","lineIndentationArray","lineIndentation","tmpPosStart","tmpPosEnd","tmpFunction","tmpFunctionArray","splitLine","mArguments","postConditionFunctionArray","lineRoutines","tmpIndentation","context","MUMPS_MODE","language","scheme","mumpsDiagnostics","vscode","languages","createDiagnosticCollection","storage","storageUri","fsPath","existsSync","mkdirSync","dbFile","subscriptions","registerCompletionItemProvider","wsState","workspaceState","commands","registerCommand","autoSpaceEnter","autoSpaceTab","window","showInputBox","placeHolder","registerHoverProvider","registerDefinitionProvider","registerEvaluatableExpressionProvider","registerSignatureHelpProvider","registerDocumentSymbolProvider","registerDocumentSemanticTokensProvider","MumpsHighlighter","SemanticTokens","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","registerReferenceProvider","debug","registerDebugConfigurationProvider","registerDebugAdapterDescriptorFactory","InlineDebugAdapterFactory","onDidChangeActiveTextEditor","editor","triggerUpdateDiagnostics","document","workspace","onDidChangeTextDocument","onDidOpenTextDocument","createDebugAdapterDescriptor","DebugAdapterInlineImplementation","collection","definitionsArray","activeTextEditor","selection","active","currentLine","lineAt","parsed","em","newLine","character","edit","editBuilder","Range","with","cmds","lineContainsNoParamDo","insert","charAt","eb","MumpsLineParser","state","doExpand","filename","fileName","update","getText","lineCount","lastLineLength","info","expandCompressLine","errorText","lineText","join","labeldb","_labelsReady","_dbfile","_refreshLabelDB","provideCompletionItems","position","status","lineStatus","lookPosition","lastCommand","startstring","isInsidePostcond","char","isWhiteSpace","isBeginOfVariable","isAlphaChar","getLineStatus","Position","_document","clean","replaceRange","_findLabel","db","labels","routine","routines","writeFileSync","readFile","_labelDB","dbChanged","findFiles","files","_filesToCheck","stat","stats","_checkReady","ms","mtimeMs","size","_refreshFileLabels","writeFile","showErrorMessage","content","filter","list","hitlist","localLabels","getLabels","sortText","suchstring","startsWith","routinepart","detail","range","resolveDebugConfiguration","folder","config","languageId","program","stopOnEntry","hostname","localRoutinesPath","showInformationMessage","connectState","MumpsConnect","_socket","Socket","_currentLine","_breakpointId","_logging","_singleVar","_singleVarContent","_commandQueue","_connectState","disconnected","_readedData","_mVars","_mStack","_activeBreakpoints","_breakPoints","_errorLines","_hints","internals","checkEvents","_localRoutinesPath","_hostname","_port","reject","connect","_log","waitingforStart","chunk","n","processLine","varname","vartype","waitingForVars","waitingForBreakpoints","waitingForSingleVar","waitingForErrorReport","waitingForHints","verifyBreakpoints","waitingForSingleVarContent","writeln","shift","unshift","sendBreakpoint","file","onOff","condition","stopAtStart","requestBreakpoints","step","continue","disconnect","mumpsposition","mumpsstatus","parts","loadSource","startlabel","_sourceLines","bp","_sourceFile","startFrame","endFrame","frames","fileposition","convertMumpsPosition","Math","min","setBreakPoint","breakpoints","confirmedBreakpoints","clearBreakPoint","bps","findIndex","clearBreakpoints","merk","internalBp","normalizeDrive","getVariables","checkRoutine","ErrorreportReceived","errorLines","getSingleVar","expression","reply","indexCount","bases","varType","SingleVarReceived","singleVar","singleVarContent","readFileSync","positionstring","filecontent","labelRegexp","RegExp","MUMPSDIAGNOSTICS","MumpsDebugSession","_variableHandles","_variableBases","_configurationDone","_localScope","_systemScope","_program","_mconnect","THREAD_ID","completionTriggerCharacters","refreshDiagnostics","catch","actualBreakpoints","threads","levels","stk","stackFrames","map","f","createSource","totalFrames","scopes","insertVariable","varReference","varId","varObject","varparts","varBase","lastVar","lastRef","actualVar","varAnalyze","_checkVars","dummyVar","returnVar","actualReference","varReply","includes","sourceLines","filePath","basename","statVariable","trashlength","description","exceptionId","breakMode","details","typeName","indexcount","klammerpos","countKomma","doc","diagnostics","errLines","errData","isNaN","endColumn","diagnostic","Diagnostic","DiagnosticSeverity","clear","provideDefinition","MumpsTokenHelper","getTokenRefLocation","symbols","_linetokens","_diags","_variablesToBeIgnored","_enableVariableCheck","_subroutines","_routine","startLine","endLine","parameters","_level","_lineWithDo","_isBehindQuit","_startUnreachable","_activeSubroutine","configuration","getConfiguration","mumps","variablesToBeIgnoredAtNewCheck","enableVariableCheck","lineInfo","analyzeLine","_addWarning","tokens","_checkLine","_addSymbol","analyzeSubroutine","_varStates","_levelExclusiveNew","isParameter","parameterPosition","intendationFound","j","token","TokenType","local","intendation","newLevel","_reduceIntendationLevel","comment","keyword","longName","anyVariablesNewed","containsExclusions","sysvariable","isExcludedVariable","varName","varState","isExcluded","newedAtLevel","newedAtLine","newedAtPostion","k","_checkNewed","_checkVariableUsage","key","isUsed","_isIgnoredVariable","isNewed","startPosition","len","severity","Warning","endline","endPosition","ifFlag","tokenId","hasArguments","isPostconditioned","hasPostcondition","argPostcondition","expectedLevel","variable","isIgnoredVariable","found","memLine","memPosition","methodRange","Location","SymbolInformation","SymbolKind","Function","provideDocumentSymbols","endPostionLine","DIVIDERLINE","makeSignature","labelLine","Signature","parameterString","element","InsertPosition","translate","provideEvaluatableExpression","lineContent","getExpression","EvaluatableExpression","isInsideString","formatDocumentLine","textEdits","TextEdit","endsWith","endSpace","replacementString","dotPosition","dotCount","spaceCount","provideDocumentFormattingEdits","provideDocumentRangeFormattingEdits","tokentypes","SemanticTokensLegend","provideDocumentSemanticTokens","analyzeLines","tokensBuilder","SemanticTokensBuilder","t","exfunction","build","provideHover","getTokenHoverInfo","lvn","gvn","isv","ifunction","nonMfunction","entryref","routineref","numlit","strlit","binoperator","unaryoperator","patcode","repititionCount","openkeywords","usekeywords","closekeywords","jobkeywords","tstartkeywords","cmdExpansions","funcExpansions","isvExpansions","cmdParams","funcParams","_tokens","linePosition","checkFile","errlist","checkLine","_parseLine","_splitLabelAndParameters","mCommand","cmd","toUpperCase","cmdPosition","longcmd","mPostCondition","_checkCommand","input","linetokens","expandCompressFile","cmdCompressions","shortCommand","funcCompressions","shortFunction","isvCompressions","shortIsv","outline","errorinfo","outText","posCorrector","checkName","getTokenAt","_checkEntryRefAndPostcondition","withParams","_checkEntryRef","_evaluateExpression","isUserfunction","tokentype","merkpos","_checkVar","globalOk","indexOk","isExluded","indexFound","globalFound","indirectionFound","varFound","global","provResult","_checkBreak","_checkKeyword","keywords","_checkOUC","braceComplete","_isEndOfArgument","_checkFor","argNumber","_checkJobKeyword","stringlit","_checkJob","_checkKill","_checkLock","isLock","_checkMerge","_checkNew","_checkRead","mat","starDetected","_checkSet","isBraced","functionname","_checkFunction","_checkTstart","_checkView","_checkWrite","_checkWriteSocket","fname","maxparams","paramCount","_checkXecute","_checkZbreak","_checkZprint","_checkZstep","para","pcPosition","postcondPossible","postcondition","argFormat","parameter","argPosition","argCount","longfunc","params","minArguments","minparams","formats","exType","expressionComplete","startposition","lastExpression","subExType","evalString","localname","operator","_evaluatePattern","specialvarname","numericliteral","number","string","patternComplete","repCount","_extractCommands","_splitCommandsAndArguments","_extractPostConditional","_extractComment","expressionPosition","_extractIndentation","spacer","_extractLabel","errorPosition","isEndOfArgument","labelparts","labeltext","parameterVars","provideReferences","myToken","searchType","searchToken","externalLabel","docLines","foundPosition","extPosition","getallLabelReferences","filesToCheck","Uri","provideSignatureHelp","getTokenSignature","definitions","EXTENSIONS","cache","addDefinition","definition","abbreviation","_position","_getText","_getFunctionToken","getTokenData","help","SignatureHelp","signatures","convertDefinition","activeSignature","activeParameter","_calculateActiveParameter","snippet","Hover","commentText","parametersStartIndex","insertIndex","depth","tokendata","location","functionName","functionType","matches","assign","locationInfo","getPositionForLabel","_extractDefinition","optional","ParameterInformation","returns","signature","SignatureInformation","fileUri","nakedLabel","fullPath","extension","extendedPath","labelLength","reverse","labelLines","parameterNames","parametersByName","param","paramDescription","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}