{"version":3,"file":"extension.js","mappings":"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","sources":[".././node_modules/@vscode/debugadapter/lib/debugSession.js",".././node_modules/@vscode/debugadapter/lib/handles.js",".././node_modules/@vscode/debugadapter/lib/internalLogger.js",".././node_modules/@vscode/debugadapter/lib/logger.js",".././node_modules/@vscode/debugadapter/lib/loggingDebugSession.js",".././node_modules/@vscode/debugadapter/lib/main.js",".././node_modules/@vscode/debugadapter/lib/messages.js",".././node_modules/@vscode/debugadapter/lib/protocol.js",".././node_modules/@vscode/debugadapter/lib/runDebugAdapter.js",".././node_modules/await-notify/index.js",".././src/extension.ts",".././src/language-definitions.ts",".././src/mumpsAutospace.ts",".././src/mumpsCodeActionProvider.ts",".././src/mumpsCompExp.ts",".././src/mumpsCompletionItemProvider.ts",".././src/mumpsConfigurationProvider.ts",".././src/mumpsConnect.ts",".././src/mumpsDebug.ts",".././src/mumpsDefinitionProvider.ts",".././src/mumpsDiagnosticsProvider.ts",".././src/mumpsDocumentSymbolProvider.ts",".././src/mumpsDocumenter.ts",".././src/mumpsEvalutableExpressionProvider.ts",".././src/mumpsFoldingProvider.ts",".././src/mumpsFormattingHelpProvider.ts",".././src/mumpsGlobalProvider.ts",".././src/mumpsHighlighter.ts",".././src/mumpsHoverProvider.ts",".././src/mumpsLineParser.ts",".././src/mumpsParseDb.ts",".././src/mumpsReferenceProvider.ts",".././src/mumpsRoutineSorter.ts",".././src/mumpsSignatureHelpProvider.ts",".././src/mumpsTokenData.ts","../external commonjs \"vscode\"","../external node-commonjs \"events\"","../external node-commonjs \"fs\"","../external node-commonjs \"net\"","../external node-commonjs \"path\"","../external node-commonjs \"url\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DebugSession = exports.ErrorDestination = exports.MemoryEvent = exports.InvalidatedEvent = exports.ProgressEndEvent = exports.ProgressUpdateEvent = exports.ProgressStartEvent = exports.CapabilitiesEvent = exports.LoadedSourceEvent = exports.ModuleEvent = exports.BreakpointEvent = exports.ThreadEvent = exports.OutputEvent = exports.ExitedEvent = exports.TerminatedEvent = exports.InitializedEvent = exports.ContinuedEvent = exports.StoppedEvent = exports.CompletionItem = exports.Module = exports.Breakpoint = exports.Variable = exports.Thread = exports.StackFrame = exports.Scope = exports.Source = void 0;\nconst protocol_1 = require(\"./protocol\");\nconst messages_1 = require(\"./messages\");\nconst runDebugAdapter_1 = require(\"./runDebugAdapter\");\nconst url_1 = require(\"url\");\nclass Source {\n    constructor(name, path, id = 0, origin, data) {\n        this.name = name;\n        this.path = path;\n        this.sourceReference = id;\n        if (origin) {\n            this.origin = origin;\n        }\n        if (data) {\n            this.adapterData = data;\n        }\n    }\n}\nexports.Source = Source;\nclass Scope {\n    constructor(name, reference, expensive = false) {\n        this.name = name;\n        this.variablesReference = reference;\n        this.expensive = expensive;\n    }\n}\nexports.Scope = Scope;\nclass StackFrame {\n    constructor(i, nm, src, ln = 0, col = 0) {\n        this.id = i;\n        this.source = src;\n        this.line = ln;\n        this.column = col;\n        this.name = nm;\n    }\n}\nexports.StackFrame = StackFrame;\nclass Thread {\n    constructor(id, name) {\n        this.id = id;\n        if (name) {\n            this.name = name;\n        }\n        else {\n            this.name = 'Thread #' + id;\n        }\n    }\n}\nexports.Thread = Thread;\nclass Variable {\n    constructor(name, value, ref = 0, indexedVariables, namedVariables) {\n        this.name = name;\n        this.value = value;\n        this.variablesReference = ref;\n        if (typeof namedVariables === 'number') {\n            this.namedVariables = namedVariables;\n        }\n        if (typeof indexedVariables === 'number') {\n            this.indexedVariables = indexedVariables;\n        }\n    }\n}\nexports.Variable = Variable;\nclass Breakpoint {\n    constructor(verified, line, column, source) {\n        this.verified = verified;\n        const e = this;\n        if (typeof line === 'number') {\n            e.line = line;\n        }\n        if (typeof column === 'number') {\n            e.column = column;\n        }\n        if (source) {\n            e.source = source;\n        }\n    }\n    setId(id) {\n        this.id = id;\n    }\n}\nexports.Breakpoint = Breakpoint;\nclass Module {\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n    }\n}\nexports.Module = Module;\nclass CompletionItem {\n    constructor(label, start, length = 0) {\n        this.label = label;\n        this.start = start;\n        this.length = length;\n    }\n}\nexports.CompletionItem = CompletionItem;\nclass StoppedEvent extends messages_1.Event {\n    constructor(reason, threadId, exceptionText) {\n        super('stopped');\n        this.body = {\n            reason: reason\n        };\n        if (typeof threadId === 'number') {\n            this.body.threadId = threadId;\n        }\n        if (typeof exceptionText === 'string') {\n            this.body.text = exceptionText;\n        }\n    }\n}\nexports.StoppedEvent = StoppedEvent;\nclass ContinuedEvent extends messages_1.Event {\n    constructor(threadId, allThreadsContinued) {\n        super('continued');\n        this.body = {\n            threadId: threadId\n        };\n        if (typeof allThreadsContinued === 'boolean') {\n            this.body.allThreadsContinued = allThreadsContinued;\n        }\n    }\n}\nexports.ContinuedEvent = ContinuedEvent;\nclass InitializedEvent extends messages_1.Event {\n    constructor() {\n        super('initialized');\n    }\n}\nexports.InitializedEvent = InitializedEvent;\nclass TerminatedEvent extends messages_1.Event {\n    constructor(restart) {\n        super('terminated');\n        if (typeof restart === 'boolean' || restart) {\n            const e = this;\n            e.body = {\n                restart: restart\n            };\n        }\n    }\n}\nexports.TerminatedEvent = TerminatedEvent;\nclass ExitedEvent extends messages_1.Event {\n    constructor(exitCode) {\n        super('exited');\n        this.body = {\n            exitCode: exitCode\n        };\n    }\n}\nexports.ExitedEvent = ExitedEvent;\nclass OutputEvent extends messages_1.Event {\n    constructor(output, category = 'console', data) {\n        super('output');\n        this.body = {\n            category: category,\n            output: output\n        };\n        if (data !== undefined) {\n            this.body.data = data;\n        }\n    }\n}\nexports.OutputEvent = OutputEvent;\nclass ThreadEvent extends messages_1.Event {\n    constructor(reason, threadId) {\n        super('thread');\n        this.body = {\n            reason: reason,\n            threadId: threadId\n        };\n    }\n}\nexports.ThreadEvent = ThreadEvent;\nclass BreakpointEvent extends messages_1.Event {\n    constructor(reason, breakpoint) {\n        super('breakpoint');\n        this.body = {\n            reason: reason,\n            breakpoint: breakpoint\n        };\n    }\n}\nexports.BreakpointEvent = BreakpointEvent;\nclass ModuleEvent extends messages_1.Event {\n    constructor(reason, module) {\n        super('module');\n        this.body = {\n            reason: reason,\n            module: module\n        };\n    }\n}\nexports.ModuleEvent = ModuleEvent;\nclass LoadedSourceEvent extends messages_1.Event {\n    constructor(reason, source) {\n        super('loadedSource');\n        this.body = {\n            reason: reason,\n            source: source\n        };\n    }\n}\nexports.LoadedSourceEvent = LoadedSourceEvent;\nclass CapabilitiesEvent extends messages_1.Event {\n    constructor(capabilities) {\n        super('capabilities');\n        this.body = {\n            capabilities: capabilities\n        };\n    }\n}\nexports.CapabilitiesEvent = CapabilitiesEvent;\nclass ProgressStartEvent extends messages_1.Event {\n    constructor(progressId, title, message) {\n        super('progressStart');\n        this.body = {\n            progressId: progressId,\n            title: title\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressStartEvent = ProgressStartEvent;\nclass ProgressUpdateEvent extends messages_1.Event {\n    constructor(progressId, message) {\n        super('progressUpdate');\n        this.body = {\n            progressId: progressId\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressUpdateEvent = ProgressUpdateEvent;\nclass ProgressEndEvent extends messages_1.Event {\n    constructor(progressId, message) {\n        super('progressEnd');\n        this.body = {\n            progressId: progressId\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressEndEvent = ProgressEndEvent;\nclass InvalidatedEvent extends messages_1.Event {\n    constructor(areas, threadId, stackFrameId) {\n        super('invalidated');\n        this.body = {};\n        if (areas) {\n            this.body.areas = areas;\n        }\n        if (threadId) {\n            this.body.threadId = threadId;\n        }\n        if (stackFrameId) {\n            this.body.stackFrameId = stackFrameId;\n        }\n    }\n}\nexports.InvalidatedEvent = InvalidatedEvent;\nclass MemoryEvent extends messages_1.Event {\n    constructor(memoryReference, offset, count) {\n        super('memory');\n        this.body = { memoryReference, offset, count };\n    }\n}\nexports.MemoryEvent = MemoryEvent;\nvar ErrorDestination;\n(function (ErrorDestination) {\n    ErrorDestination[ErrorDestination[\"User\"] = 1] = \"User\";\n    ErrorDestination[ErrorDestination[\"Telemetry\"] = 2] = \"Telemetry\";\n})(ErrorDestination = exports.ErrorDestination || (exports.ErrorDestination = {}));\n;\nclass DebugSession extends protocol_1.ProtocolServer {\n    constructor(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super();\n        const linesAndColumnsStartAt1 = typeof obsolete_debuggerLinesAndColumnsStartAt1 === 'boolean' ? obsolete_debuggerLinesAndColumnsStartAt1 : false;\n        this._debuggerLinesStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerColumnsStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerPathsAreURIs = false;\n        this._clientLinesStartAt1 = true;\n        this._clientColumnsStartAt1 = true;\n        this._clientPathsAreURIs = false;\n        this._isServer = typeof obsolete_isServer === 'boolean' ? obsolete_isServer : false;\n        this.on('close', () => {\n            this.shutdown();\n        });\n        this.on('error', (error) => {\n            this.shutdown();\n        });\n    }\n    setDebuggerPathFormat(format) {\n        this._debuggerPathsAreURIs = format !== 'path';\n    }\n    setDebuggerLinesStartAt1(enable) {\n        this._debuggerLinesStartAt1 = enable;\n    }\n    setDebuggerColumnsStartAt1(enable) {\n        this._debuggerColumnsStartAt1 = enable;\n    }\n    setRunAsServer(enable) {\n        this._isServer = enable;\n    }\n    /**\n     * A virtual constructor...\n     */\n    static run(debugSession) {\n        (0, runDebugAdapter_1.runDebugAdapter)(debugSession);\n    }\n    shutdown() {\n        if (this._isServer || this._isRunningInline()) {\n            // shutdown ignored in server mode\n        }\n        else {\n            // wait a bit before shutting down\n            setTimeout(() => {\n                process.exit(0);\n            }, 100);\n        }\n    }\n    sendErrorResponse(response, codeOrMessage, format, variables, dest = ErrorDestination.User) {\n        let msg;\n        if (typeof codeOrMessage === 'number') {\n            msg = {\n                id: codeOrMessage,\n                format: format\n            };\n            if (variables) {\n                msg.variables = variables;\n            }\n            if (dest & ErrorDestination.User) {\n                msg.showUser = true;\n            }\n            if (dest & ErrorDestination.Telemetry) {\n                msg.sendTelemetry = true;\n            }\n        }\n        else {\n            msg = codeOrMessage;\n        }\n        response.success = false;\n        response.message = DebugSession.formatPII(msg.format, true, msg.variables);\n        if (!response.body) {\n            response.body = {};\n        }\n        response.body.error = msg;\n        this.sendResponse(response);\n    }\n    runInTerminalRequest(args, timeout, cb) {\n        this.sendRequest('runInTerminal', args, timeout, cb);\n    }\n    dispatchRequest(request) {\n        const response = new messages_1.Response(request);\n        try {\n            if (request.command === 'initialize') {\n                var args = request.arguments;\n                if (typeof args.linesStartAt1 === 'boolean') {\n                    this._clientLinesStartAt1 = args.linesStartAt1;\n                }\n                if (typeof args.columnsStartAt1 === 'boolean') {\n                    this._clientColumnsStartAt1 = args.columnsStartAt1;\n                }\n                if (args.pathFormat !== 'path') {\n                    this.sendErrorResponse(response, 2018, 'debug adapter only supports native paths', null, ErrorDestination.Telemetry);\n                }\n                else {\n                    const initializeResponse = response;\n                    initializeResponse.body = {};\n                    this.initializeRequest(initializeResponse, args);\n                }\n            }\n            else if (request.command === 'launch') {\n                this.launchRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'attach') {\n                this.attachRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'disconnect') {\n                this.disconnectRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'terminate') {\n                this.terminateRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'restart') {\n                this.restartRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setBreakpoints') {\n                this.setBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setFunctionBreakpoints') {\n                this.setFunctionBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setExceptionBreakpoints') {\n                this.setExceptionBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'configurationDone') {\n                this.configurationDoneRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'continue') {\n                this.continueRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'next') {\n                this.nextRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepIn') {\n                this.stepInRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepOut') {\n                this.stepOutRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepBack') {\n                this.stepBackRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'reverseContinue') {\n                this.reverseContinueRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'restartFrame') {\n                this.restartFrameRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'goto') {\n                this.gotoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'pause') {\n                this.pauseRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stackTrace') {\n                this.stackTraceRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'scopes') {\n                this.scopesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'variables') {\n                this.variablesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setVariable') {\n                this.setVariableRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setExpression') {\n                this.setExpressionRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'source') {\n                this.sourceRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'threads') {\n                this.threadsRequest(response, request);\n            }\n            else if (request.command === 'terminateThreads') {\n                this.terminateThreadsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'evaluate') {\n                this.evaluateRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepInTargets') {\n                this.stepInTargetsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'gotoTargets') {\n                this.gotoTargetsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'completions') {\n                this.completionsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'exceptionInfo') {\n                this.exceptionInfoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'loadedSources') {\n                this.loadedSourcesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'dataBreakpointInfo') {\n                this.dataBreakpointInfoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setDataBreakpoints') {\n                this.setDataBreakpointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'readMemory') {\n                this.readMemoryRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'writeMemory') {\n                this.writeMemoryRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'disassemble') {\n                this.disassembleRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'cancel') {\n                this.cancelRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'breakpointLocations') {\n                this.breakpointLocationsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setInstructionBreakpoints') {\n                this.setInstructionBreakpointsRequest(response, request.arguments, request);\n            }\n            else {\n                this.customRequest(request.command, response, request.arguments, request);\n            }\n        }\n        catch (e) {\n            this.sendErrorResponse(response, 1104, '{_stack}', { _exception: e.message, _stack: e.stack }, ErrorDestination.Telemetry);\n        }\n    }\n    initializeRequest(response, args) {\n        // This default debug adapter does not support conditional breakpoints.\n        response.body.supportsConditionalBreakpoints = false;\n        // This default debug adapter does not support hit conditional breakpoints.\n        response.body.supportsHitConditionalBreakpoints = false;\n        // This default debug adapter does not support function breakpoints.\n        response.body.supportsFunctionBreakpoints = false;\n        // This default debug adapter implements the 'configurationDone' request.\n        response.body.supportsConfigurationDoneRequest = true;\n        // This default debug adapter does not support hovers based on the 'evaluate' request.\n        response.body.supportsEvaluateForHovers = false;\n        // This default debug adapter does not support the 'stepBack' request.\n        response.body.supportsStepBack = false;\n        // This default debug adapter does not support the 'setVariable' request.\n        response.body.supportsSetVariable = false;\n        // This default debug adapter does not support the 'restartFrame' request.\n        response.body.supportsRestartFrame = false;\n        // This default debug adapter does not support the 'stepInTargets' request.\n        response.body.supportsStepInTargetsRequest = false;\n        // This default debug adapter does not support the 'gotoTargets' request.\n        response.body.supportsGotoTargetsRequest = false;\n        // This default debug adapter does not support the 'completions' request.\n        response.body.supportsCompletionsRequest = false;\n        // This default debug adapter does not support the 'restart' request.\n        response.body.supportsRestartRequest = false;\n        // This default debug adapter does not support the 'exceptionOptions' attribute on the 'setExceptionBreakpoints' request.\n        response.body.supportsExceptionOptions = false;\n        // This default debug adapter does not support the 'format' attribute on the 'variables', 'evaluate', and 'stackTrace' request.\n        response.body.supportsValueFormattingOptions = false;\n        // This debug adapter does not support the 'exceptionInfo' request.\n        response.body.supportsExceptionInfoRequest = false;\n        // This debug adapter does not support the 'TerminateDebuggee' attribute on the 'disconnect' request.\n        response.body.supportTerminateDebuggee = false;\n        // This debug adapter does not support delayed loading of stack frames.\n        response.body.supportsDelayedStackTraceLoading = false;\n        // This debug adapter does not support the 'loadedSources' request.\n        response.body.supportsLoadedSourcesRequest = false;\n        // This debug adapter does not support the 'logMessage' attribute of the SourceBreakpoint.\n        response.body.supportsLogPoints = false;\n        // This debug adapter does not support the 'terminateThreads' request.\n        response.body.supportsTerminateThreadsRequest = false;\n        // This debug adapter does not support the 'setExpression' request.\n        response.body.supportsSetExpression = false;\n        // This debug adapter does not support the 'terminate' request.\n        response.body.supportsTerminateRequest = false;\n        // This debug adapter does not support data breakpoints.\n        response.body.supportsDataBreakpoints = false;\n        /** This debug adapter does not support the 'readMemory' request. */\n        response.body.supportsReadMemoryRequest = false;\n        /** The debug adapter does not support the 'disassemble' request. */\n        response.body.supportsDisassembleRequest = false;\n        /** The debug adapter does not support the 'cancel' request. */\n        response.body.supportsCancelRequest = false;\n        /** The debug adapter does not support the 'breakpointLocations' request. */\n        response.body.supportsBreakpointLocationsRequest = false;\n        /** The debug adapter does not support the 'clipboard' context value in the 'evaluate' request. */\n        response.body.supportsClipboardContext = false;\n        /** The debug adapter does not support stepping granularities for the stepping requests. */\n        response.body.supportsSteppingGranularity = false;\n        /** The debug adapter does not support the 'setInstructionBreakpoints' request. */\n        response.body.supportsInstructionBreakpoints = false;\n        /** The debug adapter does not support 'filterOptions' on the 'setExceptionBreakpoints' request. */\n        response.body.supportsExceptionFilterOptions = false;\n        this.sendResponse(response);\n    }\n    disconnectRequest(response, args, request) {\n        this.sendResponse(response);\n        this.shutdown();\n    }\n    launchRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    attachRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    terminateRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    restartRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setFunctionBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setExceptionBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    configurationDoneRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    continueRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    nextRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepInRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepOutRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepBackRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    reverseContinueRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    restartFrameRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    gotoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    pauseRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    sourceRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    threadsRequest(response, request) {\n        this.sendResponse(response);\n    }\n    terminateThreadsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stackTraceRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    scopesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    variablesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setVariableRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setExpressionRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    evaluateRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepInTargetsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    gotoTargetsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    completionsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    exceptionInfoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    loadedSourcesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    dataBreakpointInfoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setDataBreakpointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    readMemoryRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    writeMemoryRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    disassembleRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    cancelRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    breakpointLocationsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setInstructionBreakpointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    /**\n     * Override this hook to implement custom requests.\n     */\n    customRequest(command, response, args, request) {\n        this.sendErrorResponse(response, 1014, 'unrecognized request', null, ErrorDestination.Telemetry);\n    }\n    //---- protected -------------------------------------------------------------------------------------------------\n    convertClientLineToDebugger(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line + 1;\n        }\n        return this._clientLinesStartAt1 ? line - 1 : line;\n    }\n    convertDebuggerLineToClient(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line - 1;\n        }\n        return this._clientLinesStartAt1 ? line + 1 : line;\n    }\n    convertClientColumnToDebugger(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column + 1;\n        }\n        return this._clientColumnsStartAt1 ? column - 1 : column;\n    }\n    convertDebuggerColumnToClient(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column - 1;\n        }\n        return this._clientColumnsStartAt1 ? column + 1 : column;\n    }\n    convertClientPathToDebugger(clientPath) {\n        if (this._clientPathsAreURIs !== this._debuggerPathsAreURIs) {\n            if (this._clientPathsAreURIs) {\n                return DebugSession.uri2path(clientPath);\n            }\n            else {\n                return DebugSession.path2uri(clientPath);\n            }\n        }\n        return clientPath;\n    }\n    convertDebuggerPathToClient(debuggerPath) {\n        if (this._debuggerPathsAreURIs !== this._clientPathsAreURIs) {\n            if (this._debuggerPathsAreURIs) {\n                return DebugSession.uri2path(debuggerPath);\n            }\n            else {\n                return DebugSession.path2uri(debuggerPath);\n            }\n        }\n        return debuggerPath;\n    }\n    //---- private -------------------------------------------------------------------------------\n    static path2uri(path) {\n        if (process.platform === 'win32') {\n            if (/^[A-Z]:/.test(path)) {\n                path = path[0].toLowerCase() + path.substr(1);\n            }\n            path = path.replace(/\\\\/g, '/');\n        }\n        path = encodeURI(path);\n        let uri = new url_1.URL(`file:`); // ignore 'path' for now\n        uri.pathname = path; // now use 'path' to get the correct percent encoding (see https://url.spec.whatwg.org)\n        return uri.toString();\n    }\n    static uri2path(sourceUri) {\n        let uri = new url_1.URL(sourceUri);\n        let s = decodeURIComponent(uri.pathname);\n        if (process.platform === 'win32') {\n            if (/^\\/[a-zA-Z]:/.test(s)) {\n                s = s[1].toLowerCase() + s.substr(2);\n            }\n            s = s.replace(/\\//g, '\\\\');\n        }\n        return s;\n    }\n    /*\n    * If argument starts with '_' it is OK to send its value to telemetry.\n    */\n    static formatPII(format, excludePII, args) {\n        return format.replace(DebugSession._formatPIIRegexp, function (match, paramName) {\n            if (excludePII && paramName.length > 0 && paramName[0] !== '_') {\n                return match;\n            }\n            return args[paramName] && args.hasOwnProperty(paramName) ?\n                args[paramName] :\n                match;\n        });\n    }\n}\nexports.DebugSession = DebugSession;\nDebugSession._formatPIIRegexp = /{([^}]+)}/g;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handles = void 0;\nclass Handles {\n    constructor(startHandle) {\n        this.START_HANDLE = 1000;\n        this._handleMap = new Map();\n        this._nextHandle = typeof startHandle === 'number' ? startHandle : this.START_HANDLE;\n    }\n    reset() {\n        this._nextHandle = this.START_HANDLE;\n        this._handleMap = new Map();\n    }\n    create(value) {\n        var handle = this._nextHandle++;\n        this._handleMap.set(handle, value);\n        return handle;\n    }\n    get(handle, dflt) {\n        return this._handleMap.get(handle) || dflt;\n    }\n}\nexports.Handles = Handles;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9oYW5kbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7O0FBRWhHLE1BQWEsT0FBTztJQU9uQixZQUFtQixXQUFvQjtRQUwvQixpQkFBWSxHQUFHLElBQUksQ0FBQztRQUdwQixlQUFVLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztRQUd6QyxJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sV0FBVyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3RGLENBQUM7SUFFTSxLQUFLO1FBQ1gsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztJQUN4QyxDQUFDO0lBRU0sTUFBTSxDQUFDLEtBQVE7UUFDckIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNuQyxPQUFPLE1BQU0sQ0FBQztJQUNmLENBQUM7SUFFTSxHQUFHLENBQUMsTUFBYyxFQUFFLElBQVE7UUFDbEMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUM7SUFDNUMsQ0FBQztDQUNEO0FBekJELDBCQXlCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5leHBvcnQgY2xhc3MgSGFuZGxlczxUPiB7XG5cblx0cHJpdmF0ZSBTVEFSVF9IQU5ETEUgPSAxMDAwO1xuXG5cdHByaXZhdGUgX25leHRIYW5kbGUgOiBudW1iZXI7XG5cdHByaXZhdGUgX2hhbmRsZU1hcCA9IG5ldyBNYXA8bnVtYmVyLCBUPigpO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihzdGFydEhhbmRsZT86IG51bWJlcikge1xuXHRcdHRoaXMuX25leHRIYW5kbGUgPSB0eXBlb2Ygc3RhcnRIYW5kbGUgPT09ICdudW1iZXInID8gc3RhcnRIYW5kbGUgOiB0aGlzLlNUQVJUX0hBTkRMRTtcblx0fVxuXG5cdHB1YmxpYyByZXNldCgpOiB2b2lkIHtcblx0XHR0aGlzLl9uZXh0SGFuZGxlID0gdGhpcy5TVEFSVF9IQU5ETEU7XG5cdFx0dGhpcy5faGFuZGxlTWFwID0gbmV3IE1hcDxudW1iZXIsIFQ+KCk7XG5cdH1cblxuXHRwdWJsaWMgY3JlYXRlKHZhbHVlOiBUKTogbnVtYmVyIHtcblx0XHR2YXIgaGFuZGxlID0gdGhpcy5fbmV4dEhhbmRsZSsrO1xuXHRcdHRoaXMuX2hhbmRsZU1hcC5zZXQoaGFuZGxlLCB2YWx1ZSk7XG5cdFx0cmV0dXJuIGhhbmRsZTtcblx0fVxuXG5cdHB1YmxpYyBnZXQoaGFuZGxlOiBudW1iZXIsIGRmbHQ/OiBUKTogVCB7XG5cdFx0cmV0dXJuIHRoaXMuX2hhbmRsZU1hcC5nZXQoaGFuZGxlKSB8fCBkZmx0O1xuXHR9XG59XG4iXX0=","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalLogger = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst logger_1 = require(\"./logger\");\n/**\n * Manages logging, whether to console.log, file, or VS Code console.\n * Encapsulates the state specific to each logging session\n */\nclass InternalLogger {\n    constructor(logCallback, isServer) {\n        /** Dispose and allow exit to continue normally */\n        this.beforeExitCallback = () => this.dispose();\n        this._logCallback = logCallback;\n        this._logToConsole = isServer;\n        this._minLogLevel = logger_1.LogLevel.Warn;\n        this.disposeCallback = (signal, code) => {\n            this.dispose();\n            // Exit with 128 + value of the signal code.\n            // https://nodejs.org/api/process.html#process_exit_codes\n            code = code || 2; // SIGINT\n            code += 128;\n            process.exit(code);\n        };\n    }\n    async setup(options) {\n        this._minLogLevel = options.consoleMinLogLevel;\n        this._prependTimestamp = options.prependTimestamp;\n        // Open a log file in the specified location. Overwritten on each run.\n        if (options.logFilePath) {\n            if (!path.isAbsolute(options.logFilePath)) {\n                this.log(`logFilePath must be an absolute path: ${options.logFilePath}`, logger_1.LogLevel.Error);\n            }\n            else {\n                const handleError = (err) => this.sendLog(`Error creating log file at path: ${options.logFilePath}. Error: ${err.toString()}\\n`, logger_1.LogLevel.Error);\n                try {\n                    await fs.promises.mkdir(path.dirname(options.logFilePath), { recursive: true });\n                    this.log(`Verbose logs are written to:\\n`, logger_1.LogLevel.Warn);\n                    this.log(options.logFilePath + '\\n', logger_1.LogLevel.Warn);\n                    this._logFileStream = fs.createWriteStream(options.logFilePath);\n                    this.logDateTime();\n                    this.setupShutdownListeners();\n                    this._logFileStream.on('error', err => {\n                        handleError(err);\n                    });\n                }\n                catch (err) {\n                    handleError(err);\n                }\n            }\n        }\n    }\n    logDateTime() {\n        let d = new Date();\n        let dateString = d.getUTCFullYear() + '-' + `${d.getUTCMonth() + 1}` + '-' + d.getUTCDate();\n        const timeAndDateStamp = dateString + ', ' + getFormattedTimeString();\n        this.log(timeAndDateStamp + '\\n', logger_1.LogLevel.Verbose, false);\n    }\n    setupShutdownListeners() {\n        process.on('beforeExit', this.beforeExitCallback);\n        process.on('SIGTERM', this.disposeCallback);\n        process.on('SIGINT', this.disposeCallback);\n    }\n    removeShutdownListeners() {\n        process.removeListener('beforeExit', this.beforeExitCallback);\n        process.removeListener('SIGTERM', this.disposeCallback);\n        process.removeListener('SIGINT', this.disposeCallback);\n    }\n    dispose() {\n        return new Promise(resolve => {\n            this.removeShutdownListeners();\n            if (this._logFileStream) {\n                this._logFileStream.end(resolve);\n                this._logFileStream = null;\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    log(msg, level, prependTimestamp = true) {\n        if (this._minLogLevel === logger_1.LogLevel.Stop) {\n            return;\n        }\n        if (level >= this._minLogLevel) {\n            this.sendLog(msg, level);\n        }\n        if (this._logToConsole) {\n            const logFn = level === logger_1.LogLevel.Error ? console.error :\n                level === logger_1.LogLevel.Warn ? console.warn :\n                    null;\n            if (logFn) {\n                logFn((0, logger_1.trimLastNewline)(msg));\n            }\n        }\n        // If an error, prepend with '[Error]'\n        if (level === logger_1.LogLevel.Error) {\n            msg = `[${logger_1.LogLevel[level]}] ${msg}`;\n        }\n        if (this._prependTimestamp && prependTimestamp) {\n            msg = '[' + getFormattedTimeString() + '] ' + msg;\n        }\n        if (this._logFileStream) {\n            this._logFileStream.write(msg);\n        }\n    }\n    sendLog(msg, level) {\n        // Truncate long messages, they can hang VS Code\n        if (msg.length > 1500) {\n            const endsInNewline = !!msg.match(/(\\n|\\r\\n)$/);\n            msg = msg.substr(0, 1500) + '[...]';\n            if (endsInNewline) {\n                msg = msg + '\\n';\n            }\n        }\n        if (this._logCallback) {\n            const event = new logger_1.LogOutputEvent(msg, level);\n            this._logCallback(event);\n        }\n    }\n}\nexports.InternalLogger = InternalLogger;\nfunction getFormattedTimeString() {\n    let d = new Date();\n    let hourString = _padZeroes(2, String(d.getUTCHours()));\n    let minuteString = _padZeroes(2, String(d.getUTCMinutes()));\n    let secondString = _padZeroes(2, String(d.getUTCSeconds()));\n    let millisecondString = _padZeroes(3, String(d.getUTCMilliseconds()));\n    return hourString + ':' + minuteString + ':' + secondString + '.' + millisecondString + ' UTC';\n}\nfunction _padZeroes(minDesiredLength, numberToPad) {\n    if (numberToPad.length >= minDesiredLength) {\n        return numberToPad;\n    }\n    else {\n        return String('0'.repeat(minDesiredLength) + numberToPad).slice(-minDesiredLength);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimLastNewline = exports.LogOutputEvent = exports.logger = exports.Logger = exports.LogLevel = void 0;\nconst internalLogger_1 = require(\"./internalLogger\");\nconst debugSession_1 = require(\"./debugSession\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Log\"] = 1] = \"Log\";\n    LogLevel[LogLevel[\"Warn\"] = 2] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Stop\"] = 4] = \"Stop\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nclass Logger {\n    constructor() {\n        this._pendingLogQ = [];\n    }\n    log(msg, level = LogLevel.Log) {\n        msg = msg + '\\n';\n        this._write(msg, level);\n    }\n    verbose(msg) {\n        this.log(msg, LogLevel.Verbose);\n    }\n    warn(msg) {\n        this.log(msg, LogLevel.Warn);\n    }\n    error(msg) {\n        this.log(msg, LogLevel.Error);\n    }\n    dispose() {\n        if (this._currentLogger) {\n            const disposeP = this._currentLogger.dispose();\n            this._currentLogger = null;\n            return disposeP;\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * `log` adds a newline, `write` doesn't\n     */\n    _write(msg, level = LogLevel.Log) {\n        // [null, undefined] => string\n        msg = msg + '';\n        if (this._pendingLogQ) {\n            this._pendingLogQ.push({ msg, level });\n        }\n        else if (this._currentLogger) {\n            this._currentLogger.log(msg, level);\n        }\n    }\n    /**\n     * Set the logger's minimum level to log in the console, and whether to log to the file. Log messages are queued before this is\n     * called the first time, because minLogLevel defaults to Warn.\n     */\n    setup(consoleMinLogLevel, _logFilePath, prependTimestamp = true) {\n        const logFilePath = typeof _logFilePath === 'string' ?\n            _logFilePath :\n            (_logFilePath && this._logFilePathFromInit);\n        if (this._currentLogger) {\n            const options = {\n                consoleMinLogLevel,\n                logFilePath,\n                prependTimestamp\n            };\n            this._currentLogger.setup(options).then(() => {\n                // Now that we have a minimum logLevel, we can clear out the queue of pending messages\n                if (this._pendingLogQ) {\n                    const logQ = this._pendingLogQ;\n                    this._pendingLogQ = null;\n                    logQ.forEach(item => this._write(item.msg, item.level));\n                }\n            });\n        }\n    }\n    init(logCallback, logFilePath, logToConsole) {\n        // Re-init, create new global Logger\n        this._pendingLogQ = this._pendingLogQ || [];\n        this._currentLogger = new internalLogger_1.InternalLogger(logCallback, logToConsole);\n        this._logFilePathFromInit = logFilePath;\n    }\n}\nexports.Logger = Logger;\nexports.logger = new Logger();\nclass LogOutputEvent extends debugSession_1.OutputEvent {\n    constructor(msg, level) {\n        const category = level === LogLevel.Error ? 'stderr' :\n            level === LogLevel.Warn ? 'console' :\n                'stdout';\n        super(msg, category);\n    }\n}\nexports.LogOutputEvent = LogOutputEvent;\nfunction trimLastNewline(str) {\n    return str.replace(/(\\n|\\r\\n)$/, '');\n}\nexports.trimLastNewline = trimLastNewline;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingDebugSession = void 0;\nconst Logger = require(\"./logger\");\nconst logger = Logger.logger;\nconst debugSession_1 = require(\"./debugSession\");\nclass LoggingDebugSession extends debugSession_1.DebugSession {\n    constructor(obsolete_logFilePath, obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer);\n        this.obsolete_logFilePath = obsolete_logFilePath;\n        this.on('error', (event) => {\n            logger.error(event.body);\n        });\n    }\n    start(inStream, outStream) {\n        super.start(inStream, outStream);\n        logger.init(e => this.sendEvent(e), this.obsolete_logFilePath, this._isServer);\n    }\n    /**\n     * Overload sendEvent to log\n     */\n    sendEvent(event) {\n        if (!(event instanceof Logger.LogOutputEvent)) {\n            // Don't create an infinite loop...\n            let objectToLog = event;\n            if (event instanceof debugSession_1.OutputEvent && event.body && event.body.data && event.body.data.doNotLogOutput) {\n                delete event.body.data.doNotLogOutput;\n                objectToLog = { ...event };\n                objectToLog.body = { ...event.body, output: '<output not logged>' };\n            }\n            logger.verbose(`To client: ${JSON.stringify(objectToLog)}`);\n        }\n        super.sendEvent(event);\n    }\n    /**\n     * Overload sendRequest to log\n     */\n    sendRequest(command, args, timeout, cb) {\n        logger.verbose(`To client: ${JSON.stringify(command)}(${JSON.stringify(args)}), timeout: ${timeout}`);\n        super.sendRequest(command, args, timeout, cb);\n    }\n    /**\n     * Overload sendResponse to log\n     */\n    sendResponse(response) {\n        logger.verbose(`To client: ${JSON.stringify(response)}`);\n        super.sendResponse(response);\n    }\n    dispatchRequest(request) {\n        logger.verbose(`From client: ${request.command}(${JSON.stringify(request.arguments)})`);\n        super.dispatchRequest(request);\n    }\n}\nexports.LoggingDebugSession = LoggingDebugSession;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZ0RlYnVnU2Vzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnaW5nRGVidWdTZXNzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7O0FBSWhHLG1DQUFtQztBQUNuQyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQzdCLGlEQUF5RDtBQUV6RCxNQUFhLG1CQUFvQixTQUFRLDJCQUFZO0lBQ3BELFlBQTJCLG9CQUE2QixFQUFFLHdDQUFrRCxFQUFFLGlCQUEyQjtRQUN4SSxLQUFLLENBQUMsd0NBQXdDLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUR6Qyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQVM7UUFHdkQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUEwQixFQUFFLEVBQUU7WUFDL0MsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQStCLEVBQUUsU0FBZ0M7UUFDN0UsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNoRixDQUFDO0lBRUQ7O09BRUc7SUFDSSxTQUFTLENBQUMsS0FBMEI7UUFDMUMsSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBRTtZQUM5QyxtQ0FBbUM7WUFFbkMsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFDO1lBQ3hCLElBQUksS0FBSyxZQUFZLDBCQUFXLElBQUksS0FBSyxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUU7Z0JBQ3BHLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO2dCQUN0QyxXQUFXLEdBQUcsRUFBRSxHQUFHLEtBQUssRUFBRSxDQUFDO2dCQUMzQixXQUFXLENBQUMsSUFBSSxHQUFHLEVBQUUsR0FBRyxLQUFLLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxxQkFBcUIsRUFBRSxDQUFBO2FBQ25FO1lBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzVEO1FBRUQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRUQ7O09BRUc7SUFDSSxXQUFXLENBQUMsT0FBZSxFQUFFLElBQVMsRUFBRSxPQUFlLEVBQUUsRUFBOEM7UUFDN0csTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3RHLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVEOztPQUVHO0lBQ0ksWUFBWSxDQUFDLFFBQWdDO1FBQ25ELE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBYyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6RCxLQUFLLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFUyxlQUFlLENBQUMsT0FBOEI7UUFDdkQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsT0FBTyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUUsR0FBRyxDQUFDLENBQUM7UUFDekYsS0FBSyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0Q7QUF0REQsa0RBc0RDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7RGVidWdQcm90b2NvbH0gZnJvbSAnQHZzY29kZS9kZWJ1Z3Byb3RvY29sJztcblxuaW1wb3J0ICogYXMgTG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcbmNvbnN0IGxvZ2dlciA9IExvZ2dlci5sb2dnZXI7XG5pbXBvcnQge0RlYnVnU2Vzc2lvbiwgT3V0cHV0RXZlbnR9IGZyb20gJy4vZGVidWdTZXNzaW9uJztcblxuZXhwb3J0IGNsYXNzIExvZ2dpbmdEZWJ1Z1Nlc3Npb24gZXh0ZW5kcyBEZWJ1Z1Nlc3Npb24ge1xuXHRwdWJsaWMgY29uc3RydWN0b3IocHJpdmF0ZSBvYnNvbGV0ZV9sb2dGaWxlUGF0aD86IHN0cmluZywgb2Jzb2xldGVfZGVidWdnZXJMaW5lc0FuZENvbHVtbnNTdGFydEF0MT86IGJvb2xlYW4sIG9ic29sZXRlX2lzU2VydmVyPzogYm9vbGVhbikge1xuXHRcdHN1cGVyKG9ic29sZXRlX2RlYnVnZ2VyTGluZXNBbmRDb2x1bW5zU3RhcnRBdDEsIG9ic29sZXRlX2lzU2VydmVyKTtcblxuXHRcdHRoaXMub24oJ2Vycm9yJywgKGV2ZW50OiBEZWJ1Z1Byb3RvY29sLkV2ZW50KSA9PiB7XG5cdFx0XHRsb2dnZXIuZXJyb3IoZXZlbnQuYm9keSk7XG5cdFx0fSk7XG5cdH1cblxuXHRwdWJsaWMgc3RhcnQoaW5TdHJlYW06IE5vZGVKUy5SZWFkYWJsZVN0cmVhbSwgb3V0U3RyZWFtOiBOb2RlSlMuV3JpdGFibGVTdHJlYW0pOiB2b2lkIHtcblx0XHRzdXBlci5zdGFydChpblN0cmVhbSwgb3V0U3RyZWFtKTtcblx0XHRsb2dnZXIuaW5pdChlID0+IHRoaXMuc2VuZEV2ZW50KGUpLCB0aGlzLm9ic29sZXRlX2xvZ0ZpbGVQYXRoLCB0aGlzLl9pc1NlcnZlcik7XG5cdH1cblxuXHQvKipcblx0ICogT3ZlcmxvYWQgc2VuZEV2ZW50IHRvIGxvZ1xuXHQgKi9cblx0cHVibGljIHNlbmRFdmVudChldmVudDogRGVidWdQcm90b2NvbC5FdmVudCk6IHZvaWQge1xuXHRcdGlmICghKGV2ZW50IGluc3RhbmNlb2YgTG9nZ2VyLkxvZ091dHB1dEV2ZW50KSkge1xuXHRcdFx0Ly8gRG9uJ3QgY3JlYXRlIGFuIGluZmluaXRlIGxvb3AuLi5cblxuXHRcdFx0bGV0IG9iamVjdFRvTG9nID0gZXZlbnQ7XG5cdFx0XHRpZiAoZXZlbnQgaW5zdGFuY2VvZiBPdXRwdXRFdmVudCAmJiBldmVudC5ib2R5ICYmIGV2ZW50LmJvZHkuZGF0YSAmJiBldmVudC5ib2R5LmRhdGEuZG9Ob3RMb2dPdXRwdXQpIHtcblx0XHRcdFx0ZGVsZXRlIGV2ZW50LmJvZHkuZGF0YS5kb05vdExvZ091dHB1dDtcblx0XHRcdFx0b2JqZWN0VG9Mb2cgPSB7IC4uLmV2ZW50IH07XG5cdFx0XHRcdG9iamVjdFRvTG9nLmJvZHkgPSB7IC4uLmV2ZW50LmJvZHksIG91dHB1dDogJzxvdXRwdXQgbm90IGxvZ2dlZD4nIH1cblx0XHRcdH1cblxuXHRcdFx0bG9nZ2VyLnZlcmJvc2UoYFRvIGNsaWVudDogJHtKU09OLnN0cmluZ2lmeShvYmplY3RUb0xvZyl9YCk7XG5cdFx0fVxuXG5cdFx0c3VwZXIuc2VuZEV2ZW50KGV2ZW50KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBPdmVybG9hZCBzZW5kUmVxdWVzdCB0byBsb2dcblx0ICovXG5cdHB1YmxpYyBzZW5kUmVxdWVzdChjb21tYW5kOiBzdHJpbmcsIGFyZ3M6IGFueSwgdGltZW91dDogbnVtYmVyLCBjYjogKHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlJlc3BvbnNlKSA9PiB2b2lkKTogdm9pZCB7XG5cdFx0bG9nZ2VyLnZlcmJvc2UoYFRvIGNsaWVudDogJHtKU09OLnN0cmluZ2lmeShjb21tYW5kKX0oJHtKU09OLnN0cmluZ2lmeShhcmdzKX0pLCB0aW1lb3V0OiAke3RpbWVvdXR9YCk7XG5cdFx0c3VwZXIuc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncywgdGltZW91dCwgY2IpO1xuXHR9XG5cblx0LyoqXG5cdCAqIE92ZXJsb2FkIHNlbmRSZXNwb25zZSB0byBsb2dcblx0ICovXG5cdHB1YmxpYyBzZW5kUmVzcG9uc2UocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuUmVzcG9uc2UpOiB2b2lkIHtcblx0XHRsb2dnZXIudmVyYm9zZShgVG8gY2xpZW50OiAke0pTT04uc3RyaW5naWZ5KHJlc3BvbnNlKX1gKTtcblx0XHRzdXBlci5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIGRpc3BhdGNoUmVxdWVzdChyZXF1ZXN0OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHRsb2dnZXIudmVyYm9zZShgRnJvbSBjbGllbnQ6ICR7cmVxdWVzdC5jb21tYW5kfSgke0pTT04uc3RyaW5naWZ5KHJlcXVlc3QuYXJndW1lbnRzKSB9KWApO1xuXHRcdHN1cGVyLmRpc3BhdGNoUmVxdWVzdChyZXF1ZXN0KTtcblx0fVxufVxuIl19","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handles = exports.Response = exports.Event = exports.ErrorDestination = exports.CompletionItem = exports.Module = exports.Source = exports.Breakpoint = exports.Variable = exports.Scope = exports.StackFrame = exports.Thread = exports.MemoryEvent = exports.InvalidatedEvent = exports.ProgressEndEvent = exports.ProgressUpdateEvent = exports.ProgressStartEvent = exports.CapabilitiesEvent = exports.LoadedSourceEvent = exports.ModuleEvent = exports.BreakpointEvent = exports.ThreadEvent = exports.OutputEvent = exports.ContinuedEvent = exports.StoppedEvent = exports.ExitedEvent = exports.TerminatedEvent = exports.InitializedEvent = exports.logger = exports.Logger = exports.LoggingDebugSession = exports.DebugSession = void 0;\nconst debugSession_1 = require(\"./debugSession\");\nObject.defineProperty(exports, \"DebugSession\", { enumerable: true, get: function () { return debugSession_1.DebugSession; } });\nObject.defineProperty(exports, \"InitializedEvent\", { enumerable: true, get: function () { return debugSession_1.InitializedEvent; } });\nObject.defineProperty(exports, \"TerminatedEvent\", { enumerable: true, get: function () { return debugSession_1.TerminatedEvent; } });\nObject.defineProperty(exports, \"ExitedEvent\", { enumerable: true, get: function () { return debugSession_1.ExitedEvent; } });\nObject.defineProperty(exports, \"StoppedEvent\", { enumerable: true, get: function () { return debugSession_1.StoppedEvent; } });\nObject.defineProperty(exports, \"ContinuedEvent\", { enumerable: true, get: function () { return debugSession_1.ContinuedEvent; } });\nObject.defineProperty(exports, \"OutputEvent\", { enumerable: true, get: function () { return debugSession_1.OutputEvent; } });\nObject.defineProperty(exports, \"ThreadEvent\", { enumerable: true, get: function () { return debugSession_1.ThreadEvent; } });\nObject.defineProperty(exports, \"BreakpointEvent\", { enumerable: true, get: function () { return debugSession_1.BreakpointEvent; } });\nObject.defineProperty(exports, \"ModuleEvent\", { enumerable: true, get: function () { return debugSession_1.ModuleEvent; } });\nObject.defineProperty(exports, \"LoadedSourceEvent\", { enumerable: true, get: function () { return debugSession_1.LoadedSourceEvent; } });\nObject.defineProperty(exports, \"CapabilitiesEvent\", { enumerable: true, get: function () { return debugSession_1.CapabilitiesEvent; } });\nObject.defineProperty(exports, \"ProgressStartEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressStartEvent; } });\nObject.defineProperty(exports, \"ProgressUpdateEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressUpdateEvent; } });\nObject.defineProperty(exports, \"ProgressEndEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressEndEvent; } });\nObject.defineProperty(exports, \"InvalidatedEvent\", { enumerable: true, get: function () { return debugSession_1.InvalidatedEvent; } });\nObject.defineProperty(exports, \"MemoryEvent\", { enumerable: true, get: function () { return debugSession_1.MemoryEvent; } });\nObject.defineProperty(exports, \"Thread\", { enumerable: true, get: function () { return debugSession_1.Thread; } });\nObject.defineProperty(exports, \"StackFrame\", { enumerable: true, get: function () { return debugSession_1.StackFrame; } });\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return debugSession_1.Scope; } });\nObject.defineProperty(exports, \"Variable\", { enumerable: true, get: function () { return debugSession_1.Variable; } });\nObject.defineProperty(exports, \"Breakpoint\", { enumerable: true, get: function () { return debugSession_1.Breakpoint; } });\nObject.defineProperty(exports, \"Source\", { enumerable: true, get: function () { return debugSession_1.Source; } });\nObject.defineProperty(exports, \"Module\", { enumerable: true, get: function () { return debugSession_1.Module; } });\nObject.defineProperty(exports, \"CompletionItem\", { enumerable: true, get: function () { return debugSession_1.CompletionItem; } });\nObject.defineProperty(exports, \"ErrorDestination\", { enumerable: true, get: function () { return debugSession_1.ErrorDestination; } });\nconst loggingDebugSession_1 = require(\"./loggingDebugSession\");\nObject.defineProperty(exports, \"LoggingDebugSession\", { enumerable: true, get: function () { return loggingDebugSession_1.LoggingDebugSession; } });\nconst Logger = require(\"./logger\");\nexports.Logger = Logger;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return messages_1.Event; } });\nObject.defineProperty(exports, \"Response\", { enumerable: true, get: function () { return messages_1.Response; } });\nconst handles_1 = require(\"./handles\");\nObject.defineProperty(exports, \"Handles\", { enumerable: true, get: function () { return handles_1.Handles; } });\nconst logger = Logger.logger;\nexports.logger = logger;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHO0FBQ2hHLFlBQVksQ0FBQzs7O0FBRWIsaURBT3dCO0FBU3ZCLDZGQWZBLDJCQUFZLE9BZUE7QUFJWixpR0FsQkEsK0JBQWdCLE9Ba0JBO0FBQUUsZ0dBbEJBLDhCQUFlLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsNkZBbEJBLDJCQUFZLE9Ba0JBO0FBQUUsK0ZBbEJBLDZCQUFjLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsZ0dBbEJBLDhCQUFlLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQ25JLGtHQWxCQSxnQ0FBaUIsT0FrQkE7QUFBRSxrR0FsQkEsZ0NBQWlCLE9Ba0JBO0FBQUUsbUdBbEJBLGlDQUFrQixPQWtCQTtBQUFFLG9HQWxCQSxrQ0FBbUIsT0FrQkE7QUFBRSxpR0FsQkEsK0JBQWdCLE9Ba0JBO0FBQUUsaUdBbEJBLCtCQUFnQixPQWtCQTtBQUFFLDRGQWxCQSwwQkFBVyxPQWtCQTtBQUMvSCx1RkFsQkEscUJBQU0sT0FrQkE7QUFBRSwyRkFsQkEseUJBQVUsT0FrQkE7QUFBRSxzRkFsQkEsb0JBQUssT0FrQkE7QUFBRSx5RkFsQkEsdUJBQVEsT0FrQkE7QUFDbkMsMkZBbEJBLHlCQUFVLE9Ba0JBO0FBQUUsdUZBbEJBLHFCQUFNLE9Ba0JBO0FBQUUsdUZBbEJBLHFCQUFNLE9Ba0JBO0FBQUUsK0ZBbEJBLDZCQUFjLE9Ba0JBO0FBQzFDLGlHQWxCQSwrQkFBZ0IsT0FrQkE7QUFoQmpCLCtEQUEwRDtBQVN6RCxvR0FUTyx5Q0FBbUIsT0FTUDtBQVJwQixtQ0FBbUM7QUFTbEMsd0JBQU07QUFSUCx5Q0FBNkM7QUFlNUMsc0ZBZlEsZ0JBQUssT0FlUjtBQUFFLHlGQWZRLG1CQUFRLE9BZVI7QUFkaEIsdUNBQW9DO0FBZW5DLHdGQWZRLGlCQUFPLE9BZVI7QUFiUixNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBTTVCLHdCQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQge1xuXHREZWJ1Z1Nlc3Npb24sXG5cdEluaXRpYWxpemVkRXZlbnQsIFRlcm1pbmF0ZWRFdmVudCwgRXhpdGVkRXZlbnQsIFN0b3BwZWRFdmVudCwgQ29udGludWVkRXZlbnQsIE91dHB1dEV2ZW50LCBUaHJlYWRFdmVudCwgQnJlYWtwb2ludEV2ZW50LCBNb2R1bGVFdmVudCxcblx0XHRMb2FkZWRTb3VyY2VFdmVudCwgQ2FwYWJpbGl0aWVzRXZlbnQsIFByb2dyZXNzU3RhcnRFdmVudCwgUHJvZ3Jlc3NVcGRhdGVFdmVudCwgUHJvZ3Jlc3NFbmRFdmVudCwgSW52YWxpZGF0ZWRFdmVudCwgTWVtb3J5RXZlbnQsXG5cdFRocmVhZCwgU3RhY2tGcmFtZSwgU2NvcGUsIFZhcmlhYmxlLFxuXHRCcmVha3BvaW50LCBTb3VyY2UsIE1vZHVsZSwgQ29tcGxldGlvbkl0ZW0sXG5cdEVycm9yRGVzdGluYXRpb25cbn0gZnJvbSAnLi9kZWJ1Z1Nlc3Npb24nO1xuaW1wb3J0IHtMb2dnaW5nRGVidWdTZXNzaW9ufSBmcm9tICcuL2xvZ2dpbmdEZWJ1Z1Nlc3Npb24nO1xuaW1wb3J0ICogYXMgTG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcbmltcG9ydCB7IEV2ZW50LCBSZXNwb25zZSB9IGZyb20gJy4vbWVzc2FnZXMnO1xuaW1wb3J0IHsgSGFuZGxlcyB9IGZyb20gJy4vaGFuZGxlcyc7XG5cbmNvbnN0IGxvZ2dlciA9IExvZ2dlci5sb2dnZXI7XG5cbmV4cG9ydCB7XG5cdERlYnVnU2Vzc2lvbixcblx0TG9nZ2luZ0RlYnVnU2Vzc2lvbixcblx0TG9nZ2VyLFxuXHRsb2dnZXIsXG5cdEluaXRpYWxpemVkRXZlbnQsIFRlcm1pbmF0ZWRFdmVudCwgRXhpdGVkRXZlbnQsIFN0b3BwZWRFdmVudCwgQ29udGludWVkRXZlbnQsIE91dHB1dEV2ZW50LCBUaHJlYWRFdmVudCwgQnJlYWtwb2ludEV2ZW50LCBNb2R1bGVFdmVudCxcblx0XHRMb2FkZWRTb3VyY2VFdmVudCwgQ2FwYWJpbGl0aWVzRXZlbnQsIFByb2dyZXNzU3RhcnRFdmVudCwgUHJvZ3Jlc3NVcGRhdGVFdmVudCwgUHJvZ3Jlc3NFbmRFdmVudCwgSW52YWxpZGF0ZWRFdmVudCwgTWVtb3J5RXZlbnQsXG5cdFRocmVhZCwgU3RhY2tGcmFtZSwgU2NvcGUsIFZhcmlhYmxlLFxuXHRCcmVha3BvaW50LCBTb3VyY2UsIE1vZHVsZSwgQ29tcGxldGlvbkl0ZW0sXG5cdEVycm9yRGVzdGluYXRpb24sXG5cdEV2ZW50LCBSZXNwb25zZSxcblx0SGFuZGxlc1xufVxuIl19","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Event = exports.Response = exports.Message = void 0;\nclass Message {\n    constructor(type) {\n        this.seq = 0;\n        this.type = type;\n    }\n}\nexports.Message = Message;\nclass Response extends Message {\n    constructor(request, message) {\n        super('response');\n        this.request_seq = request.seq;\n        this.command = request.command;\n        if (message) {\n            this.success = false;\n            this.message = message;\n        }\n        else {\n            this.success = true;\n        }\n    }\n}\nexports.Response = Response;\nclass Event extends Message {\n    constructor(event, body) {\n        super('event');\n        this.event = event;\n        if (body) {\n            this.body = body;\n        }\n    }\n}\nexports.Event = Event;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbWVzc2FnZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Z0dBR2dHOzs7QUFLaEcsTUFBYSxPQUFPO0lBSW5CLFlBQW1CLElBQVk7UUFDOUIsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBQ0Q7QUFSRCwwQkFRQztBQUVELE1BQWEsUUFBUyxTQUFRLE9BQU87SUFLcEMsWUFBbUIsT0FBOEIsRUFBRSxPQUFnQjtRQUNsRSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQy9CLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUMvQixJQUFJLE9BQU8sRUFBRTtZQUNaLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQ2YsSUFBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7U0FDOUI7YUFBTTtZQUNOLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1NBQ3BCO0lBQ0YsQ0FBQztDQUNEO0FBaEJELDRCQWdCQztBQUVELE1BQWEsS0FBTSxTQUFRLE9BQU87SUFHakMsWUFBbUIsS0FBYSxFQUFFLElBQVU7UUFDM0MsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxJQUFJLEVBQUU7WUFDSCxJQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUN4QjtJQUNGLENBQUM7Q0FDRDtBQVZELHNCQVVDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7IERlYnVnUHJvdG9jb2wgfSBmcm9tICdAdnNjb2RlL2RlYnVncHJvdG9jb2wnO1xuXG5cbmV4cG9ydCBjbGFzcyBNZXNzYWdlIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5Qcm90b2NvbE1lc3NhZ2Uge1xuXHRzZXE6IG51bWJlcjtcblx0dHlwZTogc3RyaW5nO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3Rvcih0eXBlOiBzdHJpbmcpIHtcblx0XHR0aGlzLnNlcSA9IDA7XG5cdFx0dGhpcy50eXBlID0gdHlwZTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgUmVzcG9uc2UgZXh0ZW5kcyBNZXNzYWdlIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5SZXNwb25zZSB7XG5cdHJlcXVlc3Rfc2VxOiBudW1iZXI7XG5cdHN1Y2Nlc3M6IGJvb2xlYW47XG5cdGNvbW1hbmQ6IHN0cmluZztcblxuXHRwdWJsaWMgY29uc3RydWN0b3IocmVxdWVzdDogRGVidWdQcm90b2NvbC5SZXF1ZXN0LCBtZXNzYWdlPzogc3RyaW5nKSB7XG5cdFx0c3VwZXIoJ3Jlc3BvbnNlJyk7XG5cdFx0dGhpcy5yZXF1ZXN0X3NlcSA9IHJlcXVlc3Quc2VxO1xuXHRcdHRoaXMuY29tbWFuZCA9IHJlcXVlc3QuY29tbWFuZDtcblx0XHRpZiAobWVzc2FnZSkge1xuXHRcdFx0dGhpcy5zdWNjZXNzID0gZmFsc2U7XG5cdFx0XHQoPGFueT50aGlzKS5tZXNzYWdlID0gbWVzc2FnZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5zdWNjZXNzID0gdHJ1ZTtcblx0XHR9XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIEV2ZW50IGV4dGVuZHMgTWVzc2FnZSBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuRXZlbnQge1xuXHRldmVudDogc3RyaW5nO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihldmVudDogc3RyaW5nLCBib2R5PzogYW55KSB7XG5cdFx0c3VwZXIoJ2V2ZW50Jyk7XG5cdFx0dGhpcy5ldmVudCA9IGV2ZW50O1xuXHRcdGlmIChib2R5KSB7XG5cdFx0XHQoPGFueT50aGlzKS5ib2R5ID0gYm9keTtcblx0XHR9XG5cdH1cbn1cbiJdfQ==","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolServer = void 0;\nconst ee = require(\"events\");\nconst messages_1 = require(\"./messages\");\nclass Disposable0 {\n    dispose() {\n    }\n}\nclass Emitter {\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArg) => {\n                this._listener = listener;\n                this._this = thisArg;\n                let result;\n                result = {\n                    dispose: () => {\n                        this._listener = undefined;\n                        this._this = undefined;\n                    }\n                };\n                return result;\n            };\n        }\n        return this._event;\n    }\n    fire(event) {\n        if (this._listener) {\n            try {\n                this._listener.call(this._this, event);\n            }\n            catch (e) {\n            }\n        }\n    }\n    hasListener() {\n        return !!this._listener;\n    }\n    dispose() {\n        this._listener = undefined;\n        this._this = undefined;\n    }\n}\nclass ProtocolServer extends ee.EventEmitter {\n    constructor() {\n        super();\n        this._sendMessage = new Emitter();\n        this._sequence = 1;\n        this._pendingRequests = new Map();\n        this.onDidSendMessage = this._sendMessage.event;\n    }\n    // ---- implements vscode.Debugadapter interface ---------------------------\n    dispose() {\n    }\n    handleMessage(msg) {\n        if (msg.type === 'request') {\n            this.dispatchRequest(msg);\n        }\n        else if (msg.type === 'response') {\n            const response = msg;\n            const clb = this._pendingRequests.get(response.request_seq);\n            if (clb) {\n                this._pendingRequests.delete(response.request_seq);\n                clb(response);\n            }\n        }\n    }\n    _isRunningInline() {\n        return this._sendMessage && this._sendMessage.hasListener();\n    }\n    //--------------------------------------------------------------------------\n    start(inStream, outStream) {\n        this._writableStream = outStream;\n        this._rawData = Buffer.alloc(0);\n        inStream.on('data', (data) => this._handleData(data));\n        inStream.on('close', () => {\n            this._emitEvent(new messages_1.Event('close'));\n        });\n        inStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'inStream error: ' + (error && error.message)));\n        });\n        outStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'outStream error: ' + (error && error.message)));\n        });\n        inStream.resume();\n    }\n    stop() {\n        if (this._writableStream) {\n            this._writableStream.end();\n        }\n    }\n    sendEvent(event) {\n        this._send('event', event);\n    }\n    sendResponse(response) {\n        if (response.seq > 0) {\n            console.error(`attempt to send more than one response for command ${response.command}`);\n        }\n        else {\n            this._send('response', response);\n        }\n    }\n    sendRequest(command, args, timeout, cb) {\n        const request = {\n            command: command\n        };\n        if (args && Object.keys(args).length > 0) {\n            request.arguments = args;\n        }\n        this._send('request', request);\n        if (cb) {\n            this._pendingRequests.set(request.seq, cb);\n            const timer = setTimeout(() => {\n                clearTimeout(timer);\n                const clb = this._pendingRequests.get(request.seq);\n                if (clb) {\n                    this._pendingRequests.delete(request.seq);\n                    clb(new messages_1.Response(request, 'timeout'));\n                }\n            }, timeout);\n        }\n    }\n    // ---- protected ----------------------------------------------------------\n    dispatchRequest(request) {\n    }\n    // ---- private ------------------------------------------------------------\n    _emitEvent(event) {\n        this.emit(event.event, event);\n    }\n    _send(typ, message) {\n        message.type = typ;\n        message.seq = this._sequence++;\n        if (this._writableStream) {\n            const json = JSON.stringify(message);\n            this._writableStream.write(`Content-Length: ${Buffer.byteLength(json, 'utf8')}\\r\\n\\r\\n${json}`, 'utf8');\n        }\n        this._sendMessage.fire(message);\n    }\n    _handleData(data) {\n        this._rawData = Buffer.concat([this._rawData, data]);\n        while (true) {\n            if (this._contentLength >= 0) {\n                if (this._rawData.length >= this._contentLength) {\n                    const message = this._rawData.toString('utf8', 0, this._contentLength);\n                    this._rawData = this._rawData.slice(this._contentLength);\n                    this._contentLength = -1;\n                    if (message.length > 0) {\n                        try {\n                            let msg = JSON.parse(message);\n                            this.handleMessage(msg);\n                        }\n                        catch (e) {\n                            this._emitEvent(new messages_1.Event('error', 'Error handling data: ' + (e && e.message)));\n                        }\n                    }\n                    continue; // there may be more complete messages to process\n                }\n            }\n            else {\n                const idx = this._rawData.indexOf(ProtocolServer.TWO_CRLF);\n                if (idx !== -1) {\n                    const header = this._rawData.toString('utf8', 0, idx);\n                    const lines = header.split('\\r\\n');\n                    for (let i = 0; i < lines.length; i++) {\n                        const pair = lines[i].split(/: +/);\n                        if (pair[0] == 'Content-Length') {\n                            this._contentLength = +pair[1];\n                        }\n                    }\n                    this._rawData = this._rawData.slice(idx + ProtocolServer.TWO_CRLF.length);\n                    continue;\n                }\n            }\n            break;\n        }\n    }\n}\nexports.ProtocolServer = ProtocolServer;\nProtocolServer.TWO_CRLF = '\\r\\n\\r\\n';\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runDebugAdapter = void 0;\nconst Net = require(\"net\");\nfunction runDebugAdapter(debugSession) {\n    // parse arguments\n    let port = 0;\n    const args = process.argv.slice(2);\n    args.forEach(function (val, index, array) {\n        const portMatch = /^--server=(\\d{4,5})$/.exec(val);\n        if (portMatch) {\n            port = parseInt(portMatch[1], 10);\n        }\n    });\n    if (port > 0) {\n        // start as a server\n        console.error(`waiting for debug protocol on port ${port}`);\n        Net.createServer((socket) => {\n            console.error('>> accepted connection from client');\n            socket.on('end', () => {\n                console.error('>> client connection closed\\n');\n            });\n            const session = new debugSession(false, true);\n            session.setRunAsServer(true);\n            session.start(socket, socket);\n        }).listen(port);\n    }\n    else {\n        // start a session\n        //console.error('waiting for debug protocol on stdin/stdout');\n        const session = new debugSession(false);\n        process.on('SIGTERM', () => {\n            session.shutdown();\n        });\n        session.start(process.stdin, process.stdout);\n    }\n}\nexports.runDebugAdapter = runDebugAdapter;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuRGVidWdBZGFwdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3J1bkRlYnVnQWRhcHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztnR0FHZ0c7OztBQUVoRywyQkFBMkI7QUFJM0IsU0FBZ0IsZUFBZSxDQUFDLFlBQWlDO0lBRWhFLGtCQUFrQjtJQUNsQixJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFDYixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLO1FBQ3ZDLE1BQU0sU0FBUyxHQUFHLHNCQUFzQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuRCxJQUFJLFNBQVMsRUFBRTtZQUNkLElBQUksR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ2xDO0lBQ0YsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLElBQUksR0FBRyxDQUFDLEVBQUU7UUFDYixvQkFBb0I7UUFDcEIsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUM1RCxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDM0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1lBQ3BELE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtnQkFDckIsT0FBTyxDQUFDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1lBQ2hELENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxPQUFPLEdBQUcsSUFBSSxZQUFZLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzlDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2hCO1NBQU07UUFFTixrQkFBa0I7UUFDbEIsOERBQThEO1FBQzlELE1BQU0sT0FBTyxHQUFHLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRTtZQUMxQixPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzdDO0FBQ0YsQ0FBQztBQWxDRCwwQ0FrQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuaW1wb3J0ICogYXMgTmV0IGZyb20gJ25ldCc7XG5cbmltcG9ydCB7IERlYnVnU2Vzc2lvbiB9IGZyb20gJy4vZGVidWdTZXNzaW9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bkRlYnVnQWRhcHRlcihkZWJ1Z1Nlc3Npb246IHR5cGVvZiBEZWJ1Z1Nlc3Npb24pIHtcblxuXHQvLyBwYXJzZSBhcmd1bWVudHNcblx0bGV0IHBvcnQgPSAwO1xuXHRjb25zdCBhcmdzID0gcHJvY2Vzcy5hcmd2LnNsaWNlKDIpO1xuXHRhcmdzLmZvckVhY2goZnVuY3Rpb24gKHZhbCwgaW5kZXgsIGFycmF5KSB7XG5cdFx0Y29uc3QgcG9ydE1hdGNoID0gL14tLXNlcnZlcj0oXFxkezQsNX0pJC8uZXhlYyh2YWwpO1xuXHRcdGlmIChwb3J0TWF0Y2gpIHtcblx0XHRcdHBvcnQgPSBwYXJzZUludChwb3J0TWF0Y2hbMV0sIDEwKTtcblx0XHR9XG5cdH0pO1xuXG5cdGlmIChwb3J0ID4gMCkge1xuXHRcdC8vIHN0YXJ0IGFzIGEgc2VydmVyXG5cdFx0Y29uc29sZS5lcnJvcihgd2FpdGluZyBmb3IgZGVidWcgcHJvdG9jb2wgb24gcG9ydCAke3BvcnR9YCk7XG5cdFx0TmV0LmNyZWF0ZVNlcnZlcigoc29ja2V0KSA9PiB7XG5cdFx0XHRjb25zb2xlLmVycm9yKCc+PiBhY2NlcHRlZCBjb25uZWN0aW9uIGZyb20gY2xpZW50Jyk7XG5cdFx0XHRzb2NrZXQub24oJ2VuZCcsICgpID0+IHtcblx0XHRcdFx0Y29uc29sZS5lcnJvcignPj4gY2xpZW50IGNvbm5lY3Rpb24gY2xvc2VkXFxuJyk7XG5cdFx0XHR9KTtcblx0XHRcdGNvbnN0IHNlc3Npb24gPSBuZXcgZGVidWdTZXNzaW9uKGZhbHNlLCB0cnVlKTtcblx0XHRcdHNlc3Npb24uc2V0UnVuQXNTZXJ2ZXIodHJ1ZSk7XG5cdFx0XHRzZXNzaW9uLnN0YXJ0KHNvY2tldCwgc29ja2V0KTtcblx0XHR9KS5saXN0ZW4ocG9ydCk7XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBzdGFydCBhIHNlc3Npb25cblx0XHQvL2NvbnNvbGUuZXJyb3IoJ3dhaXRpbmcgZm9yIGRlYnVnIHByb3RvY29sIG9uIHN0ZGluL3N0ZG91dCcpO1xuXHRcdGNvbnN0IHNlc3Npb24gPSBuZXcgZGVidWdTZXNzaW9uKGZhbHNlKTtcblx0XHRwcm9jZXNzLm9uKCdTSUdURVJNJywgKCkgPT4ge1xuXHRcdFx0c2Vzc2lvbi5zaHV0ZG93bigpO1xuXHRcdH0pO1xuXHRcdHNlc3Npb24uc3RhcnQocHJvY2Vzcy5zdGRpbiwgcHJvY2Vzcy5zdGRvdXQpO1xuXHR9XG59XG4iXX0=","function Subject() {\n  this.waiters = [];\n}\n\nSubject.prototype.wait = function (timeout) {\n  var self = this;\n  var waiter = {};\n  this.waiters.push(waiter);\n  var promise = new Promise(function (resolve) {\n    var resolved = false;\n    waiter.resolve = function (noRemove) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      if (waiter.timeout) {\n        clearTimeout(waiter.timeout);\n        waiter.timeout = null;\n      }\n      if (!noRemove) {\n        var pos = self.waiters.indexOf(waiter);\n        if (pos > -1) {\n          self.waiters.splice(pos, 1);\n        }\n      }\n      resolve();\n    };\n  });\n  if (timeout > 0 && isFinite(timeout)) {\n    waiter.timeout = setTimeout(function () {\n      waiter.timeout = null;\n      waiter.resolve();\n    }, timeout);\n  }\n  return promise;\n};\n\nSubject.prototype.notify = function () {\n  if (this.waiters.length > 0) {\n    this.waiters.pop().resolve(true);\n  }\n};\n\nSubject.prototype.notifyAll = function () {\n  for (var i = this.waiters.length - 1; i >= 0; i--) {\n    this.waiters[i].resolve(true);\n  }\n  this.waiters = [];\n}\n\nexports.Subject = Subject;\n","'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport { autoSpaceEnter, autoSpaceTab } from './mumpsAutospace';\r\nimport { MumpsHighlighter, SemanticTokens } from './mumpsHighlighter';\r\nimport CompletionItemProvider from './mumpsCompletionItemProvider';\r\nimport expandCompress from './mumpsCompExp';\r\nimport MumpsConfigurationProvider from './mumpsConfigurationProvider';\r\nimport MumpsDebugSession from './mumpsDebug';\r\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider';\r\nimport MumpsDocumenter from './mumpsDocumenter';\r\nimport MumpsDocumentSymbolProvider from './mumpsDocumentSymbolProvider';\r\nimport MumpsDefinitionProvider from './mumpsDefinitionProvider';\r\nimport MumpsEvalutableExpressionProvider from './mumpsEvalutableExpressionProvider';\r\nimport MumpsFoldingProvider from './mumpsFoldingProvider';\r\nimport { MumpsGlobalProvider, GlobalNode } from './mumpsGlobalProvider';\r\nimport MumpsHoverProvider from './mumpsHoverProvider';\r\nimport MumpsFormattingHelpProvider from './mumpsFormattingHelpProvider';\r\nimport MumpsReferenceProvider from './mumpsReferenceProvider';\r\nimport MumpsSignatureHelpProvider from './mumpsSignatureHelpProvider';\r\nimport MumpsRoutineSorter from './mumpsRoutineSorter';\r\nimport MumpsCodeActionProvider from './mumpsCodeActionProvider';\r\nimport * as fs from 'fs'\r\nlet timeout: ReturnType<typeof setTimeout> | undefined;\r\nconst entryRef: string | undefined = \"\";\r\nlet dbFile = \"\";\r\nlet localRoutinesPath = \"\";\r\nconst globalDirectoryProvider = MumpsGlobalProvider.getInstance();\r\nexport async function activate(context: vscode.ExtensionContext) {\r\n\tconst MUMPS_MODE: vscode.DocumentFilter = { language: 'mumps', scheme: 'file' };\r\n\tconst mumpsDiagnostics = vscode.languages.createDiagnosticCollection(\"mumps\");\r\n\tlet storage = \"\";\r\n\tif (context.storageUri !== undefined) {\r\n\t\tstorage = context.storageUri.fsPath;\r\n\t\tif (!fs.existsSync(storage)) {\r\n\t\t\tfs.mkdirSync(storage);\r\n\t\t}\r\n\t\tdbFile = storage + \"/labeldb.json\";\r\n\t\tcontext.subscriptions.push(vscode.languages.registerCompletionItemProvider(MUMPS_MODE, new CompletionItemProvider(dbFile)));\r\n\t}\r\n\tconst wsState = context.workspaceState;\r\n\tcontext.subscriptions.push(\r\n\t\tvscode.commands.registerCommand(\"mumps.documentFunction\", () => { MumpsDocumenter(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.autoSpaceEnter\", () => { autoSpaceEnter(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.autoSpaceTab\", () => { autoSpaceTab(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.sortRoutine\", () => { new MumpsRoutineSorter() }),\r\n\t\tvscode.commands.registerCommand(\"mumps.toggleExpandedCommands\", () => { expandCompress(wsState) }),\r\n\t\tvscode.commands.registerCommand('mumps.getEntryRef', () => { return getEntryRef() }),\r\n\t\tvscode.commands.registerCommand('mumps.Globals.loadMore', (node: GlobalNode) => globalDirectoryProvider.getMoreNodes(node)),\r\n\t\tvscode.commands.registerCommand('mumps.Globals.refresh', () => MumpsGlobalProvider.refresh()),\r\n\t\tvscode.commands.registerCommand('mumps.Globals.search', (node: GlobalNode) => globalDirectoryProvider.search(node)),\r\n\t\tvscode.debug.registerDebugConfigurationProvider('mumps', new MumpsConfigurationProvider()),\r\n\t\tvscode.debug.registerDebugAdapterDescriptorFactory('mumps', new InlineDebugAdapterFactory()),\r\n\t\tvscode.languages.registerHoverProvider(MUMPS_MODE, new MumpsHoverProvider()),\r\n\t\tvscode.languages.registerDefinitionProvider(MUMPS_MODE, new MumpsDefinitionProvider()),\r\n\t\tvscode.languages.registerEvaluatableExpressionProvider(MUMPS_MODE, new MumpsEvalutableExpressionProvider()),\r\n\t\tvscode.languages.registerSignatureHelpProvider(MUMPS_MODE, new MumpsSignatureHelpProvider(), '(', ','),\r\n\t\tvscode.languages.registerDocumentSymbolProvider(MUMPS_MODE, new MumpsDocumentSymbolProvider()),\r\n\t\tvscode.languages.registerDocumentSemanticTokensProvider(MUMPS_MODE, MumpsHighlighter, SemanticTokens),\r\n\t\tvscode.languages.registerDocumentFormattingEditProvider(MUMPS_MODE, new MumpsFormattingHelpProvider()),\r\n\t\tvscode.languages.registerDocumentRangeFormattingEditProvider(MUMPS_MODE, new MumpsFormattingHelpProvider()),\r\n\t\tvscode.languages.registerReferenceProvider(MUMPS_MODE, new MumpsReferenceProvider()),\r\n\t\tvscode.languages.registerFoldingRangeProvider(MUMPS_MODE, new MumpsFoldingProvider()),\r\n\t\tvscode.languages.registerCodeActionsProvider(MUMPS_MODE, new MumpsCodeActionProvider()),\r\n\t\tvscode.window.registerTreeDataProvider('mumpsGlobals', MumpsGlobalProvider.getInstance()),\r\n\t\tvscode.window.onDidChangeActiveTextEditor(editor => { if (editor) { triggerUpdateDiagnostics(editor.document, mumpsDiagnostics) } }),\r\n\t\tvscode.workspace.onDidChangeTextDocument(editor => { if (editor) { triggerUpdateDiagnostics(editor.document, mumpsDiagnostics) } }),\r\n\t\tvscode.workspace.onDidOpenTextDocument(document => { triggerUpdateDiagnostics(document, mumpsDiagnostics) }),\r\n\t);\r\n}\r\n\r\nexport function deactivate() {\r\n\t// nothing to do\r\n}\r\n\r\nclass InlineDebugAdapterFactory implements vscode.DebugAdapterDescriptorFactory {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tcreateDebugAdapterDescriptor(): vscode.ProviderResult<vscode.DebugAdapterDescriptor> {\r\n\t\treturn new vscode.DebugAdapterInlineImplementation(new MumpsDebugSession());\r\n\t}\r\n}\r\n\r\nfunction triggerUpdateDiagnostics(document: vscode.TextDocument, collection: vscode.DiagnosticCollection) {\r\n\tif (timeout) {\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = undefined;\r\n\t}\r\n\ttimeout = setTimeout(() => new MumpsDiagnosticsProvider(document, collection), 500);\r\n}\r\n\r\nfunction getEntryRef() {\r\n\treturn vscode.window.showInputBox({\r\n\t\tplaceHolder: \"Please enter the Entry-Reference to start Debugging\",\r\n\t\tvalue: entryRef\r\n\t})\r\n}\r\n\r\nexport function getdbFile() {\r\n\treturn dbFile;\r\n}\r\n\r\nexport function getWworkspaceFolder() {\r\n\treturn vscode.workspace.workspaceFolders?.[0].uri.fsPath;\r\n}\r\nexport function getLocalRoutinesPath() {\r\n\treturn localRoutinesPath;\r\n}\r\nexport function setLocalRoutinesPath(path: string) {\r\n\tlocalRoutinesPath = path;\r\n}\r\n","interface ParameterDefinition {\r\n\tname: string,\r\n\ttype: string,\r\n\tdescription?: string\r\n\toptional?: boolean\r\n}\r\nexport interface languageToken {\r\n\tname: string,\r\n\ttype: string,\r\n\tabbreviation: string,\r\n\tdescription: string,\r\n\tparameters?: ParameterDefinition[],\r\n\treturns?: { type: string }\r\n}\r\nexport const definitionsArray: languageToken[] =\r\n\t[{\r\n\t\t\"name\": \"BREAK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"B\",\r\n\t\t\"description\": \"Suspend execution or exit a block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"CLOSE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"C\",\r\n\t\t\"description\": \"Release an I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"DO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"D\",\r\n\t\t\"description\": \"Execute a program, section of code or block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ELSE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"E\",\r\n\t\t\"description\": \"Conditional execution based on $test\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"FOR\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"F\",\r\n\t\t\"description\": \"Iterative execution of a line or block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"GOTO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"G\",\r\n\t\t\"description\": \"Transfer of control to a label or program\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"HALT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"H\",\r\n\t\t\"description\": \"Terminate execution\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"HANG\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"H\",\r\n\t\t\"description\": \"Delay execution for a specified period of time\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"IF\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"I\",\r\n\t\t\"description\": \"Conditional execution of remainder of line\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"JOB\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"J\",\r\n\t\t\"description\": \"Start an independent process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"LOCK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"L\",\r\n\t\t\"description\": \"Exclusive access/release named resource\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"KILL\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"K\",\r\n\t\t\"description\": \"Deletes a local or global variable\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"MERGE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"M\",\r\n\t\t\"description\": \"Copy arrays\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"NEW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"N\",\r\n\t\t\"description\": \"Create new copies of local variables\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"OPEN\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"O\",\r\n\t\t\"description\": \"Obtain ownership of a device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"QUIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"Q\",\r\n\t\t\"description\": \"End a for loop or exit a block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"READ\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"R\",\r\n\t\t\"description\": \"Read from a device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SET\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"S\",\r\n\t\t\"description\": \"Assign a value to a global or local variable\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TCOMMIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TC\",\r\n\t\t\"description\": \"Commit a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TRESTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TRE\",\r\n\t\t\"description\": \"Roll back / restart a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TROLLBACK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TRO\",\r\n\t\t\"description\": \"Roll back a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TSTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TS\",\r\n\t\t\"description\": \"Begin a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"USE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"U\",\r\n\t\t\"description\": \"Select which device to read/write\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"VIEW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"V\",\r\n\t\t\"description\": \"Implementation defined\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"WRITE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"W\",\r\n\t\t\"description\": \"Writes to device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"XECUTE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"X\",\r\n\t\t\"description\": \"Dynamically execute strings\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZALLOCATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZA\",\r\n\t\t\"description\": \"Reserves the specified name\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZBREAK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZB\",\r\n\t\t\"description\": \"Sets or clears a routine breakpoint\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZCOMPILE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZCOM\",\r\n\t\t\"description\": \"Compiles a routine\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZCONTINUE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZC\",\r\n\t\t\"description\": \"Continues excutioen after a break\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZDEALLOCATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZD\",\r\n\t\t\"description\": \"Release the specified name\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZEDIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZE\",\r\n\t\t\"description\": \"Invokes editor for routine editing\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZGOTO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZG\",\r\n\t\t\"description\": \"Moves to EntryRef on a given stacklevel\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZHALT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZHALT\",\r\n\t\t\"description\": \"Stops program execution with a return code\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZHELP\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZH\",\r\n\t\t\"description\": \"Accessses M help library\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZKILL\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZK\",\r\n\t\t\"description\": \"Kills a data value but not the descendants\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZLINK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZL\",\r\n\t\t\"description\": \"Compiles an links a routine to the current process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZMESSAGE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZM\",\r\n\t\t\"description\": \"Raises an exception specified by given code\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZPRINT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZP\",\r\n\t\t\"description\": \"Displays source code lines\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZRUPDATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZRUPDATE\",\r\n\t\t\"description\": \"Publishes the new versions of routines to subscribers\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSHOW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZSH\",\r\n\t\t\"description\": \"Displays information about the current environment\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSTEP\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZST\",\r\n\t\t\"description\": \"Controls routine execution\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSYSTEM\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZSY\",\r\n\t\t\"description\": \"Creates a child of the current process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTCOMMIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTC\",\r\n\t\t\"description\": \"Marks the end of a logical transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTRIGGER\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTR\",\r\n\t\t\"description\": \"Invokes specified Global Triggers\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTSTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTS\",\r\n\t\t\"description\": \"Marks the beginning of a logical transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZWITHDRAW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZWI\",\r\n\t\t\"description\": \"Kills a data value but not the descendants\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZWRITE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZWR\",\r\n\t\t\"description\": \"Displays a complete global or local variable\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"name\": \"$DEVICE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$D\",\r\n\t\t\"description\": \"Status of the current device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ECODE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$EC\",\r\n\t\t\"description\": \"List of unresolved error codes\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ESTACK\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ES\",\r\n\t\t\"description\": \"Number of stack levels; NEWing $ESTACK resets it to 0\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ETRAP\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ET\",\r\n\t\t\"description\": \"Code to execute on error\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$HOROLOG\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$H\",\r\n\t\t\"description\": \"Days,seconds time stamp\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$IO\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$I\",\r\n\t\t\"description\": \"Current IO unit\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$JOB\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$J\",\r\n\t\t\"description\": \"Current process ID\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$KEY\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$K\",\r\n\t\t\"description\": \"String that terminated the most recent READ command\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$PRINCIPAL\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$P\",\r\n\t\t\"description\": \"Principal I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QUIT\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$Q\",\r\n\t\t\"description\": \"Whether the current block of code was called as an extrinsic function (e.g. via $$)\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STACK\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ST\",\r\n\t\t\"description\": \"Current process stack level\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STORAGE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$S\",\r\n\t\t\"description\": \"Amount of memory available, in bytes\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$SYSTEM\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$SY\",\r\n\t\t\"description\": \"System ID\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TEST\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$T\",\r\n\t\t\"description\": \"Result of prior IF command or READ/OPEN/LOCK command if invoked with a timeout\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TLEVEL\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$TL\",\r\n\t\t\"description\": \"Number transactions in process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TRESTART\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$TR\",\r\n\t\t\"description\": \"Number of restarts on current transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$X\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$X\",\r\n\t\t\"description\": \"Position of horizontal cursor in current I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$Y\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$Y\",\r\n\t\t\"description\": \"Position of vertical cursor in current I/O device\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"name\": \"$ASCII\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$A\",\r\n\t\t\"description\": \"ASCII numeric code of a character\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to get a code from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based position of the character in VALUE; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$CHAR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$C\",\r\n\t\t\"description\": \"ASCII character from numeric code\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"CODE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Numeric code to convert to a character\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional codes to convert to characters\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$DATA\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$D\",\r\n\t\t\"description\": \"Returns data about a variable: 0: if undefined, 1: if valued but has no descendants, 10: if has descendants but no value; 11: if has both a value and descendants\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to get data about, e.g. ^X\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$EXTRACT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$E\",\r\n\t\t\"description\": \"Extract a substring\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to get a substring from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"START\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based start index; defaults to 1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"END\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based end index; defaults to 2\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$FIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$F\",\r\n\t\t\"description\": \"Find the 1-based index after the end of a substring or 0 if not found\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"WITHIN\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to search in\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The substring to search for\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"START\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based index to start searching from; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$FNUMBER\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$FN\",\r\n\t\t\"description\": \"Format a number\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"NUMBER\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The number to format\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FORMAT\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"One or more of the following: +: forces \\\"+\\\" on positive numbers; -: omits the \\\"-\\\" on negative numbers; ,: comma-separates the number by thousands; T: puts the sign in the trailing position; P: wraps negative numbers in parentheses and wraps positive numbers in spaces and may only be combined with comma (,)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIGITS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The numer of digits after the decimal point\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$GET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$G\",\r\n\t\t\"description\": \"Get default or actual value\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to query, e.g. ^X(THIS,THAT)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DEFAULT\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"A value to use if VAR has no value; defaults to \\\"\\\"\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$JUSTIFY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$J\",\r\n\t\t\"description\": \"Right-justify a number or string by prefixing with spaces\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to justify\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MINLENGTH\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The minimum length of the result\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIGITS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The number of digits after the decimal point; providing this argument makes $JUSTIFY treat VALUE as a number\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$LENGTH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$L\",\r\n\t\t\"description\": \"Determine string length\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"If present, $LENGTH returns one more than the number of occurences of SUBSTRING in VALUE\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$NAME\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$NA\",\r\n\t\t\"description\": \"Evaluate and describe a variable\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to evaluate, including naked references\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MAXSUBSCRIPT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The maximum number of subscripts to evaluate if VAR is an array\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ORDER\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$O\",\r\n\t\t\"description\": \"Find the subscript of the next or previous node\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIRECTION\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"1: forward, -1: reverse; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$PIECE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$P\",\r\n\t\t\"description\": \"Extract substring based on pattern\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A delimiting string within VALUE\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PIECE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Which 1-based piece of the split string to return; defaults to 1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LASTPIECE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based index of the last piece of the split string to return; defaults to PIECE\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QLENGTH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$QL\",\r\n\t\t\"description\": \"Number of subscripts in an array reference\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QSUBSCRIPT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$QS\",\r\n\t\t\"description\": \"Value of specified subscript\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSCRIPT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The 1-based index of the subscript to find; special values include -1: environment and 0: unsubscripted name\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QUERY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$Q\",\r\n\t\t\"description\": \"Next item in an array; invoke multiple times to iterate the entire array\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$RANDOM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$R\",\r\n\t\t\"description\": \"Random number\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LIMIT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The generated random number will be between 0 (inclusive) and this LIMIT (exclusive)\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$REVERSE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$RE\",\r\n\t\t\"description\": \"String in reverse order\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to reverse\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$SELECT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$S\",\r\n\t\t\"description\": \"Value of first true argument\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"TVEXPR\",\r\n\t\t\t\"type\": \"expression\",\r\n\t\t\t\"description\": \"An expression to test for truth, followed by a colon and a value, e.g. i=42:\\\"Answered!\\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"expression\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional truth value expressions to test; the last expression often starts with 1: to avoid errors\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STACK\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ST\",\r\n\t\t\"description\": \"Returns information about the process stack\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LEVEL\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"-1: returns the highest stack level; 0: returns information about how the program was started; 1 to $STACK(-1): returns information about how the stack level was created\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FIELD\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"\\\"MCODE\\\": the line of code that was executed; \\\"PLACE\\\": location of the executed code; \\\"ECODE\\\": the error code(s) added at the stack level, if any\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TEXT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$T\",\r\n\t\t\"description\": \"Returns the text of a line of M[UMPS] code\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"REFERENCE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A reference to a code location, e.g. 'LABEL' or '+4^PROGRAM' or 'LABEL^PROGRAM', etc.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TRANSLATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$TR\",\r\n\t\t\"description\": \"Translate characters in a string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The value to translate\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"OLD\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Characters in VALUE to replace\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NEW\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Characters to replace OLD characters with; if not provided then OLD characters will be removed\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$VIEW\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$V\",\r\n\t\t\"description\": \"Implementation defined\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZAHANDLE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZAH\",\r\n\t\t\"description\": \"Returns unique identifier for a name or an alias container\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to find the handle for e.g\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZASCII\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZA\",\r\n\t\t\"description\": \"ASCII numeric code of a 8-bit character\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to get a code from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based position of the byte in VALUE; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZATRANSFORM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZATR\",\r\n\t\t\"description\": \"Returns the transformed representation of the first argument expr in a normalized form using the alternative transform specified by the second argument intexpr; the return can be used as an operand to the follows (]) or sorts-after (]]) operator such that, if both operands are in the normalized form, the result is independent of alternative collation.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"String to transform\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ID\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"ID of the alternative transform to use\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NORMALIZE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"whether the transform is to normalized form, by default or if zero (0), or, if one (1), the reverse transform from the normalized to the native form\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MCOLLATION\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"whether to use standard M collation of numbers before strings, the default or zero (0), or to sort all values as strings (1)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITAND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITAND\",\r\n\t\t\"description\": \"Performs a logical AND function on two bit strings and returns a bit string equal in length to the shorter of the two arguments (containing set bits in those positions where both of the input strings have set bits). Positions corresponding to positions where either of the input strings have a cleared bit, also have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITCOUNT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITCOUNT\",\r\n\t\t\"description\": \"Returns the number of ON bits in a bit string.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"EXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITFIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITFIND\",\r\n\t\t\"description\": \"Performs the analog of $FIND() on a bit string. It returns an integer that identifies the position after the first position equal to a truth-valued expression that occurs at, or after, the specified starting position\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The truth-valued expression specifies the bit value for which $ZBITFIND() searches (1 or 0)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The optional integer argument specifies the starting position at which to begin the search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITGET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITGET\",\r\n\t\t\"description\": \"\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The integer argument specifies the position in the string for which the value is requested\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITLEN\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITLEN\",\r\n\t\t\"description\": \"Returns the length of a bit string, in bits\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITNOT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITNOT\",\r\n\t\t\"description\": \"Returns a copy of the bit string with each input bit position inverted\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to invert\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITOR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITOR\",\r\n\t\t\"description\": \"Performs a bitwise logical OR on two bit strings, and returns a bit string equal in length to the longer of the two arguments (containing set bits in those positions where either or both of the input strings have set bits). Positions that correspond to positions where neither input string has a set bit have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITSET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITSET\",\r\n\t\t\"description\": \"Returns an edited copy of the input bit string with a specified bit set to the value of the truth-valued expression\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the input bit string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The integer expression specifies the position of the bit to manipulate. Arguments that are negative, zero, or exceed the length of the bit string produce a run-time error. $ZBIT functions count the first bit as position one (1)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The truth-valued expression specifies the value to which to set the specified bit (0 or 1)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITSTR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITSTR\",\r\n\t\t\"description\": \"Returns a bit string of a specified length with all bit positions initially set to either zero or one\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LENGTH\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"description\": \"The integer expression specifies the length of the bit string to return; arguments that exceed the maximum length of 253,952 produce a run-time error\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The optional truth-valued expression specifies the value to which all bit positions should initially be set (0 or 1). If this argument is missing, the bits are set to zero\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITXOR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITXOR\",\r\n\t\t\"description\": \"Performs a bitwise exclusive OR on two bit strings, and returns a bit string equal in length to the shorter of the two arguments (containing set bits in those positions where either (but not both) of the input strings have set bits). Positions that correspond to positions where neither or both input strings have a set bit have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCHAR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZCH\",\r\n\t\t\"description\": \"Returns a string composed of bytes represented by the integer octet values specified in its argument(s).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"Integer\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"description\": \"The integer expression(s) specify the numeric byte value of the byte(s) $ZCHAR() returns\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional codes to convert to characters\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCOLLATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZCO\",\r\n\t\t\"description\": \"Returns the transformed representation of the first argument glvn in a normalized form using the alternative transform specified by the second argument intexpr; the return can be used as an operand to the follows (]) or sorts-after (]]) operator such that, if both operands are in the normalized form, the result is independent of alternative collation.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"var\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The subscripted or unsubscripted global or local variable name specifies the key to transform\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TransformId\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Specifies the ID of the alternative transform to use\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NormForm\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies whether the transform is to normalized form, by default or if zero (0), or, if one (1), the reverse transform from the normalized to the native form.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCONVERT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns its first argument as a string or value converted to a different encoding or numeric base. The two argument form changes the encoding for case within the ASCII character set. The three argument form changes the encoding scheme or base. Supported bases are decimal 'DEC' and 'HEX', case insensitive).\",\r\n\t\t\"abbreviation\": \"$ZCO\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"string or value to convert. $ZCONVERT() generates a run-time error if for Unicode conversion if the string contains a code-point value that is not in the character set, or for base conversion if the value to be converted is out of range\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"code\",\r\n\t\t\t\"description\": \"Specifies a code that determines the form of the result.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"code\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Code that specifies the character set or base of the result\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZDATA\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZDATA\",\r\n\t\t\"description\": \"Extends $DATA() to reflect the current alias state of the lvn or name argument to identify alias and alias container variables. It treats variables joined through pass-by-reference as well as TP RESTART variables within a transaction as alias variables. However, it does not distinguish nodes having alias containers among their descendants.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"var\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"Returns data about a variable: 0: if undefined, 1: if valued but has no descendants, 10: if has descendants but no value; 11: if has both a value and descendants; 100; 101; 111\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZDATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns a date and/or time formatted as text based on an argument formatted in the manner of $HOROLOG\",\r\n\t\t\"abbreviation\": \"$ZDATE\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"$HOROLOG format of the date and/or time\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Pattern of desired output p.e. 'YEAR-MM-DD'\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies a list of 12 month codes, separated by commas (,)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies a list of seven day codes, separated by commas (,)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZEXTRACT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZE\",\r\n\t\t\"description\": \"Returns a byte sequence from a given sequence of octets (8-bit bytes).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies a sequence of octets (8-bit bytes) from which $ZEXTRACT() derives a byte sequence\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"intexpr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the starting byte position in the byte string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"intexpr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the ending byte position for the result\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZFIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZF\",\r\n\t\t\"description\": \"Returns an integer byte position that locates the occurrence of a byte sequence within a sequence of octets(8-bit bytes).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the sequence of octets (8-bit bytes) in which $ZFIND() searches for the byte sequence\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \" specifies the byte sequence for which $ZFIND() searches\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Identifies the starting byte position for the $ZFIND() search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZGETJPI\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns job or process information of the specified process\",\r\n\t\t\"abbreviation\": \"$ZGETJPI\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Identifies the PID of the target job. If expr1 is an empty string (“”), $ZGETJPI() returns information about the current process.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the item keyword identifying the type of information returned\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZJOBEXAM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the full specification of the file specified by the optional expr1 argument into which the function places a ZSHOW output specified by expr2\",\r\n\t\t\"abbreviation\": \"$ZJOBEXAM\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"A template output device specification. It can be a device, a file directory, or a file name.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Defaulting to '*', expr2 specifies the ZSHOW Information Codes of data to be included in the output\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZJUSTIFY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZJ\",\r\n\t\t\"description\": \"\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"The expression specifies the sequence of octets formatted by $ZJUSTIFY().\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Specifies the minimum size of the resulting byte sequence.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The number of digits after the decimal point; providing this argument makes $ZJUSTIFY treat expr1 as a number\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZLENGTH\",\r\n\t\t\"abbreviation\": \"$ZL\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the length of a sequence of octets measured in bytes, or in “pieces” separated by a delimiter specified by one of its arguments\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the sequence of octets that $ZLENGTH() “measures”.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"specifies the delimiter that defines the measure; if this argument is missing, $ZLENGTH() returns the number of bytes in the sequence of octets.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZMESSAGE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns a message string associated with a specified status code .\",\r\n\t\t\"abbreviation\": \"ZM\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The integer expression specifies the status code for which $ZMESSAGE() returns error message text .\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPARSE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Expands a file name to a full pathname and then returns the full pathname or one of its fields (directory, name, or extension).\",\r\n\t\t\"abbreviation\": \"$ZPARSE\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the file name; if the file name is not valid, $ZPARSE() returns a null string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the field of the pathname that $ZPARSE() returns\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specify default values to use during file name expansion for missing fields (directory, name, or extension)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specify default values to use during file name expansion for missing fields (directory, name, or extension)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr5\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the mode or type of parse that $ZPARSE() performs.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPIECE\",\r\n\t\t\"abbreviation\": \"$ZPI\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Return a sequence of bytes delimited by a specified byte sequence made up of one or more bytes.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"specifies the sequence of octets from which $ZPIECE() takes its result.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the delimiting byte sequence that determines the piece 'boundaries'\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the beginning piece to return\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the last piece to return\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPREVIOUS\",\r\n\t\t\"abbreviation\": \"$ZP\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the subscript of the previous local or global variable name in collation sequence within the array level specified by its argument.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"glvn\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"Specifies the node prior to which $ZPREVIOUS() searches backwards for a defined node with data and/or descendants.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZQGBLMOD\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Enables an application to determine whether it can safely apply a lost transaction to the database.\",\r\n\t\t\"abbreviation\": \"$ZQGBLMOD\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"gvn\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The subscripted or non-subscripted global variable name (gvn) specifies the target node.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"boolean\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSEARCH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Attempts to locate a file matching the specified file name. If the file exists, it returns the file name; if the file does not exist, it returns the null string.\",\r\n\t\t\"abbreviation\": \"$ZSEARCH\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Contains a file name, with or without wildcards, for which $ZSEARCH() attempts to locate a matching file.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies an integer expression that is a stream number. It can be any value from 0 to 255 for each search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSIGPROC\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Sends a signal to a process. The format for the $ZSIGPROC function is\",\r\n\t\t\"abbreviation\": \"$ZSIGPROC\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The pid of the process to which the signal is to be sent.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The system signal name (e.g., 'SIGUSR1' or just 'USR1').\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSOCKET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns information about a SOCKET device and its attached sockets\",\r\n\t\t\"abbreviation\": \"$ZSOCKET\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the SOCKET device name\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies a keyword identifying the type of information returned\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the index (starting at zero) of a socket attached to the device\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies an individual delimiter when the second expression specifies DELIMITER.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}\r\n\t];\r\n","import * as vscode from 'vscode';\nimport { LineObject, MumpsLineParser } from './mumpsLineParser';\nasync function autoSpaceEnter() {\n\tconst editor = vscode.window.activeTextEditor\n\tif (editor) {\n\t\tconst pos = editor.selection.active\n\t\tconst currentLine = editor.document.lineAt(pos.line).text;\n\t\tconst parsedLine = MumpsLineParser.parseLine(currentLine);\n\t\tlet newLine = '';\n\t\tif (pos.character !== 0) {\n\t\t\t//check for removing a trailing .\n\t\t\tif ((parsedLine.lineRoutines === undefined || parsedLine.lineRoutines.length === 0) && currentLine.indexOf(\";\") === -1 &&\n\t\t\t\tparsedLine.lineIndentationArray !== undefined && parsedLine.lineIndentationArray.length > 0) {\n\t\t\t\tparsedLine.lineIndentationArray.splice(-1)\n\t\t\t\teditor.edit((editBuilder) => {\n\t\t\t\t\teditBuilder.replace(new vscode.Range(pos.with(pos.line, 0), pos.with(pos.line, currentLine.length)), renderLine(parsedLine))\n\t\t\t\t})\n\t\t\t\t//check for adding indentation to the new line\n\t\t\t} else {\n\t\t\t\tif (parsedLine.lineIndentationArray === undefined) {\n\t\t\t\t\tparsedLine.lineIndentationArray = []\n\t\t\t\t}\n\t\t\t\tif (lineContainsNoParamDo(parsedLine)) {\n\t\t\t\t\tparsedLine.lineIndentationArray.push(\" \")\n\t\t\t\t}\n\t\t\t\tparsedLine.lineRoutines = []\n\t\t\t\tdelete parsedLine.lineComment\n\t\t\t\tdelete parsedLine.lineLabel\n\t\t\t\tnewLine = renderLine(parsedLine);\n\t\t\t}\n\t\t}\n\t\teditor.edit((editBuilder) => {\n\t\t\teditBuilder.insert(pos, \"\\n\" + newLine);\n\t\t})\n\t}\n}\n\nfunction lineContainsNoParamDo(parsed: LineObject) {\n\tconst cmds = parsed.lineRoutines;\n\tif (cmds) {\n\t\tfor (let i = 0; i < cmds.length; i++) {\n\t\t\tif (cmds[i].mCommand.match(/(d|do)/i) && !cmds[i].mArguments) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nasync function autoSpaceTab() {\n\n\tconst editor = vscode.window.activeTextEditor\n\tif (editor) {\n\t\tconst pos = editor.selection.active\n\t\tconst currentLine = editor.document.lineAt(pos.line).text;\n\t\tconst parsed = MumpsLineParser.parseLine(currentLine);\n\t\tif ((parsed.lineRoutines === undefined || parsed.lineRoutines.length === 0) &&\n\t\t\tcurrentLine.indexOf(\";\") === -1 && parsed.lineIndentationArray !== undefined &&\n\t\t\tparsed.lineIndentationArray.length > 0) {\n\t\t\tparsed.lineIndentationArray.push(\" \")\n\t\t\teditor.edit((editBuilder) => {\n\t\t\t\tif (currentLine.charAt(pos.character - 1) === \" \") {\n\t\t\t\t\teditBuilder.insert(pos.with(pos.line, pos.character), \". \")\n\t\t\t\t} else {\n\t\t\t\t\teditBuilder.insert(pos.with(pos.line, pos.character), \" . \")\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\teditor.edit((eb) => {\n\t\t\t\teb.insert(pos, \"\\t\")\n\t\t\t})\n\t\t}\n\t}\n}\nfunction renderLine(inputObject: LineObject): string {\n\n\tlet tmpLine = \"\";\n\n\t//Rendering must be performed sequentially.\n\ttmpLine = appendLabel(inputObject, tmpLine);\n\ttmpLine = appendIndentation(inputObject, tmpLine);\n\ttmpLine = appendRoutines(inputObject, tmpLine);\n\ttmpLine = appendComment(inputObject, tmpLine);\n\n\treturn tmpLine;\n\n}\nfunction appendLabel(inputObject: LineObject, inputLine: string) {\n\tif (inputObject.lineLabel) {\n\t\tinputLine = inputLine + inputObject.lineLabel;\n\t}\n\tif (inputObject.lineLeadSpace) {\n\t\tinputLine = inputLine + inputObject.lineLeadSpace;\n\t}\n\treturn inputLine;\n}\n\n//Append Indentation to Label/Spacing.\nfunction appendIndentation(inputObject: LineObject, inputLine: string) {\n\tlet tmpIndentation = \"\";\n\tif (inputObject.lineIndentationArray) {\n\t\tif (inputObject.lineIndentationArray.length > 0) {\n\t\t\tfor (const i in inputObject.lineIndentationArray) {\n\t\t\t\ttmpIndentation = tmpIndentation + \".\" + inputObject.lineIndentationArray[i];\n\t\t\t}\n\t\t\tinputLine = inputLine + tmpIndentation;\n\t\t}\n\t}\n\treturn inputLine;\n}\n\n//Append Routines to Label/Spacing/Indentation.\nfunction appendRoutines(inputObject: LineObject, inputLine: string) {\n\tif (inputObject.lineRoutines) {\n\t\tfor (const i in inputObject.lineRoutines) {\n\t\t\tif (inputObject.lineRoutines[i].mCommand || inputObject.lineRoutines[i].mCommand === \"\") {\n\t\t\t\t//Leave off interval spacing for first Routine.\n\t\t\t\tif (i === \"0\") {\n\t\t\t\t\tinputLine = inputLine + inputObject.lineRoutines[i].mCommand;\n\t\t\t\t} else {\n\t\t\t\t\tinputLine = inputLine + \" \" + inputObject.lineRoutines[i].mCommand;\n\t\t\t\t}\n\t\t\t\t//Append Post-Conditional.\n\t\t\t\tif (inputObject.lineRoutines[i].mPostCondition) {\n\t\t\t\t\tinputLine = inputLine + \":\" + inputObject.lineRoutines[i].mPostCondition;\n\t\t\t\t}\n\t\t\t\t//Append Arguments.\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(inputObject.lineRoutines[i], \"mArguments\")) {\n\t\t\t\t\tinputLine = inputLine + \" \" + inputObject.lineRoutines[i].mArguments;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn inputLine;\n}\n\n//Append Comment.\nfunction appendComment(inputObject: LineObject, inputLine: string) {\n\tif (Object.prototype.hasOwnProperty.call(inputObject, \"lineComment\")) {\n\t\tinputLine = inputLine + \";\" + inputObject.lineComment;\n\t}\n\treturn inputLine;\n}\n\nexport { autoSpaceTab, autoSpaceEnter };","import * as vscode from 'vscode';\nimport MumpsParseDb from './mumpsParseDb';\nimport { TokenType } from './mumpsLineParser';\nexport default class MumpsCodeActionProvider implements vscode.CodeActionProvider {\n\tprivate _document: vscode.TextDocument | null = null\n\tprivate _actualDiagnostic: vscode.Diagnostic\n\tprivate _actualParameter: string\n\tprivate _parseDb: MumpsParseDb\n\t// eslint-disable-next-line class-methods-use-this\n\tprovideCodeActions(\n\t\tdocument: vscode.TextDocument,\n\t\trange: vscode.Range,\n\t\tcontext: vscode.CodeActionContext,\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\ttoken: vscode.CancellationToken\n\t): vscode.ProviderResult<(vscode.Command | vscode.CodeAction)[]> {\n\t\tthis._parseDb = MumpsParseDb.getInstance(document)\n\t\tconst diagnostics = context.diagnostics;\n\t\tconst codeActions: vscode.CodeAction[] = diagnostics.map((diagnostic) => {\n\t\t\tlet fix: vscode.CodeAction = new vscode.CodeAction('No Solution', vscode.CodeActionKind.Empty);\n\t\t\tif (diagnostic.code) {\n\t\t\t\tconst parts = diagnostic.code.toString().split(\":\")\n\t\t\t\tconst errorCode = parts[0]\n\t\t\t\tthis._actualParameter = parts[1]\n\t\t\t\tthis._document = document\n\t\t\t\tthis._actualDiagnostic = diagnostic\n\t\t\t\tswitch (errorCode) {\n\t\t\t\t\tcase \"VarAlreadyNewed\":\n\t\t\t\t\t\tfix = this._removeNewVariable()\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"NewedButNotUsed\":\n\t\t\t\t\t\tfix = this._removeNewVariable()\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"NewHidesParam\":\n\t\t\t\t\t\tfix = this._removeNewVariable()\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"VarNotNewed\":\n\t\t\t\t\t\tfix = this._varNotNewed()\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn fix;\n\t\t});\n\n\t\treturn codeActions;\n\t}\n\tprivate _removeNewVariable(): vscode.CodeAction {\n\t\tconst fix = new vscode.CodeAction('Remove variable', vscode.CodeActionKind.QuickFix)\n\t\tfix.edit = new vscode.WorkspaceEdit()\n\t\tconst uri = this._document?.uri\n\t\tconst diagRange = this._actualDiagnostic.range\n\t\tconst line = diagRange.start.line\n\t\tlet startPosition = diagRange.start.character\n\t\tlet endPosition = diagRange.end.character\n\t\tconst tokens = this._parseDb.getLineTokens(line)\n\t\tconst lineContent = this._parseDb.getLine(line)\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tconst token = tokens[i]\n\t\t\tconst positionAfterToken = token.position + token.name.length\n\t\t\tif (token.position === startPosition) {\n\t\t\t\tif (lineContent[startPosition - 1] === \" \") { //First NEW argument or single argument\n\t\t\t\t\tif (lineContent[positionAfterToken] === \",\") {\n\t\t\t\t\t\tendPosition++\n\t\t\t\t\t} else { //Single NEW argument - delete NEW complete\n\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\tif (tokens[j].type === TokenType.keyword && tokens[j].longName === \"NEW\") {\n\t\t\t\t\t\t\t\tstartPosition = tokens[j].position\n\t\t\t\t\t\t\t\tif (i === tokens.length) { //NEW argument is last token in the line\n\t\t\t\t\t\t\t\t\twhile (startPosition > 0) {\n\t\t\t\t\t\t\t\t\t\tif (/\\s/.test(lineContent[startPosition - 1])) {\n\t\t\t\t\t\t\t\t\t\t\tstartPosition--\n\t\t\t\t\t\t\t\t\t\t} else break\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (positionAfterToken < lineContent.length && lineContent[positionAfterToken] === \" \") endPosition++\n\t\t\t\t\t}\n\t\t\t\t} else { //not the first NEW argument\n\t\t\t\t\tif (lineContent[startPosition - 1] === \",\") {\n\t\t\t\t\t\tstartPosition--\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tfix.edit.replace(uri!, new vscode.Range(\n\t\t\tnew vscode.Position(line, startPosition),\n\t\t\tnew vscode.Position(line, endPosition)\n\t\t), \"\")\n\t\treturn fix;\n\t}\n\n\tprivate _varNotNewed(): vscode.CodeAction {\n\t\tconst fix = new vscode.CodeAction('Add Variable to NEW-Statement', vscode.CodeActionKind.QuickFix);\n\t\tfix.edit = new vscode.WorkspaceEdit();\n\t\tconst diagnostic = this._actualDiagnostic\n\t\tconst line = diagnostic.range.start.line\n\t\tconst uri = this._document?.uri\n\t\tconst subroutineStartLine = this._getSubroutineStart(line)\n\t\tif (subroutineStartLine === line) {\n\t\t\tconst lineContent = this._parseDb.getLine(line)\n\t\t\tconst tokens = this._parseDb.getLineTokens(line)\n\t\t\tlet j = 1\n\t\t\tfor (; j < tokens.length; j++) {\n\t\t\t\tif (tokens[j].type !== TokenType.local) {\n\t\t\t\t\tj--\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst bracketPosition = tokens[j].position + tokens[j].name.length\n\t\t\tlet endReplace = bracketPosition + 1;\n\t\t\tif (/\\s/.test(lineContent[bracketPosition + 1])) endReplace++\n\t\t\tconst range = new vscode.Range(new vscode.Position(line, bracketPosition + 1), new vscode.Position(line, endReplace))\n\t\t\tfix.edit.replace(uri!, range, \"\\n\\tNEW \" + this._actualParameter + \"\\n\\t\")\n\t\t} else {\n\t\t\tfix.edit = this._getfixedNew(subroutineStartLine + 1, uri!, fix.edit)\n\t\t}\n\t\treturn fix;\n\t}\n\tprivate _getSubroutineStart(line: number): number {\n\t\tfor (let i = line; i >= 0; i--) {\n\t\t\tconst tokens = this._parseDb.getLineTokens(i);\n\t\t\tif (tokens.length > 0 &&\n\t\t\t\ttokens[0].type === TokenType.label &&\n\t\t\t\ttokens.length > 1 &&\n\t\t\t\ttokens[1].type === TokenType.local) { //Subroutine with parameters\n\t\t\t\treturn i\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\tprivate _getfixedNew(line: number, uri: vscode.Uri, edit: vscode.WorkspaceEdit): vscode.WorkspaceEdit {\n\t\tconst lineCount = this._parseDb.getLineCount()\n\t\tlet i = line\n\t\tlet varStartPosition = 0\n\t\tconst variables: string[] = []\n\t\tfor (; i < lineCount; i++) {\n\t\t\tconst tokens = this._parseDb.getLineTokens(i)\n\t\t\tif (tokens.length === 0) continue\n\t\t\tif (tokens[0].type === TokenType.comment) continue\n\t\t\tif (tokens[0].type === TokenType.keyword && tokens[0].longName === \"NEW\" && tokens[0].isPostconditioned === false) {\n\t\t\t\tlet j = 1\n\t\t\t\tfor (; j < tokens.length; j++) {\n\t\t\t\t\tif (tokens[j].type !== TokenType.local) {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (j == 1) varStartPosition = tokens[j].position\n\t\t\t\t\tvariables.push(tokens[j].name)\n\t\t\t\t}\n\t\t\t\tvariables.push(this._actualParameter)\n\t\t\t\tvariables.sort()\n\t\t\t\tconst varString = variables.join(\",\")\n\t\t\t\tconst startPosition = new vscode.Position(i, varStartPosition)\n\t\t\t\tconst endPosition = new vscode.Position(i, tokens[j - 1].position + tokens[j - 1].name.length)\n\t\t\t\tedit.replace(uri, new vscode.Range(startPosition, endPosition), varString)\n\t\t\t\treturn edit\n\t\t\t} else break\n\t\t}\n\t\tedit.insert(uri!, new vscode.Position(i, 0), \"\\tNEW \" + this._actualParameter + \"\\n\")\n\t\treturn edit\n\t}\n}\n","import * as vscode from 'vscode';\nimport { MumpsLineParser } from './mumpsLineParser';\nconst parser = new MumpsLineParser;\nexport default function expandCompress(state: vscode.Memento) {\n\tlet doExpand = true;\n\tconst editor = vscode.window.activeTextEditor\n\tif (editor) {\n\t\tconst filename = editor.document.fileName;\n\t\tif (state.get(filename + \"_expandState\") === true) {\n\t\t\tdoExpand = false;\n\t\t\tstate.update(filename + \"_expandState\", false);\n\t\t} else {\n\t\t\tstate.update(filename + \"_expandState\", true);\n\t\t}\n\t\tconst document = editor.document.getText();\n\t\tconst lines = document.split(\"\\n\")\n\t\tconst lineCount = lines.length;\n\t\tif (lineCount) {\n\t\t\tconst lastLineLength = lines[lineCount - 1].length;\n\t\t\tfor (let i = 0; i < lineCount; i++) {\n\t\t\t\tconst info = parser.expandCompressLine(lines[i], doExpand);\n\t\t\t\tif (info.errorText === '') {\n\t\t\t\t\tlines[i] = info.lineText;\n\t\t\t\t}\n\t\t\t}\n\t\t\teditor.edit(editBuilder => {\n\t\t\t\teditBuilder.replace(new vscode.Range(0, 0, lineCount, lastLineLength), lines.join(\"\\n\"));\n\t\t\t})\n\t\t}\n\t}\n}\n","import * as vscode from 'vscode';\r\nimport { MumpsLineParser, LabelInformation, LineObject, entryref } from './mumpsLineParser';\r\nimport * as fs from 'fs'\r\n\r\nenum LineStatus {\r\n\tnoJumplabel, jumplabel\r\n}\r\n\r\ninterface ItemHint {\r\n\tlineStatus: LineStatus,\r\n\tstartString: string\r\n}\r\ninterface LabelItem {\r\n\troutine: string,\r\n\tlabel: string,\r\n\tline: string\r\n}\r\ninterface DbItem {\r\n\tlabels: LabelItem[],\r\n\troutines: { path: string }\r\n}\r\nexport default class CompletionItemProvider {\r\n\t/**\r\n * Provides the completion items for the supplied words.\r\n *\r\n * @param {TextDocument} document\r\n * @param {Position} position\r\n * @param {CancellationToken} token\r\n * @returns\r\n */\r\n\tprivate _labelsReady: boolean;\r\n\tprivate _labelDB: DbItem;\r\n\tprivate _filesToCheck: number;\r\n\tprivate _dbfile: string;\r\n\tprivate _document: vscode.TextDocument;\r\n\tconstructor(labeldb: string) {\r\n\t\tthis._labelsReady = false;\r\n\t\tthis._dbfile = labeldb;\r\n\t\tthis._refreshLabelDB();\r\n\t}\r\n\tprovideCompletionItems(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tthis._document = document;\r\n\t\tconst line = document.getText(new vscode.Range(new vscode.Position(position.line, 0), position))\r\n\t\tconst parsed = MumpsLineParser.parseLine(line);\r\n\t\tconst status = getLineStatus(parsed, position.character);\r\n\t\tthis._refreshLocalLabels(document);\r\n\t\tlet completionItems: Array<vscode.CompletionItem> = [];\r\n\t\tif (this._labelsReady && status.lineStatus === LineStatus.jumplabel) {\r\n\t\t\tconst replaceRange = new vscode.Range(new vscode.Position(position.line, position.character - status.startString.length), position)\r\n\t\t\tcompletionItems = this._findLabel(status.startString, completionItems, replaceRange);\r\n\t\t}\r\n\t\treturn completionItems;\r\n\t}\r\n\tprivate _refreshLabelDB() { // Look for all Labels in .m-Routines and them + Comments\r\n\t\tif (!fs.existsSync(this._dbfile)) {\r\n\t\t\tconst db = {\r\n\t\t\t\tlabels: [{ routine: '', label: '' }],\r\n\t\t\t\troutines: {}\r\n\t\t\t}\r\n\t\t\tfs.writeFileSync(this._dbfile, JSON.stringify(db));\r\n\t\t}\r\n\t\tfs.readFile(this._dbfile, (err, data) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tthis._labelDB = JSON.parse(data.toString());\r\n\t\t\t\tlet dbChanged = false;\r\n\t\t\t\tvscode.workspace.findFiles('*.m').then((files) => {\r\n\t\t\t\t\tthis._filesToCheck = files.length;\r\n\t\t\t\t\tfor (let i = 0; i < files.length; i++) {\r\n\t\t\t\t\t\tconst path = files[i].fsPath;\r\n\t\t\t\t\t\tfs.stat(path, (err, stats) => {\r\n\t\t\t\t\t\t\tif (!err) {\r\n\t\t\t\t\t\t\t\tconst ms = this._labelDB.routines[path];\r\n\t\t\t\t\t\t\t\tif (ms === undefined || stats.mtimeMs > ms) {\r\n\t\t\t\t\t\t\t\t\tthis._labelDB.routines[path] = stats.mtimeMs;\r\n\t\t\t\t\t\t\t\t\tdbChanged = true;\r\n\t\t\t\t\t\t\t\t\tif (stats.size < 50000) {  //parse only Files <50K\r\n\t\t\t\t\t\t\t\t\t\tthis._refreshFileLabels(path);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._labelsReady = true;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tprivate _checkReady(dbChanged: boolean) {\t// Check if all .m Files are processed and save LabelDB then\r\n\t\tif (--this._filesToCheck === 0) {\r\n\t\t\tif (dbChanged) {\r\n\t\t\t\tfs.writeFile(this._dbfile, JSON.stringify(this._labelDB), (err) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tvscode.window.showErrorMessage(\"Error writing Label DB\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate _refreshLocalLabels(document: vscode.TextDocument) {\r\n\t\tlet routine: string = document.fileName.replace(/\\\\/g, '/').split('/').pop() ?? \"\";\r\n\t\troutine = routine?.split('.')[0].replace('_', '%') ?? \"\";\r\n\t\tconst lines = document.getText().split('\\n');\r\n\t\tconst existingLabels = this._labelDB.labels.filter((label) => label.routine === routine);\r\n\r\n\t\t// Create a map of existing labels for quick lookup\r\n\t\tconst existingLabelsMap = new Map(existingLabels.map((label) => [label.label, label]));\r\n\r\n\t\t// Process each line in the document\r\n\t\tlet labelsinDocumentChanged = false;\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tif (routine) {\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t// Handle special case for the first line\r\n\t\t\t\t\tconst firstLineLabel = { label: '*FL', routine, line: lines[0] };\r\n\t\t\t\t\tif (!existingLabelsMap.has('*FL') || existingLabelsMap.get('*FL')?.line !== firstLineLabel.line) {\r\n\t\t\t\t\t\t// Add or update the first line label\r\n\t\t\t\t\t\texistingLabelsMap.set('*FL', firstLineLabel);\r\n\t\t\t\t\t\tlabelsinDocumentChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst labelMatch = lines[i].match(/^[%A-Za-z0-9][A-Za-z0-9]{0,31}/);\r\n\t\t\t\tif (labelMatch) {\r\n\t\t\t\t\tconst labelName = labelMatch[0];\r\n\t\t\t\t\tconst labelLine = { label: labelName, routine, line: lines[i] };\r\n\t\t\t\t\tif (existingLabelsMap.has(labelName)) {\r\n\t\t\t\t\t\t// Label exists, check if it's different\r\n\t\t\t\t\t\tconst existingLabel = existingLabelsMap.get(labelName);\r\n\t\t\t\t\t\tif (existingLabel?.line !== labelLine.line) {\r\n\t\t\t\t\t\t\t// Update the existing label\r\n\t\t\t\t\t\t\texistingLabelsMap.set(labelName, labelLine);\r\n\t\t\t\t\t\t\tlabelsinDocumentChanged = true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Label doesn't exist, add it\r\n\t\t\t\t\t\texistingLabelsMap.set(labelName, labelLine);\r\n\t\t\t\t\t\tlabelsinDocumentChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (labelsinDocumentChanged) {\r\n\t\t\tconst updatedLabels: LabelItem[] = [];\r\n\t\t\texistingLabelsMap.forEach((labelItem, labelName) => {\r\n\t\t\t\tupdatedLabels.push({ label: labelName, routine, line: labelItem.line })\r\n\t\t\t})\r\n\t\t\tthis._labelDB.labels = this._labelDB.labels.filter((label) => {\r\n\t\t\t\treturn label.routine !== routine;\r\n\t\t\t})\r\n\t\t\tthis._labelDB.labels.push(...updatedLabels);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _refreshFileLabels(path: string) {  // Refresh all Labels of a changed .m File\r\n\t\tlet routine = path.replace(/\\\\/g, '/').split('/').pop();\r\n\t\troutine = routine?.split('.')[0].replace('_', '%') ?? \"\";\r\n\t\tfs.readFile(path, 'utf8', (err, content: string) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconst lines = content.split('\\n');\r\n\t\t\t\tlet label: RegExpMatchArray | null = null;\r\n\t\t\t\tthis._labelDB.labels = this._labelDB.labels.filter((label) => {\r\n\t\t\t\t\treturn label.routine !== routine;\r\n\t\t\t\t})\r\n\t\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t\t\tif (routine) {\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tthis._labelDB.labels.push({ label: '*FL', routine, line: lines[0] });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlabel = lines[i].match(/^[%A-Za-z0-9][A-Za-z0-9]{0,31}/)\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tthis._labelDB.labels.push({ label: label[0], routine, line: lines[i] })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._checkReady(true);\r\n\t\t});\r\n\t}\r\n\tprivate _findLabel(startstring: string, list: Array<vscode.CompletionItem>, replaceRange: vscode.Range) {\r\n\t\t//let hits = 0;\r\n\t\tlet hitlist: LabelItem[] = [];\r\n\t\tconst localLabels: LabelInformation[] = MumpsLineParser.getLabels(this._document.getText());\r\n\t\tlet sortText = '';\r\n\t\tif (startstring.charAt(0) === '^') {\r\n\t\t\tconst suchstring = startstring.substring(1);\r\n\t\t\thitlist = this._labelDB.labels.filter((item) => {\r\n\t\t\t\treturn item.routine.startsWith(suchstring);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (startstring.indexOf('^') !== -1) {\r\n\t\t\t\tconst label = startstring.split('^')[0];\r\n\t\t\t\tconst routinepart = startstring.split('^')[1];\r\n\t\t\t\thitlist = this._labelDB.labels.filter((item) => {\r\n\t\t\t\t\tconst fits = item.label === label && item.routine.startsWith(routinepart);\r\n\t\t\t\t\treturn fits;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < localLabels.length; i++) {\r\n\t\t\t\t\tif (localLabels[i].name.startsWith(startstring)) {\r\n\t\t\t\t\t\thitlist.push({ routine: '', label: localLabels[i].name, line: this._document.lineAt(localLabels[i].line).text })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thitlist = hitlist.concat(this._labelDB.labels.filter((item) => {\r\n\t\t\t\t\tconst fits = item.label.startsWith(startstring);\r\n\t\t\t\t\treturn fits;\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < hitlist.length && i < 100; i++) {\r\n\t\t\tsortText = '100';\r\n\t\t\tconst item = hitlist[i];\r\n\t\t\tlet label = item.routine !== '' ? item.label + '^' + item.routine : item.label;\r\n\t\t\tif (label === startstring) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (item.label === \"*FL\") {\r\n\t\t\t\tif (!startstring.startsWith('^')) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlabel = '^' + item.routine;\r\n\t\t\t}\r\n\t\t\tlet detail = ''\r\n\t\t\tif (item.line.charAt(item.label.length) === '(') {\r\n\t\t\t\tif (item.line.indexOf(')') !== -1) {\r\n\t\t\t\t\tdetail = item.line.split(')')[0] + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (item.line.indexOf(';') !== -1) {\r\n\t\t\t\tdetail += item.line.substring(item.line.indexOf(';') + 1);\r\n\t\t\t}\r\n\t\t\tif (detail.length > 0) {\r\n\t\t\t\tsortText = '099';\r\n\t\t\t} //prefer documented lables\r\n\t\t\tif (item.routine === '') { // local labels first\r\n\t\t\t\tsortText = '098';\r\n\t\t\t}\r\n\r\n\t\t\tlist.push({ label, detail, sortText, range: replaceRange });\r\n\t\t}\r\n\t\treturn list;\r\n\t}\r\n}\r\nfunction getLineStatus(parsed: LineObject, position: number): ItemHint {\r\n\tlet lineStatus = LineStatus.noJumplabel\r\n\tlet startString = \"\"\r\n\tif (parsed.lineRoutines && parsed.lineRoutines.length > 0) {\r\n\t\tfor (const i in parsed.lineRoutines) {\r\n\t\t\tconst cmd = parsed.lineRoutines[i];\r\n\t\t\tif (cmd.mPostCondition !== \"\" && position >= cmd.pcPosition && position <= (cmd.pcPosition + cmd.mPostCondition.length)) {\r\n\t\t\t\tstartString = cmd.mPostCondition.substring(0, position - cmd.pcPosition);\r\n\t\t\t\tif (startString.indexOf(\"$$\") !== -1) {\r\n\t\t\t\t\tconst lastIndex = startString.lastIndexOf(\"$$\");\r\n\t\t\t\t\tstartString = startString.slice(lastIndex + 2);\r\n\t\t\t\t\tif (startString.match(entryref)) {\r\n\t\t\t\t\t\tlineStatus = LineStatus.jumplabel\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (cmd.mArguments !== \"\" && position >= cmd.argPosition && position <= (cmd.argPosition + cmd.mArguments.length)) {\r\n\t\t\t\tstartString = cmd.mArguments.substring(0, position - cmd.argPosition)\r\n\t\t\t\tif (cmd.mCommand.match(/[D|DO|G|GOTO|J|JOB]/i)) {\r\n\t\t\t\t\tif (startString.match(entryref)) {\r\n\t\t\t\t\t\tlineStatus = LineStatus.jumplabel\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (startString.indexOf(\"$$\") !== -1) {\r\n\t\t\t\t\tconst lastIndex = startString.lastIndexOf(\"$$\");\r\n\t\t\t\t\tstartString = startString.slice(lastIndex + 2);\r\n\t\t\t\t\tif (startString.match(entryref)) {\r\n\t\t\t\t\t\tlineStatus = LineStatus.jumplabel\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { lineStatus, startString }\r\n}\r\n\r\n","import * as vscode from 'vscode';\n\nexport default class MumpsConfigurationProvider implements vscode.DebugConfigurationProvider {\n\n\t/**\n\t * Message a debug configuration just before a debug session is being launched,\n\t * e.g. add all missing attributes to the debug configuration.\n\t*/\n\tstatic resolveDebugConfiguration(folder: vscode.WorkspaceFolder | undefined,\n\t\tconfig: vscode.DebugConfiguration): vscode.ProviderResult<vscode.DebugConfiguration> {\n\n\t\t// if launch.json is missing or empty\n\t\tif (!config.type && !config.request && !config.name) {\n\t\t\tconst editor = vscode.window.activeTextEditor;\n\t\t\tif (editor && editor.document.languageId === 'mumps') {\n\t\t\t\tconfig.type = 'mumps';\n\t\t\t\tconfig.name = 'Launch';\n\t\t\t\tconfig.request = 'launch';\n\t\t\t\tconfig.program = '${file}';\n\t\t\t\tconfig.stopOnEntry = true;\n\t\t\t\tconfig.hostname = '192.168.0.1';\n\t\t\t\tconfig.localRoutinesPath = 'y:\\\\';\n\t\t\t\tconfig.port = 9000;\n\t\t\t}\n\t\t}\n\n\t\tif (!config.program) {\n\t\t\treturn vscode.window.showInformationMessage(\"Cannot find a program to debug\").then(() => {\n\t\t\t\treturn undefined;\t// abort launch\n\t\t\t});\n\t\t}\n\n\t\treturn config;\n\t}\n}\n","/*\r\n\tConnector to MDEBUG-Server by Jens Wulf\r\n\tLicense: LGPL\r\n*/\r\nimport { DebugProtocol } from '@vscode/debugprotocol';\r\nimport { EventEmitter } from 'events';\r\nimport { existsSync, readFileSync } from 'fs';\r\nimport { Socket } from \"net\";\r\nimport * as vscode from 'vscode';\r\nimport { MumpsLineParser, TokenType } from './mumpsLineParser';\r\nimport { getLocalRoutinesPath, getWworkspaceFolder } from './extension';\r\nexport interface MumpsBreakpoint {\r\n\tid: number,\r\n\tfile: string,\r\n\tline: number,\r\n\tverified: boolean,\r\n\tcondition?: string\r\n}\r\nexport interface FilePosition {\r\n\tfile: string,\r\n\tline: number\r\n}\r\ninterface VarData {\r\n\tname: string,\r\n\tindexCount: number,\r\n\tbases: Array<string>,\r\n\tcontent: string\r\n}\r\ninterface FrameInfo {\r\n\tindex: number,\r\n\tname: string,\r\n\tfile: string,\r\n\tline: number\r\n}\r\ninterface StackInfo {\r\n\tframes: FrameInfo[];\r\n\tcount: number;\r\n}\r\ntype MumpsVariable = {\r\n\t[variableType in VariableType]: {\r\n\t\t[variableName: string]: string;\r\n\t};\r\n};\r\nexport type MumpsGlobal = {\r\n\t[variableName: string]:\r\n\t{\r\n\t\tvalue: string,\r\n\t\tisDefined: boolean,\r\n\t\thasChildren: boolean,\r\n\t\tmoreToFollow: boolean\r\n\t}\r\n}\r\ninterface IVariables {\r\n\t[varName: string]: string;\r\n}\r\nenum connectState {\r\n\tdisconnected, waitingforStart, waitingForVars, waitingForBreakpoints, waitingForSingleVar, waitingForSingleVarContent, waitingForErrorReport, waitingForHints, waitingForGlobals\r\n}\r\n\r\nexport enum VariableType {\r\n\tsystem, local\r\n}\r\n\r\nexport class MumpsConnect extends EventEmitter {\r\n\tprivate _socket = new Socket();\r\n\tprivate _connectState: connectState;\r\n\tprivate _readedData: string;\r\n\tprivate _mVars: MumpsVariable;\r\n\tprivate _globals: MumpsGlobal;\r\n\tprivate _mStack: Array<string>;\r\n\tprivate _activeBreakpoints: Array<string>;\r\n\tprivate _event = new EventEmitter();\r\n\tprivate _hostname: string;\r\n\tprivate _port: number;\r\n\tprivate _errorLines: string[];\r\n\tprivate _hints: string[];\r\n\tprivate _breakPoints: MumpsBreakpoint[];\r\n\tprivate _breakpointId = 1;\r\n\tprivate _commandQueue: string[];\r\n\tprivate _logging = false;\r\n\tprivate _singleVar = \"\";\r\n\tprivate _singleVarContent = \"\";\r\n\tprivate _lastError = \"\";\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._commandQueue = [];\r\n\t\tthis._connectState = connectState.disconnected;\r\n\t\tthis._readedData = \"\";\r\n\t\tthis._mVars = {\r\n\t\t\t[VariableType.system]: {},\r\n\t\t\t[VariableType.local]: {}\r\n\t\t};\r\n\t\tthis._globals = {};\r\n\t\tthis._mStack = [];\r\n\t\tthis._activeBreakpoints = [];\r\n\t\tthis._breakPoints = [];\r\n\t\tthis._errorLines = [];\r\n\t\tthis._singleVar = \"\";\r\n\t\tthis._singleVarContent = \"\";\r\n\t\tthis._hints = [];\r\n\t\tthis._event.on('varsComplete', () => {\r\n\t\t\tif (Object.keys(this._mVars[VariableType.system]).length > 0) {\r\n\t\t\t\tconst internals = this._mVars[VariableType.system];\r\n\t\t\t\tthis.checkEvents(internals);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tpublic async init(hostname: string, port: number): Promise<Socket> {\r\n\t\tthis._hostname = hostname;\r\n\t\tthis._port = port;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._socket.connect(this._port, this._hostname, () => {\r\n\t\t\t\tthis._log(\"Debug-Server connected\\n\");\r\n\t\t\t\tvscode.commands.executeCommand('setContext', 'mumps.showGlobals', true)\r\n\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\tthis._socket.on('data', (chunk) => {\r\n\t\t\t\t\tthis._readedData += chunk.toString();\r\n\t\t\t\t\tlet n = this._readedData.indexOf('\\n');\r\n\t\t\t\t\twhile (n !== -1) {\r\n\t\t\t\t\t\tconst data = this._readedData.substring(0, n);\r\n\t\t\t\t\t\tthis.processLine(data)\r\n\t\t\t\t\t\tthis._readedData = this._readedData.substring(n + 1);\r\n\t\t\t\t\t\tn = this._readedData.indexOf('\\n');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tresolve(this._socket);\r\n\t\t\t});\r\n\t\t\tthis._socket.on('error', (error) => {\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t\tthis._socket.on('end', () => {\r\n\t\t\t\tthis._connectState = connectState.disconnected\r\n\t\t\t\tvscode.commands.executeCommand('setContext', 'mumps.showGlobals', false)\r\n\t\t\t})\r\n\t\t})\r\n\t\t// Put a friendly message on the terminal of the server.\r\n\t}\r\n\tprivate _log(msg: string): void {\r\n\t\tif (this._logging) { console.log(msg); }\r\n\t}\r\n\tprivate processLine(line: string): void {\r\n\t\tthis._log(\"Line:  \" + line);\r\n\r\n\t\tlet varname: string;\r\n\t\tlet value: string;\r\n\t\tlet vartype: string;\r\n\t\tswitch (this._connectState) {\r\n\t\t\tcase connectState.waitingforStart: {\r\n\t\t\t\tif (line === \"***STARTVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForVars;\r\n\t\t\t\t\tthis._mStack = [];\r\n\t\t\t\t\tthis._mVars = {\r\n\t\t\t\t\t\t[VariableType.system]: {},\r\n\t\t\t\t\t\t[VariableType.local]: {}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTBP\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForBreakpoints;\r\n\t\t\t\t\tthis._activeBreakpoints = [];\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***SINGLEVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForSingleVar;\r\n\t\t\t\t\tthis._singleVar = \"\";\r\n\t\t\t\t\tthis._singleVarContent = \"\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***ENDPROGRAM\") {\r\n\t\t\t\t\tthis.sendEvent(\"end\");\r\n\t\t\t\t\tthis._socket.end();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***BEGINERRCHK\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForErrorReport;\r\n\t\t\t\t\tthis._errorLines = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTHINTS\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForHints;\r\n\t\t\t\t\tthis._hints = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTGBL\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForGlobals;\r\n\t\t\t\t\tthis._globals = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForVars: {\r\n\t\t\t\tif (line === \"***ENDVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tdelete this._mVars[VariableType.local][\"%STEP\"];\t\t\t//Remove internal debugger variables\r\n\t\t\t\t\tdelete this._mVars[VariableType.local][\"%PROGNAME\"];\r\n\t\t\t\t\tthis._event.emit(\"varsComplete\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvartype = line.substring(0, 1); //I=internal,V=local Variable,S=Stackframe\r\n\t\t\t\t\tif (vartype === \"S\") {\r\n\t\t\t\t\t\tthis._mStack.push(line.substring(2));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvarname = line.substring(2, line.indexOf('='));\r\n\t\t\t\t\twhile ((varname.split('\"').length - 1) % 2 !== 0) {\r\n\t\t\t\t\t\tvarname = line.substring(0, line.indexOf('=', varname.length + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue = line.substring(varname.length + 3).replace(/^\"/, \"\").replace(/\"$/, \"\");\r\n\t\t\t\t\tconst variableType = vartype === \"V\" ? VariableType.local : VariableType.system;\r\n\t\t\t\t\tthis._mVars[variableType][varname] = value;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForBreakpoints: {\r\n\t\t\t\tif (line === \"***ENDBP\") {\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis.verifyBreakpoints();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tthis._activeBreakpoints.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForSingleVar: {\r\n\t\t\t\tif (line === \"***SINGLEEND\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('SingleVarReceived', this._event, this._singleVar, this._singleVarContent);\r\n\t\t\t\t} else if (line === \"***SINGLEVARCONTENT\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForSingleVarContent;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._singleVar += line;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForSingleVarContent: {\r\n\t\t\t\tif (line === \"***SINGLEEND\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('SingleVarReceived', this._event, this._singleVar, this._singleVarContent);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._singleVarContent += line;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForErrorReport: {\r\n\t\t\t\tif (line === \"***ENDERRCHK\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('ErrorreportReceived', this._event, this._errorLines);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._errorLines.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForGlobals: {\r\n\t\t\t\tif (line === \"***ENDGBL\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit(\"gblsComplete\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet moreToFollow = false;\r\n\t\t\t\t\tlet indicator = parseInt(line[0]);\r\n\t\t\t\t\tif (indicator > 3) {\r\n\t\t\t\t\t\tmoreToFollow = true;\r\n\t\t\t\t\t\tindicator -= 4;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst hasChildren = indicator === 2;\r\n\t\t\t\t\tconst isDefined = line[1] === \"1\";\r\n\t\t\t\t\tvarname = line.substring(2, line.indexOf('='));\r\n\t\t\t\t\twhile ((varname.split('\"').length - 1) % 2 !== 0) {\r\n\t\t\t\t\t\tvarname = line.substring(2, line.indexOf('=', varname.length + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue = line.substring(varname.length + 3).replace(/^\"/, \"\").replace(/\"$/, \"\");\r\n\t\t\t\t\tthis._globals[varname] = { value, hasChildren, isDefined, moreToFollow }\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForHints: {\r\n\t\t\t\tif (line === \"***ENDHINTS\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('HintsReceived', this._event, this._hints);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._hints.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tconsole.error(\"Unexpected Message: \" + line);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate writeln(message: string): void {\r\n\t\tthis._commandQueue.push(message);\r\n\t\tif (this._commandQueue.length > 1000) {\r\n\t\t\tconsole.error(\"Too many Commands in Queue: Check Debugger Connection\");\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\t\tif (this._connectState !== connectState.disconnected) {\r\n\t\t\twhile (this._commandQueue.length) {\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\tmessage = this._commandQueue.shift()!;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._socket.write(message + \"\\n\");\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tthis._commandQueue.unshift(message);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate sendBreakpoint(file: string, line: number, onOff: boolean, condition?: string): void {\r\n\t\tif (condition === undefined) { condition = \"\"; }\r\n\t\tif (onOff) { this.writeln(\"SETBP;\" + file + \";\" + line + \";\" + condition); }\r\n\t\telse { this.writeln(\"CLEARBP;\" + file + \";\" + line); }\r\n\t}\r\n\tpublic start(file: string, stopAtStart: boolean): void {\r\n\t\tif (stopAtStart) {\r\n\t\t\tif (file.indexOf(\"^\")) {\r\n\t\t\t\t//Stop direct at given Label not at first line\r\n\t\t\t\tthis.sendBreakpoint(file, 0, true, \"\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendBreakpoint(file, 1, true, \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.requestBreakpoints();\r\n\t\tthis.writeln(\"START;\" + file);\r\n\t}\r\n\tpublic step(type: string): void {\r\n\t\tthis.writeln(type);\r\n\t}\r\n\tpublic continue(): void {\r\n\t\tthis.writeln(\"CONTINUE\");\r\n\t}\r\n\tpublic disconnect(): void {\r\n\t\tthis.writeln(\"RESET\");\r\n\t\tthis._socket.end();\r\n\t}\r\n\tpublic requestBreakpoints(): void {\r\n\t\tthis.writeln(\"REQUESTBP\");\r\n\t}\r\n\tpublic restart(file: string): void {\r\n\t\tthis.writeln(\"RESTART;\" + file);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the actual Stack\r\n\t */\r\n\tpublic stack(startFrame: number, endFrame: number): StackInfo {\r\n\r\n\t\tconst frames = new Array<FrameInfo>();\r\n\r\n\t\tfor (let i = startFrame; i < this._mStack.length; i++) {\r\n\t\t\tconst position = this._mStack[i];\r\n\t\t\tif (position.indexOf(\"^\") !== -1) {\r\n\t\t\t\tconst fileposition = convertMumpsPosition(position);\r\n\t\t\t\tframes.push({\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tname: `${position}(${i})`,\r\n\t\t\t\t\tfile: fileposition.file,\r\n\t\t\t\t\tline: fileposition.line\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tframes: frames,\r\n\t\t\tcount: Math.min(frames.length, endFrame)\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * Set breakpoint in file with given line.\r\n\t */\r\n\tpublic setBreakPoint(file: string, breakpoints: DebugProtocol.SourceBreakpoint[] | undefined): DebugProtocol.Breakpoint[] {\r\n\t\tconst confirmedBreakpoints: DebugProtocol.Breakpoint[] = [];\r\n\t\tfile = file.replace(/\\\\/g, \"/\");\r\n\t\tif (breakpoints) {\r\n\t\t\tfor (let i = 0; i < breakpoints.length; i++) {\r\n\t\t\t\tconst breakpoint = breakpoints[i];\r\n\t\t\t\tconst line = breakpoint.line\r\n\t\t\t\tconfirmedBreakpoints.push({ id: this._breakpointId, verified: false })\r\n\t\t\t\tconst newBreakpoint = { verified: false, file, line, id: this._breakpointId++ };\r\n\t\t\t\tconst existingBreakpoint = this._breakPoints.find(bp => bp.file === file && bp.line === line);\r\n\t\t\t\tif (!existingBreakpoint) {\r\n\t\t\t\t\tthis._breakPoints.push(newBreakpoint);\r\n\t\t\t\t} else {\r\n\t\t\t\t\texistingBreakpoint.condition = breakpoint.condition;\r\n\t\t\t\t}\r\n\t\t\t\tthis.sendBreakpoint(file, line, true, breakpoint.condition);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn confirmedBreakpoints;\r\n\t}\r\n\r\n\t/*\r\n\t * Clear breakpoint in file with given line.\r\n\t */\r\n\tpublic clearBreakPoint(file: string, line: number): MumpsBreakpoint | undefined {\r\n\t\tconst bps = this._breakPoints;\r\n\t\tif (bps) {\r\n\t\t\tconst index = bps.findIndex(bp => bp.file === file && bp.line === line);\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\tconst bp = bps[index];\r\n\t\t\t\tthis.sendBreakpoint(file, bp.line, false);\r\n\t\t\t\tbps.splice(index, 1);\r\n\t\t\t\treturn bp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/*\r\n\t * Clear all breakpoints\r\n\t */\r\n\tpublic clearBreakpoints(file: string): void {\r\n\t\tthis.writeln(\"CLEARBP;\" + file);\r\n\t}\r\n\r\n\tprivate verifyBreakpoints(): void {\r\n\t\tconst merk: boolean[] = [];\r\n\t\tthis._breakPoints.forEach(bp => {\r\n\t\t\tbp.verified = false;\r\n\t\t\tfor (let i = 0; i < this._activeBreakpoints.length; i++) {\r\n\t\t\t\tconst internalBp = convertMumpsPosition(this._activeBreakpoints[i])\r\n\t\t\t\tinternalBp.file = MumpsConnect.normalizeDrive(internalBp.file.replace(/\\\\/g, \"/\"));\r\n\t\t\t\tbp.file = MumpsConnect.normalizeDrive(bp.file.replace(/\\\\/g, \"/\"));\r\n\t\t\t\tif (internalBp.file === bp.file && bp.line === internalBp.line + 1) {\r\n\t\t\t\t\tbp.verified = true;\r\n\t\t\t\t\tthis.sendEvent('breakpointValidated', bp);\r\n\t\t\t\t\tmerk[i] = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!bp.verified) { this.sendEvent('breakpointValidated', bp); }\r\n\t\t});\r\n\t\tfor (let i = 0; i < this._activeBreakpoints.length; i++) {\r\n\t\t\tif (!merk[i]) {\r\n\t\t\t\tconst internalBp = convertMumpsPosition(this._activeBreakpoints[i])\r\n\t\t\t\tconst bp: MumpsBreakpoint = { 'verified': true, 'file': internalBp.file, 'line': internalBp.line + 1, 'id': this._breakpointId++ }\r\n\t\t\t\tthis.sendEvent('breakpointValidated', bp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate static normalizeDrive(path: string): string {\r\n\t\tconst parts = path.split(':');\r\n\t\tif (parts.length === 2) {\r\n\t\t\treturn parts[0].toLowerCase() + ':' + parts[1];\r\n\t\t} else {\r\n\t\t\treturn path;\r\n\t\t}\r\n\t}\r\n\tpublic async getGlobals(keys: string, searchInGlobal?: string): Promise<MumpsGlobal> {\r\n\t\tif (searchInGlobal !== undefined) {\r\n\t\t\tthis.writeln(\"SEARCHGBL;\" + searchInGlobal + \";\" + keys)\r\n\t\t} else {\r\n\t\t\tthis.writeln(\"GETGBL;\" + keys);\r\n\t\t}\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\t// Listen for the \"gblsComplete\" event.\r\n\t\t\tconst gblsCompleteListener = () => {\r\n\t\t\t\t// Unsubscribe from the event to avoid memory leaks.\r\n\t\t\t\tthis._event.removeListener(\"gblsComplete\", gblsCompleteListener);\r\n\r\n\t\t\t\t// Resolve the Promise with the received value.\r\n\t\t\t\tresolve(this._globals);\r\n\t\t\t};\r\n\r\n\t\t\t// Subscribe to the \"gblsComplete\" event.\r\n\t\t\tthis._event.on(\"gblsComplete\", gblsCompleteListener);\r\n\t\t});\r\n\t}\r\n\tpublic getVariables(type: VariableType): { [variableName: string]: string } {\r\n\t\treturn this._mVars[type];\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param lines M-Code to check\r\n\t * @returns Error-Report by Mumps-Compiler\r\n\t */\r\n\tpublic async checkRoutine(lines: string[]): Promise<string[]> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis._event.on('ErrorreportReceived', function ErrorreportReceived(event: EventEmitter, errorLines: string[]) {\r\n\t\t\t\tevent.removeListener('ErrorreportReceived', ErrorreportReceived);\r\n\t\t\t\terrorLines = errorLines.filter(line => !line.includes(\"I-SRCNAM\"));\r\n\t\t\t\tfor (let i = 0; i < errorLines.length; i++) {\r\n\t\t\t\t\tif (errorLines[i].indexOf(\"E-LABELMISSING\")) {\r\n\t\t\t\t\t\tconst label = errorLines[i].match(/: ([A-Za-z%0-9][A-Za-z0-9]*)/)\r\n\t\t\t\t\t\tif (label !== null && label.length > 1) {\r\n\t\t\t\t\t\t\tconst searchLabel = label[1];\r\n\t\t\t\t\t\t\tfor (let j = 0; j < lines.length; j++) {\r\n\t\t\t\t\t\t\t\tif (lines[j].indexOf(searchLabel) !== -1) {\r\n\t\t\t\t\t\t\t\t\tconst lineInfo = new MumpsLineParser().analyzeLine(lines[j]);\r\n\t\t\t\t\t\t\t\t\tif (lineInfo.tokens.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\tfor (let k = 0; k < lineInfo.tokens.length; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (lineInfo.tokens[k].type === TokenType.entryref && lineInfo.tokens[k].name === searchLabel) {\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorLines[i] = (lineInfo.tokens[k].position + 1) + \";\" + (j + 1) + \";\" + errorLines[i].substring(3);\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresolve(errorLines);\r\n\t\t\t});\r\n\t\t\tthis.writeln(\"ERRCHK\");\r\n\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t\tthis.writeln(lines[i]);\r\n\t\t\t}\r\n\t\t\tthis.writeln(\"***ENDPROGRAM\");\r\n\t\t})\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param expression Name of the Variable to get\r\n\t * @returns Variable Content\r\n\t */\r\n\tpublic async getSingleVar(expression: string): Promise<VarData> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tconst reply: VarData = { name: expression, indexCount: 0, content: \"undefined\", bases: [] }\r\n\t\t\tconst varType = expression.charAt(0) === \"$\" ? VariableType.system : VariableType.local;\r\n\t\t\tif (this._mVars[varType][expression] !== undefined) {\r\n\t\t\t\treply.content = this._mVars[varType][expression];\r\n\t\t\t\tresolve(reply);\r\n\t\t\t} else {\r\n\t\t\t\tthis._event.on('SingleVarReceived', function SingleVarReceived(event, singleVar, singleVarContent) {\r\n\t\t\t\t\tevent.removeListener('SingleVarReceived', SingleVarReceived);\r\n\t\t\t\t\treply.name = singleVar;\r\n\t\t\t\t\treply.content = singleVarContent;\r\n\t\t\t\t\tresolve(reply);\r\n\t\t\t\t});\r\n\t\t\t\tthis.writeln(\"GETVAR;\" + expression);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Fire events if line has a breakpoint or hs stopped beacause of a different reason\r\n\t */\r\n\tprivate checkEvents(internals: IVariables): void {\r\n\t\tconst mumpsposition = internals[\"$ZPOSITION\"];\r\n\t\tconst mumpsstatus = internals[\"$ZSTATUS\"];\r\n\t\tconst filePosition = convertMumpsPosition(mumpsposition);\r\n\t\tif (mumpsstatus !== \"\") {\r\n\t\t\tif (mumpsstatus === this._lastError && internals[\"$ETRAP\"] === internals[\"$ZSTEP\"]) {\r\n\t\t\t\tthis.sendEvent(\"end\");\r\n\t\t\t\treturn\r\n\t\t\t} else {\r\n\t\t\t\tif (mumpsstatus !== this._lastError) {\r\n\t\t\t\t\tthis._lastError = mumpsstatus;\r\n\t\t\t\t\tconst parts = mumpsstatus.split(\",\");\r\n\t\t\t\t\tthis.sendEvent('stopOnException', mumpsstatus, convertMumpsPosition(parts[1]));\r\n\t\t\t\t\tthis._log(mumpsstatus);\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst bps = this._breakPoints.filter(bp => bp.file === filePosition.file && bp.line === filePosition.line + 1);\r\n\t\tif (bps.length > 0) {\r\n\t\t\tthis.sendEvent('stopOnBreakpoint');\r\n\t\t} else {\r\n\t\t\tthis.sendEvent('stopOnStep');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate sendEvent(event: string, ...args: unknown[]): void {\r\n\t\tthis.emit(event, ...args);\r\n\t}\r\n}\r\nexport function convertMumpsPosition(positionstring: string, showNotFound?: boolean | undefined): FilePosition {\r\n\tif (showNotFound === undefined) { showNotFound = true; }\r\n\tconst parts = positionstring.split(\"^\");\r\n\tconst position = parts[0];\r\n\tif (parts[1] !== undefined) {\r\n\t\tconst program = parts[1].split(\" \", 1)[0].replace(/%/g, \"_\") + \".m\";\r\n\t\tlet file = (getLocalRoutinesPath() + program)\r\n\t\tif (!existsSync(file)) {\r\n\t\t\tif (getWworkspaceFolder() !== undefined) {\r\n\t\t\t\tfile = getWworkspaceFolder() + program;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!existsSync(file)) {\r\n\t\t\tif (showNotFound) { vscode.window.showErrorMessage(\"Could not find Routine \" + program); }\r\n\t\t\treturn { \"file\": \"\", \"line\": 1 };\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst filecontent = readFileSync(file).toString().split('\\n');\r\n\t\t\tconst startlabel = position.split(\"+\")[0];\r\n\t\t\tconst labelRegexp = new RegExp(\"^\" + startlabel + \"([(\\\\s;]|$)\");\r\n\t\t\tlet offset = 0;\r\n\t\t\tif (position.split(\"+\")[1] !== undefined) {\r\n\t\t\t\toffset = parseInt(position.split(\"+\")[1]);\r\n\t\t\t\tif (startlabel === \"\") { offset-- }   //If there's no startlabel M reports +1^XXX\r\n\t\t\t}\r\n\t\t\tlet line = 0;\r\n\t\t\tlet labelFound = false;\r\n\t\t\tif (startlabel !== \"\") {\r\n\t\t\t\tfor (let ln = 0; ln < filecontent.length; ln++) {\r\n\t\t\t\t\tif (filecontent[ln].match(labelRegexp)) {\r\n\t\t\t\t\t\tline = ln;\r\n\t\t\t\t\t\tlabelFound = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!labelFound) return { \"file\": \"\", \"line\": 1 }\r\n\t\t\t}\r\n\t\t\tif (line + offset >= filecontent.length) return { \"file\": \"\", \"line\": 1 }\r\n\t\t\treturn { \"file\": file, \"line\": line + offset };\r\n\t\t} catch {\r\n\t\t\tconsole.log(\"Could not read Sourcefile \" + file)\r\n\t\t\treturn { \"file\": \"\", \"line\": 1 };\r\n\t\t}\r\n\t} else {\r\n\t\treturn { \"file\": \"\", \"line\": 1 };\r\n\t}\r\n}\r\n","/*\r\n\tImplementation of DebugProtocol-Server for GT.M, Yottadb by Jens Wulf\r\n\tbased on Mock-Debug by Microsoft Corp.\r\n\tLicense: LGPL\r\n*/\r\n\r\nimport {\r\n\tDebugSession,\r\n\tInitializedEvent, TerminatedEvent, StoppedEvent, BreakpointEvent,\r\n\tThread, StackFrame, Scope, Source, Handles\r\n} from '@vscode/debugadapter';\r\nimport { DebugProtocol } from '@vscode/debugprotocol';\r\nimport { basename } from 'path';\r\nimport { Subject } from 'await-notify';\r\nimport { MumpsConnect, MumpsBreakpoint, FilePosition, VariableType } from './mumpsConnect';\r\nimport * as vscode from 'vscode';\r\nimport { readFileSync } from 'fs';\r\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider';\r\nimport { setLocalRoutinesPath } from './extension';\r\nimport { MumpsGlobalProvider } from './mumpsGlobalProvider';\r\nconst MUMPSDIAGNOSTICS = vscode.languages.createDiagnosticCollection(\"mumps\");\r\n//const MUMPSDIAGNOSTICS = vscode.languages.createDiagnosticCollection(\"mumps\");\r\n/**\r\n * This interface describes the mumps-debug specific launch attributes\r\n * The schema for these attributes lives in the package.json of the mumps-debug extension.\r\n * The interface should always match this schema.\r\n */\r\ninterface LaunchRequestArguments extends DebugProtocol.LaunchRequestArguments {\r\n\t/** An absolute path to the \"program\" to debug. */\r\n\tprogram: string;\r\n\t/** Automatically stop target after launch. If not specified, target does not stop. */\r\n\tstopOnEntry?: boolean;\r\n\t/** enable logging the Debug Adapter Protocol */\r\n\ttrace?: boolean;\r\n\t/** The Port on which MDEBUG listens */\r\n\tport: number;\r\n\t/**The Hostname of the MDEBUG-Server */\r\n\thostname: string;\r\n\t/**Map Local-Routines to Host-Routines */\r\n\tlocalRoutinesPath: string;\r\n\t/**Flag if internal Database for M-Labels should be build up */\r\n\tbuildLabelDb?: boolean;\r\n}\r\ninterface VarData {\r\n\tname: string,\r\n\tindexCount: number,\r\n\tbases: Array<string>,\r\n\tcontent: string\r\n}\r\nexport default class MumpsDebugSession extends DebugSession {\r\n\r\n\t// we don't support multiple threads, so we can use a hardcoded ID for the default thread\r\n\tprivate static THREAD_ID = 1;\r\n\r\n\tprivate _variableHandles = new Handles<string>();\r\n\tprivate _variableBases = {};\r\n\r\n\tprivate _configurationDone = new Subject();\r\n\r\n\tprivate _program: string;\r\n\r\n\tprivate _mconnect: MumpsConnect;\r\n\tprivate _localScope = this._variableHandles.create(\"~local|0\");\r\n\tprivate _systemScope = this._variableHandles.create(\"~system\");\r\n\t/**\r\n\t * Creates a new debug adapter that is used for one debug session.\r\n\t * We configure the default implementation of a debug adapter here.\r\n\t */\r\n\tpublic constructor() {\r\n\t\tsuper();\r\n\r\n\t\t// this debugger uses zero-based lines and columns\r\n\t\tthis.setDebuggerLinesStartAt1(false);\r\n\t\tthis.setDebuggerColumnsStartAt1(false);\r\n\t\tthis._program = \"\";\r\n\t\tthis._mconnect = new MumpsConnect();\r\n\r\n\t\t// setup event handlers\r\n\t\tthis._mconnect.on('stopOnEntry', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('entry', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnStep', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('step', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnBreakpoint', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('breakpoint', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnDataBreakpoint', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('data breakpoint', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnException', (e: string, filePosition: FilePosition) => {\r\n\t\t\tvscode.debug.activeDebugConsole.append(`${filePosition.file}:${filePosition.line + 1}:1`);\r\n\t\t\tvscode.debug.activeDebugConsole.appendLine(' Error: ' + e);\r\n\t\t\tthis.sendEvent(new StoppedEvent('exception', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('breakpointValidated', (bp: MumpsBreakpoint) => {\r\n\t\t\tthis.sendEvent(new BreakpointEvent('changed', <DebugProtocol.Breakpoint>{ verified: bp.verified, id: bp.id }));\r\n\t\t});\r\n\t\tthis._mconnect.on('end', () => {\r\n\t\t\tthis.sendEvent(new TerminatedEvent());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * The 'initialize' request is the first request called by the frontend\r\n\t * to interrogate the features the debug adapter provides.\r\n\t */\r\n\tprotected initializeRequest(response: DebugProtocol.InitializeResponse): void {\r\n\r\n\t\t// build and return the capabilities of this debug adapter:\r\n\t\tresponse.body = response.body || {};\r\n\r\n\t\t// the adapter implements the configurationDoneRequest.\r\n\t\tresponse.body.supportsConfigurationDoneRequest = true;\r\n\r\n\t\t// make VS Code to use 'evaluate' when hovering over source\r\n\t\tresponse.body.supportsEvaluateForHovers = true;\r\n\r\n\t\t// make VS Code to support data breakpoints\r\n\t\tresponse.body.supportsDataBreakpoints = false;\r\n\t\tresponse.body.supportsConditionalBreakpoints = true;\r\n\t\t// make VS Code to support completion in REPL\r\n\t\tresponse.body.supportsCompletionsRequest = false;\r\n\t\tresponse.body.completionTriggerCharacters = [\".\", \"[\"];\r\n\r\n\t\t// make VS Code to send cancelRequests\r\n\t\tresponse.body.supportsCancelRequest = false;\r\n\r\n\t\t// make VS Code send the breakpointLocations request\r\n\t\tresponse.body.supportsBreakpointLocationsRequest = true;\r\n\t\tresponse.body.supportsExceptionInfoRequest = true;\r\n\t\tresponse.body.supportsRestartRequest = true;\r\n\r\n\r\n\t\t// since this debug adapter can accept configuration requests like 'setBreakpoint' at any time,\r\n\t\t// we request them early by sending an 'initializeRequest' to the frontend.\r\n\t\t// The frontend will end the configuration sequence by calling 'configurationDone' request.\r\n\t\tthis.sendResponse(response);\r\n\t\tthis.sendEvent(new InitializedEvent());\r\n\t}\r\n\r\n\t/**\r\n\t * Called at the end of the configuration sequence.\r\n\t * Indicates that all breakpoints etc. have been sent to the DA and that the 'launch' can start.\r\n\t */\r\n\tprotected configurationDoneRequest(response: DebugProtocol.ConfigurationDoneResponse, args: DebugProtocol.ConfigurationDoneArguments): void {\r\n\t\tsuper.configurationDoneRequest(response, args);\r\n\r\n\t\t// notify the launchRequest that configuration has finished\r\n\r\n\t\tthis._configurationDone.notify();\r\n\t}\r\n\r\n\tprotected async launchRequest(response: DebugProtocol.LaunchResponse, args: LaunchRequestArguments) {\r\n\r\n\t\t// make sure to 'Stop' the buffered logging if 'trace' is not set\r\n\t\t//logger.setup(args.trace ? Logger.LogLevel.Verbose : Logger.LogLevel.Stop, false);\r\n\t\t// wait until configuration has finished (and configurationDoneRequest has been called)\r\n\t\tawait this._configurationDone.wait(1000);\r\n\t\tsetLocalRoutinesPath(args.localRoutinesPath);\r\n\t\t// start the program in the runtime\r\n\t\tthis._mconnect.init(args.hostname, args.port).then(async () => {\r\n\t\t\tif (vscode.window.activeTextEditor?.document)\r\n\t\t\t\tnew MumpsDiagnosticsProvider(vscode.window.activeTextEditor?.document, MUMPSDIAGNOSTICS)\r\n\t\t\tthis._mconnect.start(args.program, !!args.stopOnEntry);\r\n\t\t\tMumpsGlobalProvider.setMconnect(this._mconnect)\r\n\t\t\tthis._program = args.program;\r\n\t\t\tthis.sendResponse(response);\r\n\t\t}).catch(() => {\r\n\t\t\tvscode.window.showErrorMessage(\"Connection to MDEBUG failed. \\nPlease start MDEBUG first.\");\r\n\t\t\tresponse.success = false;\r\n\t\t\tresponse.message = \"Connection to MDEBUG failed. \\nPlease start MDEBUG first.\";\r\n\t\t\tthis.sendResponse(response);\r\n\t\t})\r\n\t}\r\n\r\n\tprotected setBreakPointsRequest(response: DebugProtocol.SetBreakpointsResponse, args: DebugProtocol.SetBreakpointsArguments): void {\r\n\t\tconst path = <string>args.source.path;\r\n\t\tthis._mconnect.clearBreakpoints(path);\r\n\t\tconst actualBreakpoints = this._mconnect.setBreakPoint(path, args.breakpoints);\r\n\r\n\t\t// send back the actual breakpoint positions\r\n\t\tresponse.body = {\r\n\t\t\tbreakpoints: actualBreakpoints\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t\tthis._mconnect.requestBreakpoints();\r\n\t}\r\n\r\n\tprotected threadsRequest(response: DebugProtocol.ThreadsResponse): void {\r\n\r\n\t\t// runtime supports no threads so just return a default thread.\r\n\t\tresponse.body = {\r\n\t\t\tthreads: [\r\n\t\t\t\tnew Thread(MumpsDebugSession.THREAD_ID, \"thread 1\")\r\n\t\t\t]\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected stackTraceRequest(response: DebugProtocol.StackTraceResponse, args: DebugProtocol.StackTraceArguments): void {\r\n\r\n\t\tconst startFrame = typeof args.startFrame === 'number' ? args.startFrame : 0;\r\n\t\tconst maxLevels = typeof args.levels === 'number' ? args.levels : 1000;\r\n\t\tconst endFrame = startFrame + maxLevels;\r\n\r\n\t\tconst stk = this._mconnect.stack(startFrame, endFrame);\r\n\t\tresponse.body = {\r\n\t\t\tstackFrames: stk.frames.map(f => new StackFrame(f.index, f.name, this.createSource(f.file), this.convertDebuggerLineToClient(f.line))),\r\n\t\t\ttotalFrames: stk.count\r\n\t\t};\r\n\t\tif (stk.count === 0) {\r\n\t\t\tthis.sendEvent(new TerminatedEvent());\r\n\t\t}\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected scopesRequest(response: DebugProtocol.ScopesResponse): void {\r\n\r\n\t\tresponse.body = {\r\n\t\t\tscopes: [\r\n\t\t\t\tnew Scope(\"Local\", this._localScope, false),\r\n\t\t\t\tnew Scope(\"System\", this._systemScope, false),\r\n\t\t\t]\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected async variablesRequest(response: DebugProtocol.VariablesResponse, args: DebugProtocol.VariablesArguments) {\r\n\r\n\t\tconst variables: DebugProtocol.Variable[] = [];\r\n\t\tlet insertVariable: DebugProtocol.Variable | undefined;\r\n\t\tconst varReference = args.variablesReference;\r\n\t\tconst varId = this._variableHandles.get(args.variablesReference);\r\n\t\tswitch (varReference) {\r\n\t\t\tcase this._systemScope: {\r\n\t\t\t\tconst varObject = this._mconnect.getVariables(VariableType.system);\r\n\t\t\t\tfor (const varname in varObject) {\r\n\t\t\t\t\tvariables.push({\r\n\t\t\t\t\t\tname: varname,\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tvalue: varObject[varname],\r\n\t\t\t\t\t\tvariablesReference: 0\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase this._localScope: {\r\n\t\t\t\tconst varparts: string[] = varId.split(\"|\");\r\n\t\t\t\tconst indexCount: number = parseInt(varparts.pop() || \"0\");\r\n\t\t\t\tconst varBase = varparts.join(\"|\");\r\n\t\t\t\tconst varObject = this._mconnect.getVariables(VariableType.local);\r\n\t\t\t\tlet lastVar: VarData | undefined = undefined;\r\n\t\t\t\tlet lastRef = \"\";\r\n\t\t\t\tfor (const varname in varObject) {\r\n\t\t\t\t\tconst actualVar = MumpsDebugSession.varAnalyze(varname, varObject[varname]);\r\n\t\t\t\t\tif (lastVar === undefined) { //First Variable not processed\r\n\t\t\t\t\t\tlastVar = actualVar;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// eslint-disable-next-line no-cond-assign\r\n\t\t\t\t\tif (insertVariable = this._checkVars(lastVar, actualVar, indexCount, varBase, lastRef)) {\r\n\t\t\t\t\t\tif (insertVariable.variablesReference !== 0) { lastRef = lastVar.bases[indexCount]; }\r\n\t\t\t\t\t\tvariables.push(insertVariable);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastVar = actualVar;\r\n\t\t\t\t}\r\n\t\t\t\tif (lastVar !== undefined) { // process Last Variable if there was minimum one\r\n\t\t\t\t\tconst dummyVar: VarData = { name: \"\", \"indexCount\": 0, \"bases\": [], \"content\": \"\" }\r\n\t\t\t\t\tconst insertVariable = this._checkVars(lastVar, dummyVar, indexCount, varBase, lastRef)\r\n\t\t\t\t\tif (insertVariable) {\r\n\t\t\t\t\t\tvariables.push(insertVariable);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresponse.body = {\r\n\t\t\tvariables: variables\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\t//checkVars checks if Variable has to be inserted in Var-Display and if it has descendants\r\n\tprivate _checkVars(lastVar: VarData, actualVar: VarData, indexCount: number, varBase: string, lastRef: string): DebugProtocol.Variable | undefined {\r\n\t\tlet returnVar: DebugProtocol.Variable | undefined = undefined;\r\n\t\tlet actualReference = 0;\r\n\t\tif (indexCount === 0 || (lastVar.bases[indexCount - 1] === varBase && lastVar.indexCount > indexCount)) {\r\n\t\t\tif (lastVar.indexCount > indexCount + 1) {\r\n\t\t\t\tif (lastRef !== lastVar.bases[indexCount]) {\r\n\t\t\t\t\tlet name = lastVar.bases[indexCount];\r\n\t\t\t\t\tif (indexCount > 0) { name += \")\"; }\r\n\t\t\t\t\tif (this._variableBases[lastVar.bases[indexCount]] === undefined) {\r\n\t\t\t\t\t\tthis._variableBases[lastVar.bases[indexCount]] = this._variableHandles.create(lastVar.bases[indexCount] + \"|\" + (indexCount + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturnVar = {\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tvalue: 'undefined',\r\n\t\t\t\t\t\tvariablesReference: this._variableBases[lastVar.bases[indexCount]]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else { //lastVar.indexCount==indexCount+1\r\n\t\t\t\tif (lastVar.bases[indexCount] === actualVar.bases[indexCount]) {\r\n\t\t\t\t\tif (this._variableBases[lastVar.bases[indexCount]] === undefined) {\r\n\t\t\t\t\t\tthis._variableBases[lastVar.bases[indexCount]] = this._variableHandles.create(lastVar.bases[indexCount] + \"|\" + (indexCount + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactualReference = this._variableBases[lastVar.bases[indexCount]];\r\n\t\t\t\t}\r\n\t\t\t\treturnVar = {\r\n\t\t\t\t\tname: lastVar.name,\r\n\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\tvalue: lastVar.content,\r\n\t\t\t\t\tvariablesReference: actualReference\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn returnVar\r\n\t}\r\n\tprotected continueRequest(response: DebugProtocol.ContinueResponse): void {\r\n\t\tthis._mconnect.continue();\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected nextRequest(response: DebugProtocol.NextResponse): void {\r\n\t\tthis._mconnect.step(\"OVER\");\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected stepInRequest(response: DebugProtocol.StepInResponse): void {\r\n\t\tthis._mconnect.step(\"INTO\");\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected stepOutRequest(response: DebugProtocol.StepOutResponse): void {\r\n\t\tthis._mconnect.step(\"OUTOF\");\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected async evaluateRequest(response: DebugProtocol.EvaluateResponse, args: DebugProtocol.EvaluateArguments) {\r\n\t\tif (args.context === \"hover\" || args.context === \"repl\") {\r\n\t\t\tthis._mconnect.getSingleVar(args.expression).then((varReply: VarData) => {\r\n\t\t\t\tresponse.body = {\r\n\t\t\t\t\tresult: varReply.name + \" := \" + varReply.content,\r\n\t\t\t\t\tvariablesReference: 0\r\n\t\t\t\t}\r\n\t\t\t\tif (!args.expression.includes(\")\") && this._variableBases[args.expression] !== undefined) {\r\n\t\t\t\t\tresponse.body.variablesReference = this._variableBases[args.expression];\r\n\t\t\t\t}\r\n\t\t\t\tthis.sendResponse(response);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected async restartRequest(response: DebugProtocol.RestartResponse) {\r\n\t\tconst sourceLines = readFileSync(this._program).toString().split('\\n');\r\n\t\tthis._mconnect.checkRoutine(sourceLines).then((errorLines: string[]) => {\r\n\t\t\tif (errorLines.length) {\r\n\t\t\t\tvscode.window.showErrorMessage(\"File contains Problems - No Restart possible!\");\r\n\t\t\t} else {\r\n\t\t\t\tthis._mconnect.restart(this._program);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected disconnectRequest(response: DebugProtocol.DisconnectResponse): void {\r\n\t\tthis._mconnect.disconnect();\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprivate createSource(filePath: string): Source {\r\n\t\treturn new Source(basename(filePath), this.convertDebuggerPathToClient(filePath), undefined, undefined, 'mumps-adapter-data');\r\n\t}\r\n\r\n\tprotected async exceptionInfoRequest(response: DebugProtocol.ExceptionInfoResponse) {\r\n\t\tconst statVariable: VarData = await this._mconnect.getSingleVar(\"$ZSTATUS\");\r\n\t\tconst status = statVariable.content.split(\",\");\r\n\t\tconst trashlength = status[0].length + status[1].length + status[2].length + 4;\r\n\t\tconst description = 'Line :' + status[1] + \" \" + statVariable.content.substring(trashlength);\r\n\t\tresponse.body = {\r\n\t\t\texceptionId: status[2],\r\n\t\t\tdescription,\r\n\t\t\tbreakMode: 'always',\r\n\t\t\tdetails: {\r\n\t\t\t\ttypeName: 'ErrorException',\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprivate static varAnalyze(varname: string, content: string): VarData {\r\n\t\tlet indexcount = 1;\r\n\t\tconst bases: string[] = [];\r\n\t\tconst length = varname.length;\r\n\t\tconst klammerpos = varname.indexOf(\"(\");\r\n\t\tlet countKomma = true;\r\n\t\tif (klammerpos > 0) {\r\n\t\t\tbases.push(varname.substring(0, klammerpos));\r\n\t\t\tindexcount++;\r\n\t\t\tfor (let i = klammerpos; i < length; i++) {\r\n\t\t\t\tif (varname.substring(i, i + 1) === \",\" && countKomma) {\r\n\t\t\t\t\tbases.push(varname.substring(0, i));\r\n\t\t\t\t\tindexcount++;\r\n\t\t\t\t}\r\n\t\t\t\tif (varname.substring(i, i + 1) === '\"') { countKomma = !countKomma; }\r\n\t\t\t}\r\n\t\t\tbases.push(varname.substring(0, varname.length - 1));\r\n\t\t} else {\r\n\t\t\tbases.push(varname);\r\n\t\t}\r\n\t\treturn { \"name\": varname, \"indexCount\": indexcount, \"bases\": bases, content };\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\n\r\nexport default class MumpsDefinitionProvider {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tprovideDefinition(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenRefLocation();\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\nimport { LineToken, TokenType, ErrorInformation } from './mumpsLineParser'\nimport MumpsParseDb from './mumpsParseDb';\nimport { convertMumpsPosition } from './mumpsConnect';\n\ninterface Parameter {\n\tname: string,\n\tposition: number\n}\ninterface Subroutine {\n\tstartLine: number,\n\tendLine: number\n\tparameters: Parameter[]\n}\ninterface GeneralSubroutine {\n\tname: string,\n\tstartLine: number,\n\tendLine: number\n}\ninterface VariableState {\n\tnewedAtLine?: number[],\n\tnewedAtPostion: number[],\n\tnewedAtLevel?: number[],\n\tisExcluded?: boolean,\n\tisParameter?: boolean,\n\tisUsed?: boolean\n\tparameterPosition: number\n}\ninterface VariableStates {\n\tname: VariableState\n}\nenum QuitState {\n\tnoQuit, behindQuit, behindLevelQuit\n}\nconst symbols: vscode.SymbolInformation[] = [];\n\n/**\n * Checks if mumps routines NEWs variables correctly\n * Checks if intendation levels are correct\n * Checks if there's unreachable code\n *\n */\nexport default class MumpsDiagnosticsProvider {\n\tprivate _parseDb: MumpsParseDb\n\tprivate _linetokens: LineToken[][] = [];\n\tprivate _errorInformation: ErrorInformation[] = []\n\tprivate _diags: vscode.Diagnostic[] = [];\n\tprivate _variablesToBeIgnored: string[] = [];\n\tprivate _enableVariableCheck = true;\n\tprivate _varStates: VariableStates;\n\tprivate _levelExclusiveNew: number[];\n\tprivate _subroutines: Subroutine[] = [];\n\tprivate _labelTable: { [key: string]: number } = {};\n\tprivate _document: vscode.TextDocument;\n\tprivate _routine: Subroutine = { startLine: -1, endLine: -1, parameters: [] };\n\tprivate _level = 0;\n\tprivate _lineWithDo = -2;\n\tprivate _isBehindQuit: QuitState[] = [];\n\tprivate _startUnreachable: vscode.Position | false = false;\n\tprivate _activeSubroutine: GeneralSubroutine = { name: '', startLine: -1, endLine: -1 }\n\tconstructor(document: vscode.TextDocument, collection: vscode.DiagnosticCollection) {\n\t\tif (document && document.languageId === 'mumps') {\n\t\t\tthis._parseDb = MumpsParseDb.getInstance(document)\n\t\t\tthis._linetokens = this._parseDb.getDocumentTokens()\n\t\t\tthis._errorInformation = this._parseDb.getDocumentErrors()\n\t\t\tthis._document = document;\n\t\t\tthis._diags = [];\n\t\t\tfor (let i = 0; i < 32; i++) { this._isBehindQuit.push(QuitState.noQuit) }\n\t\t\tconst configuration = vscode.workspace.getConfiguration();\n\t\t\tif (configuration.mumps.variablesToBeIgnoredAtNewCheck !== undefined) {\n\t\t\t\tthis._variablesToBeIgnored = configuration.mumps.variablesToBeIgnoredAtNewCheck.split(\",\");\n\t\t\t}\n\t\t\tif (configuration.mumps.enableVariableCheck !== undefined) {\n\t\t\t\tthis._enableVariableCheck = configuration.mumps.enableVariableCheck;\n\t\t\t}\n\t\t\tcollection.delete(document.uri);\n\t\t\tcollection.clear();\n\t\t\tthis._generateLabelTable(document);\n\t\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\t\tconst tokens = this._linetokens[i]\n\t\t\t\tconst errorInformation = this._errorInformation[i]\n\t\t\t\tif (errorInformation.text !== '') {\n\t\t\t\t\tthis._addWarning(errorInformation.text, i, errorInformation.position, -1, vscode.DiagnosticSeverity.Error)\n\t\t\t\t}\n\t\t\t\tthis._checkLine(i, tokens);\n\t\t\t}\n\t\t\tif (this._activeSubroutine.startLine > -1) {\n\t\t\t\tthis._addSymbol(this._activeSubroutine.name, this._activeSubroutine.startLine, this._linetokens.length);\n\t\t\t}\n\t\t\tfor (let i = 0; i < this._subroutines.length; i++) {\n\t\t\t\tthis.analyzeSubroutine(this._subroutines[i]);\n\t\t\t}\n\t\t\tif (this._diags) {\n\t\t\t\tcollection.set(document.uri, this._diags);\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Checks a single subroutine if variables are NEWed correctly\n\t * sets found problems in this._warnings\n\t * @param routine subroutine to be checked\n\t */\n\tpublic analyzeSubroutine(routine: Subroutine): void {\n\t\tlet code: string = \"\";\n\t\tif (this._enableVariableCheck) {\n\t\t\tthis._varStates = {} as VariableStates;\n\t\t\tthis._levelExclusiveNew = [];\n\t\t\tlet level = 0; //intendation-level\n\t\t\tfor (let i = 0; i < routine.parameters.length; i++) {\n\t\t\t\tthis._varStates[routine.parameters[i].name] = { isParameter: true, parameterPosition: routine.parameters[i].position }\n\t\t\t}\n\t\t\tfor (let i = routine.startLine; i <= routine.endLine; i++) {\n\t\t\t\tlet intendationFound = false;\n\t\t\t\tconst line = this._parseDb.getLine(i)\n\t\t\t\tfor (let j = 0; j < this._linetokens[i].length; j++) {\n\t\t\t\t\tlet token = this._linetokens[i][j];\n\t\t\t\t\tif (i === routine.startLine && j === 0) { // skip parameters\n\t\t\t\t\t\twhile (++j < this._linetokens[i].length && this._linetokens[i][j].type === TokenType.local) { /* empty */ }\n\t\t\t\t\t\tif (j < this._linetokens[i].length) {\n\t\t\t\t\t\t\ttoken = this._linetokens[i][j];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (token.type === TokenType.intendation) {\n\t\t\t\t\t\tintendationFound = true;\n\t\t\t\t\t\tconst newLevel = token.name.length\n\t\t\t\t\t\tif (newLevel < level) {\n\t\t\t\t\t\t\tthis._reduceIntendationLevel(level, newLevel);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlevel = newLevel;\n\t\t\t\t\t} else if (token.type === TokenType.comment) {\n\t\t\t\t\t\tif (!intendationFound && level > 0) {\n\t\t\t\t\t\t\tthis._reduceIntendationLevel(level, 0);\n\t\t\t\t\t\t\tlevel = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\t\t\tif (!intendationFound && level > 0) {\n\t\t\t\t\t\t\tthis._reduceIntendationLevel(level, 0);\n\t\t\t\t\t\t\tlevel = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (token.longName === \"NEW\") {\n\t\t\t\t\t\t\tlet anyVariablesNewed = false;\n\t\t\t\t\t\t\tlet containsExclusions = false;\n\t\t\t\t\t\t\t//exclude postcondition\n\t\t\t\t\t\t\twhile (++j < this._linetokens[i].length) {\n\t\t\t\t\t\t\t\tconst token = this._linetokens[i][j]\n\t\t\t\t\t\t\t\tconst position = token.position\n\t\t\t\t\t\t\t\tif (line[position - 1] === \" \") {\n\t\t\t\t\t\t\t\t\t--j\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else if (token.type === TokenType.local) {\n\t\t\t\t\t\t\t\t\tthis._checkNewed(token.name, level, i, token.position)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twhile (++j < this._linetokens[i].length &&\n\t\t\t\t\t\t\t\t(this._linetokens[i][j].type === TokenType.local ||\n\t\t\t\t\t\t\t\t\tthis._linetokens[i][j].type === TokenType.sysvariable)) {\n\t\t\t\t\t\t\t\tanyVariablesNewed = true;\n\t\t\t\t\t\t\t\ttoken = this._linetokens[i][j];\n\t\t\t\t\t\t\t\tif (token.isExcludedVariable) {\n\t\t\t\t\t\t\t\t\tcontainsExclusions = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (token.type === TokenType.local) {\n\t\t\t\t\t\t\t\t\tconst varName = token.name;\n\t\t\t\t\t\t\t\t\tlet message = '';\n\t\t\t\t\t\t\t\t\tconst varState: VariableState = this._varStates[varName] ? this._varStates[varName] : { isExcluded: token.isExcludedVariable }\n\t\t\t\t\t\t\t\t\t// Variable is already NEWed or used\n\t\t\t\t\t\t\t\t\tif (varState.isParameter) {\n\t\t\t\t\t\t\t\t\t\tif (token.isExcludedVariable) {\n\t\t\t\t\t\t\t\t\t\t\tvarState.isExcluded = true;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif (level === 0) { //NEW inside higher intendation-level should be possible\n\t\t\t\t\t\t\t\t\t\t\t\tmessage = \"NEW hides formal parameter \" + varName;\n\t\t\t\t\t\t\t\t\t\t\t\tcode = \"NewHidesParam:\" + varName;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (!varState.newedAtLevel) { // Variable not NEWed yet - New is OK\n\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLevel = [level];\n\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLine = [i];\n\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtPostion = [token.position];\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif (varState.newedAtLevel.indexOf(level) > -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tmessage = \"Variable \" + varName + \" already mentioned in NEW command\"\n\t\t\t\t\t\t\t\t\t\t\t\tcode = \"VarAlreadyNewed:\" + varName\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLevel.push(level);\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLine!.push(i);\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtPostion!.push(token.position);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (message !== \"\") {\n\t\t\t\t\t\t\t\t\t\tthis._addWarning(message, i, token.position, token.name.length, vscode.DiagnosticSeverity.Warning, code);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis._varStates[varName] = varState;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (anyVariablesNewed === false) {\n\t\t\t\t\t\t\t\tcontainsExclusions = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (containsExclusions) {\n\t\t\t\t\t\t\t\tthis._levelExclusiveNew.push(level);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//Check if parameters are hidden by NEW-exclusion\n\t\t\t\t\t\t\tif (routine.parameters.length > 0 && containsExclusions && level === 0) {\n\t\t\t\t\t\t\t\tfor (let k = 0; k < routine.parameters.length; k++) {\n\t\t\t\t\t\t\t\t\tif (!this._varStates[routine.parameters[k].name].isExcluded) {\n\t\t\t\t\t\t\t\t\t\tthis._addWarning(\"NEW hides formal parameters\", i, token.position, token.name.length,\n\t\t\t\t\t\t\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\t\t\t\t\t\t\"NewHidesParam:\" + this._varStates[routine.parameters[k].name]);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (token.type === TokenType.local) {  // local variable found at a non NEW command\n\t\t\t\t\t\tconst varName = token.name;\n\t\t\t\t\t\tthis._checkNewed(varName, level, i, token.position);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._checkVariableUsage(routine)\n\t\t}\n\t}\n\t/**\n\t * Check if Variables are formal parameters but not used, or NEWed but not used\n\t * @param routine Subroutine to check\n\t * @param varStates array of found variable-states\n\t */\n\tprivate _checkVariableUsage(routine: Subroutine): void {\n\t\tfor (const key in this._varStates) {\n\t\t\tconst state: VariableState = this._varStates[key];\n\t\t\tif (state.isParameter && !state.isUsed && !this._isIgnoredVariable(key)) {\n\t\t\t\tthis._addWarning(\"Variable \" + key + \" is a formal parameter but not used\", routine.startLine,\n\t\t\t\t\tstate.parameterPosition,\n\t\t\t\t\tkey.length,\n\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\"FormalNotUsed:\" + key);\n\t\t\t} else if (state.newedAtLine && state.newedAtLine.length > 0 && !state.isUsed && !this._isIgnoredVariable(key)) {\n\t\t\t\tthis._addWarning(\"Variable \" + key + \" is NEWed but not used\",\n\t\t\t\t\tstate.newedAtLine[0],\n\t\t\t\t\tstate.newedAtPostion[0],\n\t\t\t\t\tkey.length,\n\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\"NewedButNotUsed:\" + key\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Check if a local Variable is correctly NEWed or generate Warning\n\t * @param varName Variable to be checked\n\t * @param level intendation-level on which Variable is found\n\t * @param line Line where variable is found\n\t * @param position Position inside Line\n\t */\n\tprivate _checkNewed(varName: string, level: number, line: number, position: number): void {\n\t\t//Check Variable-Ignore-List\n\t\tlet varState = this._varStates[varName];\n\t\tif (!this._isIgnoredVariable(varName)) {\n\t\t\tlet isNewed = false;\n\t\t\tfor (let k = 0; k < this._levelExclusiveNew.length; k++) {\n\t\t\t\tif (this._levelExclusiveNew[k] <= level) {\n\t\t\t\t\tisNewed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isNewed) {\n\t\t\t\tif (varState) {\n\t\t\t\t\tif (!varState.isParameter) {\n\t\t\t\t\t\tif (varState.newedAtLevel) {\n\t\t\t\t\t\t\tfor (let i = 0; i < varState.newedAtLevel.length; i++) {\n\t\t\t\t\t\t\t\tif (varState.newedAtLevel[i] <= level) {\n\t\t\t\t\t\t\t\t\tisNewed = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisNewed = true;\n\t\t\t\t\t}\n\t\t\t\t\tvarState.isUsed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isNewed) {\n\t\t\t\tthis._addWarning(\"Variable \" + varName + \" not NEWed\", line, position, varName.length,\n\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\"VarNotNewed:\" + varName);\n\t\t\t}\n\t\t}\n\t\tif (varState) {\n\t\t\tvarState.isUsed = true;\n\t\t} else {\n\t\t\tvarState = { isUsed: true }\n\t\t}\n\t\tthis._varStates[varName] = varState;\n\t}\n\t/**\n\t * Remember a new Warning in this._warnings\n\t * @param message Warning message\n\t * @param line Line where th problem was found\n\t * @param startPosition Position inside Line where the problem was found\n\t * @param len Length of variable-name\n\t */\n\tprivate _addWarning(message: string, line: number, startPosition: number, len: number, severity?, code?: string) {\n\t\tif (severity === undefined) {\n\t\t\tseverity = vscode.DiagnosticSeverity.Warning;\n\t\t}\n\t\tlet endline = line;\n\t\tlet endPosition = startPosition + len;\n\t\tif (len === -1) { //mark complete rest of line\n\t\t\tendline = line + 1;\n\t\t\tendPosition = 0;\n\t\t}\n\t\tthis._diags.push({\n\t\t\tcode,\n\t\t\tmessage,\n\t\t\trange: new vscode.Range(new vscode.Position(line, startPosition), new vscode.Position(endline, endPosition)),\n\t\t\tseverity,\n\t\t\tsource: ''\n\t\t});\n\t}\n\tprivate _checkLine(line: number, tokens: LineToken[]) {\n\t\tlet ifFlag = false;\n\t\tlet intendationFound = false;\n\t\tif (tokens.length === 0) { //empty line = intendation 0 is it OK?\n\t\t\tif (line === this._lineWithDo + 1) {\n\t\t\t\tthis._addWarning(\"Expected intendation level: \" + (this._level + 1) + \", found: 0\", line, 0, 1, vscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\"ExpectedIntendation:\" + (this._level + 1));\n\t\t\t\tthis._lineWithDo = -2;\n\t\t\t}\n\t\t\tthis._level = 0;\n\t\t\tthis._removeQuits(0);\n\t\t}\n\t\tfor (let tokenId = 0; tokenId < tokens.length; tokenId++) { // iterate over every token in actual line\n\t\t\tlet token: LineToken = tokens[tokenId];\n\t\t\tif (token.type === TokenType.comment && token.name.match(/ignoreVars:/)) { //Check for IgnoreVars-directive\n\t\t\t\tthis._variablesToBeIgnored = this._variablesToBeIgnored.concat(token.name.split(\"ignoreVars:\")[1].split(\",\"));\n\t\t\t}\n\t\t\tif (tokenId === 0 && token.type === TokenType.label) { \t//If there was unreachable code before this label\n\t\t\t\t//save a warning\n\t\t\t\t//Remember label in symbol library\n\t\t\t\tthis._removeQuits(this._level - 1)\n\t\t\t\tthis._checkUnreachable(line, token)\n\t\t\t\tif (tokenId === 0 && token.type === TokenType.label) {\n\t\t\t\t\tif (this._activeSubroutine.startLine > -1) {\n\t\t\t\t\t\tthis._addSymbol(this._activeSubroutine.name, this._activeSubroutine.startLine, line)\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeSubroutine.startLine = line;\n\t\t\t\t\tthis._activeSubroutine.name = token.name;\n\t\t\t\t\tif (tokens[1] !== undefined && tokens[1].type === TokenType.local) { //Begin of a parametrized subroutine\n\t\t\t\t\t\tthis._routine.startLine = line;\n\t\t\t\t\t\twhile (++tokenId < tokens.length && tokens[tokenId].type === TokenType.local) {\n\t\t\t\t\t\t\tthis._routine.parameters.push({ name: tokens[tokenId].name, position: tokens[tokenId].position });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tokenId >= tokens.length) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttoken = tokens[tokenId];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === TokenType.keyword || token.type === TokenType.comment) { //Check intendation level\n\t\t\t\tif (intendationFound === false) {\n\t\t\t\t\tif (line === this._lineWithDo + 1) {\n\t\t\t\t\t\tthis._addWarning(\"Expected intendation level: \" + (this._level + 1) + \", found: \" + this._level,\n\t\t\t\t\t\t\tline, 0, token.position, vscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\t\t\"ExpectedIntendation:\" + (this._level + 1));\n\t\t\t\t\t\tthis._lineWithDo = -2;\n\t\t\t\t\t}\n\t\t\t\t\tthis._level = 0;\n\t\t\t\t\tthis._removeQuits(0)\n\t\t\t\t\tthis._checkUnreachable(line, token)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\tthis._checkUnreachable(line, token)\n\t\t\t\tconst command = token.longName;\n\t\t\t\tif (command === \"IF\" || command === \"ELSE\" || command === \"FOR\") {\n\t\t\t\t\tifFlag = true;\n\t\t\t\t}\n\t\t\t\tif (command === \"DO\" && token.hasArguments === false) {\n\t\t\t\t\tthis._lineWithDo = line;\n\t\t\t\t}\n\t\t\t\tif (!ifFlag && (command === \"QUIT\" || command === \"GOTO\" || command === \"HALT\") && !token.isPostconditioned) {\n\t\t\t\t\tlet hasPostcondition = false;\n\t\t\t\t\tif (command === \"GOTO\") { //Check if GOTO argument is postconditioned\n\t\t\t\t\t\tfor (let k = tokenId + 1; k < tokens.length; k++) {\n\t\t\t\t\t\t\tif (tokens[k].type === TokenType.entryref) {\n\t\t\t\t\t\t\t\tif (!this._labelExists(tokens[k].name))  // && !/^\\+\\d+$/.test(tokens[k].name))\n\t\t\t\t\t\t\t\t\tthis._addWarning(\"Entry-Reference not found\",\n\t\t\t\t\t\t\t\t\t\tline, tokens[k].position, tokens[k].name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (tokens[k].type === TokenType.argPostcondition) {\n\t\t\t\t\t\t\t\thasPostcondition = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (tokens[k].type === TokenType.keyword) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!hasPostcondition) {\n\t\t\t\t\t\tthis._routine.endLine = line;\n\t\t\t\t\t\tif (this._routine.startLine !== -1) {\n\t\t\t\t\t\t\tthis._subroutines.push(this._routine);\n\t\t\t\t\t\t\tthis._routine = { startLine: -1, endLine: -1, parameters: [] };\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (line === this._lineWithDo) {\n\t\t\t\t\t\t\tthis._isBehindQuit[this._level] = QuitState.behindLevelQuit\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._isBehindQuit[this._level] = QuitState.behindQuit\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === TokenType.intendation) { //check if new intendation level is OK and remember new level\n\t\t\t\tconst expectedLevel = line === this._lineWithDo + 1 ? this._level + 1 : this._level;\n\t\t\t\tthis._level = token.name.length;\n\t\t\t\tthis._removeQuits(this._level)\n\t\t\t\tthis._checkUnreachable(line, token)\n\t\t\t\tintendationFound = true;\n\t\t\t\tif (this._level > expectedLevel) {\n\t\t\t\t\tthis._addWarning(\"Intendation Level wrong, found: \" + this._level + \", expected: \" + expectedLevel,\n\t\t\t\t\t\tline, 0, token.position, vscode.DiagnosticSeverity.Warning, \"ExpectedIntendation:\" + expectedLevel);\n\t\t\t\t}\n\t\t\t\tif (line === this._lineWithDo + 1 && this._level < expectedLevel) {\n\t\t\t\t\tthis._addWarning(\"Higher intendation expected after argumentless Do\", line, 0, token.position,\n\t\t\t\t\t\tvscode.DiagnosticSeverity.Warning, \"ExpectedIntendation:\" + expectedLevel);\n\t\t\t\t}\n\t\t\t\tthis._lineWithDo = -2;\n\t\t\t}\n\t\t\tif (token.type === TokenType.entryref || token.type === TokenType.exfunction) {\n\t\t\t\tif (!this._labelExists(token.name)) this._addWarning(\"Entry-Reference not found\", line, token.position, token.name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t}\n\t\t}\n\t}\n\tprivate _checkUnreachable(line: number, token: LineToken) {\n\t\tlet isBehindQuit = false\n\t\tfor (let i = 0; i < this._level; i++) { if (this._isBehindQuit[i] === QuitState.behindQuit) { isBehindQuit = true; break } }\n\t\tif (this._isBehindQuit[this._level] !== QuitState.noQuit) isBehindQuit = true\n\t\tif (isBehindQuit && token.type !== TokenType.comment) {\n\t\t\tif (this._startUnreachable === false) {\n\t\t\t\tthis._startUnreachable = new vscode.Position(line, token.position);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._startUnreachable !== false) {\n\t\t\t\t//Only if there were Code lines after a quit or a goto\n\t\t\t\tthis._diags.push({\n\t\t\t\t\tcode: '',\n\t\t\t\t\tmessage: \"Unreachable Code\",\n\t\t\t\t\trange: new vscode.Range(this._startUnreachable, new vscode.Position(line, 0)),\n\t\t\t\t\tseverity: vscode.DiagnosticSeverity.Warning,\n\t\t\t\t\tsource: ''\n\t\t\t\t});\n\t\t\t\tthis._startUnreachable = false;\n\t\t\t}\n\t\t}\n\t}\n\tprivate _removeQuits(level: number) {\n\t\tfor (let i = level + 1; i < 32; i++) { this._isBehindQuit[i] = QuitState.noQuit }\n\t}\n\tprivate _generateLabelTable(document: vscode.TextDocument) {\n\t\tthis._labelTable = {};\n\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\tconst lineTokens = this._linetokens[i]\n\t\t\tif (lineTokens.length > 0 && lineTokens[0].type === TokenType.label) {\n\t\t\t\tthis._labelTable[lineTokens[0].name] = i;\n\t\t\t}\n\t\t}\n\t}\n\tprivate _labelExists(name: string): boolean {\n\t\tif (name.startsWith(\"$$\")) name = name.substring(2)\n\t\tif (name.indexOf(\"^\") > -1) {\n\t\t\tconst filePosition = convertMumpsPosition(name, false);\n\t\t\tif (filePosition.file !== \"\") {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (name.includes(\"+\")) name = name.split(\"+\")[0];  //In case of label+offset\n\t\t\tif (name === \"\") return true\n\t\t\treturn this._labelTable[name] !== undefined;\n\t\t}\n\t}\n\t/**\n\t * Checks if the given variablename is on the ignore-list\n\t * @param variable\n\t * @returns true if variable can be ignored at NEW-Check\n\t */\n\tprivate _isIgnoredVariable(variable: string): boolean {\n\t\tlet isIgnoredVariable = false;\n\t\tfor (let k = 0; k < this._variablesToBeIgnored.length; k++) {\n\t\t\tif (new RegExp(\"^\" + this._variablesToBeIgnored[k] + \"$\").test(variable)) {\n\t\t\t\tisIgnoredVariable = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn isIgnoredVariable;\n\t}\n\t/**\n\t * Clears all NEWs that were started above the new intendation-level\n\t * @param level old intendation-level\n\t * @param newLevel new-intendation-level\n\t */\n\tprivate _reduceIntendationLevel(level: number, newLevel: number) {\n\t\tfor (let k = newLevel + 1; k <= level; k++) {\n\t\t\tconst index = this._levelExclusiveNew.indexOf(k);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._levelExclusiveNew.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\tfor (const key in this._varStates) {\n\t\t\tconst state = this._varStates[key];\n\t\t\tlet found = false;\n\t\t\tlet memLine = 0;\n\t\t\tlet memPosition = 0;\n\t\t\tif (state.newedAtLevel) {\n\t\t\t\tfor (let k = newLevel + 1; k <= level; k++) {\n\t\t\t\t\tconst index = state.newedAtLevel?.indexOf(k)\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tmemLine = state.newedAtLine[index];\n\t\t\t\t\t\tmemPosition = state.newedAtPostion[index];\n\t\t\t\t\t\tstate.newedAtLevel.splice(index, 1);\n\t\t\t\t\t\tstate.newedAtLine.splice(index, 1);\n\t\t\t\t\t\tstate.newedAtPostion.splice(index, 1);\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tthis._varStates[key] = state;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found && !state.isUsed) {\n\t\t\t\t\tthis._addWarning(\"Variable \" + key + \" is NEWed but not used\",\n\t\t\t\t\t\tmemLine,\n\t\t\t\t\t\tmemPosition,\n\t\t\t\t\t\tkey.length, vscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\t\"NewedButNotUsed:\" + key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate _addSymbol(name: string, startLine: number, endLine: number) {\n\t\tconst startPosition = new vscode.Position(startLine, 0);\n\t\tconst endPosition = new vscode.Position(endLine, 0);\n\t\tconst methodRange = new vscode.Location(this._document.uri, new vscode.Range(startPosition, endPosition));\n\t\tsymbols.push(new vscode.SymbolInformation(name, vscode.SymbolKind.Function, '', methodRange));\n\t}\n}\n","import * as vscode from 'vscode';\nimport { MumpsLineParser, LabelInformation } from './mumpsLineParser'\n\nexport default class MumpsDocumentSymbolProvider implements vscode.DocumentSymbolProvider {\n\t/*eslint class-methods-use-this: 0*/\n\tpublic provideDocumentSymbols(document: vscode.TextDocument): Promise<vscode.SymbolInformation[]> {\n\t\treturn new Promise(resolve => {\n\n\t\t\tconst labels: LabelInformation[] = MumpsLineParser.getLabels(document.getText());\n\t\t\tconst symbols: vscode.SymbolInformation[] = [];\n\n\t\t\tfor (let i = 0; i < labels.length; i++) {\n\t\t\t\tconst startPosition = new vscode.Position(labels[i].line, 0);\n\t\t\t\tlet endPostionLine = document.lineCount - 1;\n\t\t\t\tif (labels[i + 1] !== undefined) {\n\t\t\t\t\tendPostionLine = labels[i + 1].line\n\t\t\t\t}\n\t\t\t\tconst endPosition = new vscode.Position(endPostionLine, 0);\n\t\t\t\tconst methodRange = new vscode.Location(document.uri, new vscode.Range(startPosition, endPosition));\n\t\t\t\tsymbols.push(new vscode.SymbolInformation(labels[i].name, vscode.SymbolKind.Function, '', methodRange));\n\t\t\t}\n\n\t\t\tresolve(symbols);\n\t\t})\n\t}\n}","import * as vscode from 'vscode';\r\nconst DIVIDERLINE = \"\\t;****************\\n\"\r\n\r\nexport default function mumpsDocumenter() {\r\n\tconst editor = vscode.window.activeTextEditor\r\n\tif (editor) {\r\n\t\tconst document = editor.document\r\n\t\tlet InsertPosition = editor.selection.start.with(editor.selection.start.line, 0)\r\n\r\n\t\t//if the line is empty look down for the label\r\n\t\twhile (InsertPosition.line < document.lineCount) {\r\n\t\t\tconst txt = editor.document.lineAt(InsertPosition.line).text\r\n\t\t\tif (txt.replace(/\\t| /ig, \"\") === \"\") {\r\n\t\t\t\tInsertPosition = InsertPosition.translate(1, 0)\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (InsertPosition.line === document.lineCount) {\r\n\t\t\tInsertPosition = InsertPosition.translate(-1, 0)\r\n\t\t}\r\n\t\t//start moving up the file looking for the label header\r\n\t\twhile (InsertPosition.line >= 0) {\r\n\t\t\tconst text = editor.document.lineAt(InsertPosition.line).text\r\n\t\t\tif (!(text.length === 0 || text.charAt(0) === \" \" || text.charAt(0) === '\\t' || text.charAt(0) === ';')) {\r\n\t\t\t\teditor.edit((editBuilder) => {\r\n\t\t\t\t\teditBuilder.insert(InsertPosition, makeSignature(text))\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tInsertPosition = InsertPosition.translate(-1, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction makeSignature(labelLine: string) {\r\n\tlet Signature = \"\"\r\n\tlet parameterString: string[] = [];\r\n\tSignature += DIVIDERLINE\r\n\tSignature += \"\\t; DESCRIPTION: \\n\"\r\n\tconst parameters = labelLine.match(/\\(.*\\)/);\r\n\tif (parameters !== null && parameters.length > 0) {\r\n\t\tparameterString = parameters[0].toString().substring(1, parameters[0].toString().length - 1).split(\",\")\r\n\t\tif (parameterString.length > 0) {\r\n\t\t\tSignature += \"\\t; PARAMETERS: \\n\"\r\n\t\t\tparameterString.forEach(function (element: string) {\r\n\t\t\t\tSignature += \"\\t;    \" + element + \": \\n\"\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tSignature += \"\\t; RETURNS: \\n\"\r\n\tSignature += \"\\t; REVISIONS: \\n\"\r\n\tSignature += DIVIDERLINE\r\n\treturn Signature;\r\n}\r\n\r\n","import * as vscode from 'vscode';\n\nexport default class MumpsEvalutableExpressionProvider {\n\t/*eslint class-methods-use-this: 0*/\n\tprovideEvaluatableExpression(document: vscode.TextDocument, position: vscode.Position): vscode.ProviderResult<vscode.EvaluatableExpression> {\n\t\tconst lineContent = document.lineAt(position.line).text;\n\t\tif (lineContent.charAt(position.character) === \")\") {\n\t\t\treturn MumpsEvalutableExpressionProvider.getExpression(position.line, lineContent.substring(0, position.character))\n\t\t}\n\t\tlet result: RegExpExecArray | null = null;\n\t\tconst expression = /([ (.,+\\-*_:=])([\\^$]?%?[a-zA-Z][a-zA-Z\\d]*)/g;\n\n\t\t// find the word under the cursor\n\t\t// eslint-disable-next-line no-cond-assign\n\t\twhile (result = expression.exec(lineContent)) {\n\t\t\tlet start = result.index;\n\t\t\tstart += result[0].length - result[2].length; // ignore first part of expression\n\t\t\tconst end = start + result[2].length - 1;\n\t\t\tif (start <= position.character && end >= position.character) {\n\t\t\t\treturn new vscode.EvaluatableExpression(new vscode.Range(position.line, start, position.line, end), result[2]);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\tstatic getExpression(line: number, content: string): vscode.EvaluatableExpression | undefined {\n\t\tlet isInsideString = false;\n\t\tfor (let i = 0; i < content.length; i++) {\n\t\t\tif (content.charAt(i) === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t}\n\t\t}\n\t\tif (isInsideString) { //Closing Bracket is inside a String - no evaluable Expression\n\t\t\treturn;\n\t\t}\n\t\tlet level = 1;\n\t\tlet position = 0;\n\t\tfor (let i = content.length - 1; i > -1; i--) {\n\t\t\tconst char = content.charAt(i);\n\t\t\tif (char === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t}\n\t\t\tif (char === '(' && !isInsideString) {\n\t\t\t\tlevel--;\n\t\t\t\tif (level === 0) {\n\t\t\t\t\tposition = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (char === ')' && !isInsideString) {\n\t\t\t\tlevel++;\n\t\t\t}\n\t\t}\n\t\tif (level === 0) { // Corresponding opening bracket found\n\t\t\tconst part = content.substring(0, position);\n\t\t\tconst expression = /([ (,+\\-*_:=])([\\^$]?%?[a-zA-Z][a-zA-Z\\d]*)$/\n\t\t\tconst match = part.match(expression);\n\t\t\tif (match) {\n\t\t\t\treturn new vscode.EvaluatableExpression(new vscode.Range(line, position - match[2].length, line, content.length + 1));\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n}","import * as vscode from 'vscode';\nimport { LineToken, TokenType } from './mumpsLineParser'\nimport MumpsParseDb from './mumpsParseDb';\n\ntype Subroutines = {\n\t[name: string]: {\n\t\tstartLine: number;\n\t\tendLine: number;\n\t};\n};\n\nexport default class MumpsFoldingProvider implements vscode.FoldingRangeProvider {\n\tprivate _linetokens: LineToken[][] = [];\n\tprivate _subroutines: Subroutines = {};\n\tprivate _foldingRanges: vscode.FoldingRange[] = []\n\tpublic provideFoldingRanges(document: vscode.TextDocument): vscode.ProviderResult<vscode.FoldingRange[]> {\n\t\tconst parseDb = MumpsParseDb.getInstance(document)\n\t\tthis._linetokens = parseDb.getDocumentTokens()\n\t\tthis._foldingRanges = []\n\t\tlet line = -1\n\t\twhile (line !== -2 && line < this._linetokens.length) {\n\t\t\tconst startSubroutine = ++line\n\t\t\tline = this._lookforNextSubroutineEnd(line)\n\t\t\tif (line === -2) break;\n\t\t\tthis._generateFoldingInfo(startSubroutine, line)\n\t\t}\n\t\tObject.keys(this._subroutines).forEach((name) => {\n\t\t\tthis._separateCommentsandCode(name)\n\t\t})\n\t\treturn this._foldingRanges\n\t}\n\tprivate _lookforNextSubroutineEnd(line: number): number {\n\t\tfor (let index = line; index < this._linetokens.length; index++) {\n\t\t\tconst tokens = this._linetokens[index];\n\t\t\tlet subroutineEndFound = false;\n\t\t\tfor (let j = 0; j < tokens.length; j++) {\n\t\t\t\tconst token = tokens[j]\n\t\t\t\tif (token.type === TokenType.intendation) {\n\t\t\t\t\tbreak; // Ignore QUIT etc in indentation-levels > 0\n\t\t\t\t}\n\t\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\t\tconst command = token.longName;\n\t\t\t\t\tif (command === \"FOR\" || command === \"IF\" || command === \"ELSE\") {\n\t\t\t\t\t\tbreak; // Ignore QUIT etc after FOR and IF\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t(command === \"QUIT\" ||\n\t\t\t\t\t\t\tcommand === \"GOTO\" ||\n\t\t\t\t\t\t\tcommand === \"ZGOTO\" ||\n\t\t\t\t\t\t\tcommand === \"HALT\" ||\n\t\t\t\t\t\t\tcommand === \"ZHALT\") &&\n\t\t\t\t\t\ttoken.isPostconditioned === false\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (command === \"GOTO\" || command === \"ZGOTO\") {\n\t\t\t\t\t\t\tlet hasPostcondition = false\n\t\t\t\t\t\t\tfor (let k = j + 1; k < tokens.length; k++) {\n\t\t\t\t\t\t\t\tif (tokens[k].type === TokenType.argPostcondition) {\n\t\t\t\t\t\t\t\t\thasPostcondition = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else if (tokens[k].type === TokenType.keyword) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!hasPostcondition) {\n\t\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (subroutineEndFound) {\n\t\t\t\treturn index\n\t\t\t}\n\t\t}\n\t\treturn -2\n\t}\n\tprivate _separateCommentsandCode(subroutineName: string) {\n\t\tconst subroutine = this._subroutines[subroutineName]\n\t\tlet commentStart = -1\n\t\tlet commentLines = 0\n\t\tfor (let line = subroutine.startLine; line < subroutine.endLine; line++) {\n\t\t\tif (this._linetokens[line][0].type === TokenType.label && this._linetokens[line][0].name === subroutineName) {\n\t\t\t\tif (commentLines > 1) {\n\t\t\t\t\tthis._foldingRanges.push({ start: commentStart, end: commentStart + commentLines - 1 })\n\t\t\t\t}\n\t\t\t\tcommentStart = -1\n\t\t\t\tcommentLines = 0\n\t\t\t\tthis._foldingRanges.push({ start: line, end: subroutine.endLine })\n\t\t\t} else if (this._linetokens[line][0].type === TokenType.comment\n\t\t\t\t|| this._linetokens[line][1].type === TokenType.comment\n\t\t\t\t&& this._linetokens[line][0].type !== TokenType.label) {\n\t\t\t\tif (commentStart === -1) {\n\t\t\t\t\tcommentStart = line\n\t\t\t\t\tcommentLines = 1\n\t\t\t\t} else commentLines++\n\t\t\t} else {\n\t\t\t\tif (commentLines > 1) {\n\t\t\t\t\tthis._foldingRanges.push({ start: commentStart, end: commentStart + commentLines - 1 })\n\t\t\t\t}\n\t\t\t\tcommentStart = -1\n\t\t\t\tcommentLines = 0\n\t\t\t}\n\t\t}\n\t}\n\tprivate _generateFoldingInfo(startLine: number, endLine: number) {\n\t\tfor (let i = startLine; i <= endLine; i++) {\n\t\t\tconst tokens = this._linetokens[i]\n\t\t\tif (tokens[0].type === TokenType.label) {\n\t\t\t\tconst label = tokens[0].name\n\t\t\t\tthis._subroutines[label] = { startLine, endLine }\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}","import * as vscode from 'vscode';\nexport default class MumpsFormattingHelpProvider {\n\t/*eslint class-methods-use-this: 0*/\n\tprovideDocumentFormattingEdits(document: vscode.TextDocument) {\n\t\tconst textEdits: vscode.TextEdit[] = []\n\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\tconst line = document.lineAt(i).text;\n\t\t\tformatDocumentLine(line, i, textEdits);\n\t\t}\n\t\treturn textEdits;\n\t}\n\tprovideDocumentRangeFormattingEdits(document: vscode.TextDocument, range: vscode.Range) {\n\t\tconst textEdits: vscode.TextEdit[] = []\n\t\tfor (let i = range.start.line; i <= range.end.line; i++) {\n\t\t\tconst line = document.lineAt(i).text;\n\t\t\tformatDocumentLine(line, i, textEdits);\n\t\t}\n\t\treturn textEdits;\n\t}\n}\nfunction formatDocumentLine(line: string, lineNumber: number, textEdits) {\n\tconst emptyLine = line.replace(/( |\\t)/ig, \"\");\n\tif (emptyLine.length === 0) {\n\t\ttextEdits.push(vscode.TextEdit.insert(new vscode.Position(lineNumber, 0), \"\\t;\"))\n\t}\n\tif (line.endsWith(\". \") || line.endsWith(\".\")) {\n\t\ttextEdits.push(vscode.TextEdit.insert(new vscode.Position(lineNumber, line.length), \";\"))\n\t}\n\tif (line.startsWith(\" \")) {\n\t\tlet endSpace: number;\n\t\tfor (endSpace = 0; endSpace < line.length; endSpace++) {\n\t\t\tif (line.charAt(endSpace) !== \" \") {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttextEdits.push(vscode.TextEdit.replace(new vscode.Range(new vscode.Position(lineNumber, 0), new vscode.Position(lineNumber, endSpace)), \"\\t\"));\n\t}\n\tif (line.match(/^([A-Za-z%][A-Za-z0-9]*(\\([A-Za-z%][A-Za-z0-9]*(,[A-Za-z%][A-Za-z0-9]*)*\\))?)?[\\t ]+\\./)) { //labeled or unlabeled Line with .\n\t\tlet replacementString = \". \";\n\t\tconst dotPosition = line.indexOf(\".\");\n\t\tlet dotCount = 1;\n\t\tlet spaceCount = 0;\n\t\tlet char = \"\";\n\t\tdo {\n\t\t\tchar = line.charAt(dotCount + spaceCount + dotPosition);\n\t\t\tif (char === \" \") {\n\t\t\t\tspaceCount++;\n\t\t\t} else if (char === \".\") {\n\t\t\t\tdotCount++;\n\t\t\t\treplacementString += \". \";\n\t\t\t}\n\t\t} while (char === \".\" || char === \" \")\n\t\tif (dotCount !== spaceCount) {\n\t\t\ttextEdits.push(vscode.TextEdit.replace(new vscode.Range(new vscode.Position(lineNumber, dotPosition), new vscode.Position(lineNumber, dotPosition + dotCount + spaceCount)), replacementString));\n\t\t}\n\t}\n}\n","import * as vscode from 'vscode';\nimport { MumpsConnect, MumpsGlobal } from './mumpsConnect';\n\nexport class MumpsGlobalProvider implements vscode.TreeDataProvider<GlobalNode> {\n\tprivate static instance: MumpsGlobalProvider;\n\tprivate static _onDidChangeTreeData: vscode.EventEmitter<GlobalNode | undefined | void> = new vscode.EventEmitter<GlobalNode | undefined | void>();\n\treadonly onDidChangeTreeData: vscode.Event<GlobalNode | undefined | void> = MumpsGlobalProvider._onDidChangeTreeData.event;\n\tprivate static _mconnect: MumpsConnect | null = null;\n\tprivate constructor() {\n\t}\n\tstatic getInstance() {\n\t\tif (!MumpsGlobalProvider.instance) {\n\t\t\tMumpsGlobalProvider.instance = new MumpsGlobalProvider();\n\t\t}\n\t\treturn MumpsGlobalProvider.instance;\n\t}\n\tstatic refresh(): void {\n\t\tthis._onDidChangeTreeData.fire();\n\t}\n\tasync search(node?: GlobalNode) {\n\t\tlet searchFor: string | undefined = undefined\n\t\tif (node) {\n\t\t\tconst globalName = node.id?.split(\"(\")[0] || \"\"\n\t\t\tsearchFor = await vscode.window.showInputBox({\n\t\t\t\ttitle: \"Search inside Global\" + globalName,\n\t\t\t\tplaceHolder: 'Type the text to search'\n\t\t\t});\n\t\t\tif (searchFor) {\n\t\t\t\tconst searchNode = new GlobalNode(globalName, searchFor, vscode.TreeItemCollapsibleState.None, \"search\")\n\t\t\t\tthis.getChildren(searchNode)\n\t\t\t}\n\t\t} else {\n\t\t\tsearchFor = await vscode.window.showInputBox({\n\t\t\t\ttitle: \"Search for global key\",\n\t\t\t\tplaceHolder: 'Type the global key to show'\n\t\t\t});\n\t\t\tif (searchFor) {\n\t\t\t\tif (searchFor.length) {\n\t\t\t\t\tif (searchFor[0] !== \"^\") searchFor = \"^\" + searchFor\n\t\t\t\t\tif (searchFor.indexOf(\"(\") !== -1) {\n\t\t\t\t\t\tlet trailingPara = false\n\t\t\t\t\t\tif (searchFor.slice(-1) === \")\") {\n\t\t\t\t\t\t\ttrailingPara = true\n\t\t\t\t\t\t\tsearchFor = searchFor.slice(0, -1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst keys = searchFor.split(\"(\")[1].split(\",\");\n\t\t\t\t\t\tkeys.forEach((key, index) => {\n\t\t\t\t\t\t\tif (index === keys.length - 1 && key.slice(-1) === \")\") key = key.slice(0, -1)\n\t\t\t\t\t\t\tif (isNaN(parseFloat(key))) {\n\t\t\t\t\t\t\t\tif (key[0] !== '\"' || key.slice(-1) !== '\"') {\n\t\t\t\t\t\t\t\t\tkey = '\"' + key + '\"'\n\t\t\t\t\t\t\t\t\tkeys[index] = key\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconst ending = trailingPara ? \")\" : \"\"\n\t\t\t\t\t\tsearchFor = searchFor.split(\"(\")[0] + \"(\" + keys.join(\",\") + ending\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst node = new GlobalNode(searchFor, \"\", vscode.TreeItemCollapsibleState.Expanded, \"\")\n\t\t\t\tthis.getChildren(node);\n\t\t\t}\n\t\t}\n\t\tMumpsGlobalProvider.refresh();\n\t}\n\tstatic setMconnect(mconnect: MumpsConnect) {\n\t\tMumpsGlobalProvider._mconnect = mconnect\n\t}\n\t/*eslint class-methods-use-this: 0*/\n\tgetTreeItem(element: GlobalNode): vscode.TreeItem {\n\t\treturn element;\n\t}\n\tasync getMoreNodes(node: GlobalNode) {\n\t\tif (node !== undefined && node.id) {\n\t\t\tnode.id = node.id.slice(0, -1)\n\t\t\tthis.getChildren(node)\n\t\t\tMumpsGlobalProvider.refresh();\n\t\t}\n\t}\n\tasync getChildren(element?: GlobalNode): Promise<GlobalNode[]> {\n\t\tconst globalNodes: GlobalNode[] = [];\n\t\tlet id = \"\"\n\t\tif (element !== undefined && element.id) {\n\t\t\tid = element.id\n\t\t}\n\t\tlet nodes: MumpsGlobal | undefined = undefined\n\t\tif (element?.contextValue === \"search\") {\n\t\t\tconst searchFor: string = element.description as string\n\t\t\tnodes = await MumpsGlobalProvider._mconnect?.getGlobals(searchFor, id)\n\t\t} else {\n\t\t\tnodes = await MumpsGlobalProvider._mconnect?.getGlobals(id)\n\t\t}\n\t\tfor (const key in nodes) {\n\t\t\tconst variable = nodes[key];\n\t\t\tconst value = variable.value;\n\t\t\tconst isCollapsed = variable.hasChildren ? vscode.TreeItemCollapsibleState.Collapsed : vscode.TreeItemCollapsibleState.None;\n\t\t\tconst context = variable.moreToFollow ? \"moreToCome\" : \"\";\n\t\t\tglobalNodes.push(new GlobalNode(key, value, isCollapsed, context))\n\t\t}\n\t\treturn Promise.resolve(globalNodes);\n\t}\n}\n\nexport class GlobalNode extends vscode.TreeItem {\n\n\tconstructor(id: string, value: string, collapsibleState: vscode.TreeItemCollapsibleState, context: string) {\n\t\tsuper(value, collapsibleState);\n\t\tthis.id = id\n\t\tthis.label = id;\n\t\tthis.description = value;\n\t\tif (context !== \"\") this.contextValue = context\n\t\treturn this;\n\t}\n\tcontextValue = 'globalnode';\n}\n","import * as vscode from 'vscode';\r\nimport { TokenType, LineToken } from './mumpsLineParser'\r\nimport MumpsParseDb from './mumpsParseDb';\r\nconst tokenModifiers = ['standard'];\r\nconst subtype = \"standard\";\r\nconst tokentypes: string[] = Object.keys(TokenType).map(key => TokenType[key]);\r\nconst SemanticTokens = new vscode.SemanticTokensLegend(tokentypes, tokenModifiers);\r\n//type: \"global\" | \"local\" | \"exfunction\" | \"nonMfunction\" | \"entryref\" | \"operator\" |\r\n//      \"keyword\" | \"ifunction\" | \"label\" | \"comment\" | \"sysvariable\" | \"string\" | \"number\",\r\n\r\n\r\nconst MumpsHighlighter: vscode.DocumentSemanticTokensProvider = {\r\n\t// analyze the document and return semantic tokens\r\n\tprovideDocumentSemanticTokens(document: vscode.TextDocument): vscode.ProviderResult<vscode.SemanticTokens> {\r\n\t\tconst parseDb = MumpsParseDb.getInstance(document)\r\n\t\tconst documentTokens: LineToken[][] = parseDb.getDocumentTokens()\r\n\t\tconst tokensBuilder = new vscode.SemanticTokensBuilder(SemanticTokens);\r\n\t\tfor (let line = 0; line < documentTokens.length; line++) {\r\n\t\t\tconst tokens: LineToken[] = documentTokens[line];\r\n\t\t\tfor (let tokenId = 0; tokenId < tokens.length; tokenId++) {\r\n\t\t\t\tconst t = tokens[tokenId];\r\n\t\t\t\tconst type = t.type;\r\n\t\t\t\tif (type === TokenType.exfunction) {\r\n\t\t\t\t\tt.position -= 2;\t\t\t//Correct Position because of leading $$\r\n\t\t\t\t\tt.name = \"$$\" + t.name;\r\n\t\t\t\t}\r\n\t\t\t\ttokensBuilder.push(\r\n\t\t\t\t\tnew vscode.Range(new vscode.Position(line, t.position), new vscode.Position(line, t.position + t.name.length)),\r\n\t\t\t\t\tTokenType[type], [subtype]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tokensBuilder.build();\r\n\t}\r\n};\r\n\r\nexport { MumpsHighlighter, SemanticTokens }\r\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\nexport default class MumpsHoverProvider {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tprovideHover(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenHoverInfo();\r\n\t}\r\n}\r\n","/* eslint-disable no-cond-assign */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable no-prototype-builtins */\r\nimport fs = require('fs');\r\nexport type ErrorInformation = {\r\n\ttext: string,\r\n\tposition: number,\r\n\tline?: number,\r\n\tindexFound?: boolean,\r\n\tglobalFound?: boolean,\r\n\tindirectionFound?: boolean\r\n}\r\nexport enum TokenType {\r\n\tglobal, local, exfunction, nonMfunction, entryref, operator, keyword, ifunction,\r\n\tlabel, comment, sysvariable, string, number, intendation, argPostcondition\r\n}\r\nexport interface LineToken {\r\n\ttype: TokenType,\r\n\tname: string,\r\n\tlongName?: string,\r\n\tisPostconditioned?: boolean,\r\n\tisExcludedVariable?: boolean,\r\n\thasArguments?: boolean,\r\n\tposition: number\r\n}\r\ninterface LineComand {\r\n\tcommand: string,\r\n\tposition: number\r\n}\r\ninterface LineComment {\r\n\tcomment: string,\r\n\tposition: number\r\n}\r\nexport interface LineObject {\r\n\tlineComment?: LineComment;\r\n\tlineIndentationArray?: string[];\r\n\tlineRoutines?: TmpFunction[];\r\n\tlineLeadSpace?: string,\r\n\tlineLabel?: string,\r\n\tlineExpression: string,\r\n\terrorText?: string,\r\n\terrorPosition?: number,\r\n\texpressionPosition: number\r\n}\r\ninterface TmpFunction {\r\n\tmCommand: string,\r\n\tmArguments: string,\r\n\tmPostCondition: string,\r\n\tcmdPosition: number,\r\n\targPosition: number,\r\n\tpcPosition: number\r\n}\r\ninterface ModifiedLine {\r\n\tlineText: string,\r\n\terrorText: string\r\n}\r\nexport interface LineInformation {\r\n\terror: ErrorInformation,\r\n\ttokens: LineToken[]\r\n}\r\nexport interface LabelInformation {\r\n\tname: string,\r\n\tline: number\r\n}\r\nconst label = /^[A-Za-z%][A-Za-z0-9]*(\\([A-Za-z%][A-Za-z0-9]*(,[A-Za-z%][A-Za-z0-9]*)*\\))?/\r\nconst lvn = /^[A-Za-z%][A-Za-z0-9]*/\r\nconst gvn = /^\\^[A-Za-z%][A-Za-z0-9]*/\r\nconst isv = /^\\$(DEVICE|ECODE|EC|ESTACK|ES|ETRAP|ET|HALT|HOROLOG|H|IO|I|JOB|J|KEY|K|NAMESPACE|PRINCIPAL|P|QUIT|Q|REFERENCE|R|STACK|ST|STORAGE|S|SYSTEM|TEST|THIS|TLEVEL|TL|T|USERNAME|X|Y|ZALLOCSTOR|ZA|ZB|ZCHSET|ZCLOSE|ZCMDLINE|ZCM|ZCOMPILE|ZCO|ZCSTATUS|ZCH[A-Z]*|ZC|ZDATEFORM|ZDA|ZDIRECTORY|ZD|ZEDITOR|ZED|ZEOF|ZEO|ZE[A-Z]*|ZGBLDIR|ZG|ZHRORLOG|ZH|ZININTERRUPT|ZINI|ZINTERRUPT|ZINT|ZIO|ZJOB|ZJ|ZKEY|ZLEVEL|ZL|ZMAXTPTIME|ZMAXTPTI|ZMODE|ZMO|ZONLNRLBK|ZPATNUMERIC|ZPATN|ZPIN|ZPOSITION|ZPOS|ZPOUT|ZPROMPT|ZQUIT|ZREALSTOR|ZRELDATE|ZRO[A-Z]*|ZSOURCE|ZSO|ZSTA[A-Z]*|ZSTEP|ZSTRP|ZSTRPLLIM|ZST|ZSYSTEM|ZSY|ZS|ZTEXIT|ZTE|ZTIMEOUT|ZTIM|ZTRAP|ZT|ZUSEDSTOR|ZUT|ZVERSION|ZV[A-Z]*|ZYERROR|ZYRELEASE|ZTDATA|ZTDELIM|ZTLEVEL|ZTNAME|ZTOLDVAL|ZTRIGGEROP|ZTSLATE|ZTUPDATE|ZTVALUE|ZTWORMHOLE)/i\r\nconst ifunction = /^\\$(ASCII|A|CHAR|C|DATA|D|EXTRACT|E|FIND|F|FNUMBER|FN|GET|G|INCREMENT|INCR|I|JUSTIFY|J|LENGTH|L|NAME|NA|NEXT|N|ORDER|O|PIECE|P|QLENGTH|QL|QSUBSCRIPT|QS|QUERY|Q|RANDOM|R|REVERSE|RE|SELECT|S|STACK|ST|TEXT|T|TRANSLATE|TR|VIEW|V|ZAHANDLE|ZAH|ZASCII|ZATRANSFORM|ZAT|ZBITAND|ZBITCOUNT|ZBITFIND|ZBITGET|ZBITLEN|ZBITNOT|ZBITOR|ZBITSET|ZBITSTR|ZBITXOR|ZCHAR|ZCH|ZCOLLATE|ZCONVERT|ZCO|ZDATE|ZDATA|ZD|ZEXTRACT|ZE|ZFIND|ZF|ZGETJPI|ZG|ZINCREMENT|ZINCR|ZJOBEXAM|ZJUSTIFY|ZJ|ZLENGTH|ZL|ZMESSAGE|ZM|ZPARSE|ZPEEK|ZPIECE|ZPI|ZPREVIOUS|ZP|ZQGBLMOD|ZSEARCH|ZSIGPROC|ZSOCKET|ZSUBSTR|ZSUB|ZSYSLOG|ZTRANSLATE|ZTRIGGER|ZTRI|ZTRNLNM|ZTR|ZWIDTH|ZWRITE|ZW)(?=\\()/i;\r\nconst nonMfunction = /^\\$&([A-Za-z%0-9][A-Za-z0-9]*\\.)?([A-Za-z%0-9][A-Za-z0-9]*)(\\^[A-Za-z%][A-Za-z0-9]*)?/\r\nexport const entryref = /^(&[A-Za-z0-9]*\\.?)?@?([A-Za-z%0-9][A-Za-z0-9]*)?(\\^@?[A-Za-z%][A-Za-z0-9]*)?/\r\nconst routineref = /^\\^@?[A-Za-z%][A-Za-z0-9]*/\r\nconst numlit = /^(\\d*\\.?\\d*(E-?\\d+)?)/\r\nconst strlit = /^\"(\"\"|[^\"])*\"/\r\nconst command = /^[B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|U|USE|V|VIEW|W|WRITE|X|XECUTE|ZA|ZALLOCATE|ZBR|ZBREAK|ZC|ZCONTINUE|ZD|ZDEALLOCATE|ZE|ZEDIT|ZG|ZGOTO|ZHALT|ZH|ZHELP|ZK|ZKILL|ZL|ZLINK|ZM|ZMESSAGE|ZP|ZPRINT|ZRUPDATE|ZSH|ZSHOW|ZST|ZSTEP|ZSY|ZSYSTEM|ZTC|ZTCOMMIT|ZTR|ZTRIGGER|ZTS|ZTSTART|ZWI|ZWITHDRAW|ZWR|ZWRITE]/i\r\nconst binoperator = /^('=|'>|'<|<=|>=|'&|'!|'\\?|'\\[|'\\]|\\*\\*|\\+|-|\\*|\\/|\\\\|#|'|&|!|_|<|>|=|\\[|\\]\\]|\\]|\\?|@)/\r\nconst unaryoperator = /(-|'|\\+|@)/\r\nconst patcode = /^([A|C|E|L|N|P|U]|^(\"([^\"](\"\")*)*\"))+/i\r\nconst repititionCount = /^\\d*\\.?\\d*/\r\nconst openkeywords = /^APPEND|ATTACH=|BLOCK(SIZE)?=|COMMAND=|CONNECT=|(NO)?DELIM(ITER)?=?|EXC(EPTION)?=|FIFO|(NO)?FIXED|GROUP=|[IO]?CHSET=|KEY|IKEY|INDEPENDANT|IOERROR=|NEW[A-Z]*|MOREREADTIME=|OKEY|OWNER=|(NO)?RCHK|(NO)?READ(ONLY)?|RECORD(SIZE)?=|(NO)?RETRY|REWIND|SEEK=|SHELL=|STDERR=|(NO)?STREAM|SYSTEM=|(NO)?TRUNCATE|UIC=|VARIABLE|WORLD=|Z?(NO)?WRAP|WRITE(ONLY)?|ZBFSIZE=|Z(NO)?DELAY|Z(NO)?FF|ZIBFSIZE=|Z?LISTEN=/i\r\nconst usekeywords = /^ATTACH|(NO)?CENABLE|[IO]?CHSET=|CLEAR(SCREEN)?|CONNECT|(NO)?CONVERT|CTRAP=|(NO)?DELIM(ITER)?=?|DETACH|DOWNSCROLL|(NO)?ECHO|(NO)?EDITING|ERASELINE|(NO)?ESC(APE)?|EXC(EPTION)?=|(NO)?FILTER=?|FLUSH|GROUP=|KEY|IKEY|IOERROR=|OKEY|OWNER=|(NO)?PASTHRU|(NO)?RCHK|(NO)?RETRY|REWIND|SEEK=|SKIPFILE=|SOCKET=|SPACE=|TERM(INATOR)?=|(NO)?TRUNCATE|(NO)?TTSNYC|(NO)?TYPEAHEAD|UPSCROLL|Z?LENGTH=|Z?WIDTH=|Z?(NO)?WRAP|WRITELB=|X=|Y=|ZBFSIZE|Z(NO)?DELAY|Z(NO)?FF|ZIBFSIZE|LISTEN=/i\r\nconst closekeywords = /^DELETE|(NO)?DESTROY|EXCEPTION=|GROUP=|OWNER=|RENAME=|SOCKET=|TIMEOUT=|UIC=|WORLD=/i\r\nconst jobkeywords = /^CMD=|CMDLINE=|DEF=|DEFAULT=|ERR=|ERROR=|GBL=|GBLDIR=|IN=|INPUT=|OUT=|OUTPUT=|PASS|PASSCURLVN|STA=|STARTUP=/i\r\nconst tstartkeywords = /^SERIAL|S|T=|TRANSACTIONID=/i\r\nconst cmdExpansions = {\r\n\t'B': 'BREAK', 'C': 'CLOSE', 'D': 'DO', 'E': 'ELSE', 'F': 'FOR', 'G': 'GOTO', 'H': 'HALT', 'I': 'IF', 'J': 'JOB', 'K': 'KILL', 'L': 'LOCK', 'M': 'MERGE', 'N': 'NEW',\r\n\t'O': 'OPEN', 'Q': 'QUIT', 'R': 'READ', 'S': 'SET', 'U': 'USE', 'V': 'VIEW', 'W': 'WRITE', 'X': 'XECUTE', 'ZA': 'ZALLOCATE', 'ZB': 'ZBREAK', 'ZC': 'ZCONTINUE',\r\n\t'ZD': 'ZDEALLOCATE', 'ZED': 'ZEDIT', 'ZG': 'ZGOTO', 'ZH': 'ZHELP', 'ZK': 'ZKILL', 'ZL': 'ZLINK', 'ZM': 'ZMESSAGE', 'ZP': 'ZPRINT', 'ZSH': 'ZSHOW',\r\n\t'ZST': 'ZSTEP', 'ZSY': 'ZSYSTEM', 'ZTC': 'ZTCOMMIT', 'ZTR': 'ZTRIGGER', 'ZTS': 'ZTSTART', 'ZWI': 'ZWITHDRAW', 'ZWR': 'ZWRITE'\r\n}\r\nconst funcExpansions = {\r\n\t'A': 'ASCII', 'C': 'CHAR', 'D': 'DATA', 'E': 'EXTRACT', 'F': 'FIND', 'FN': 'FNUMBER', 'G': 'GET', 'I': 'INCREMENT', 'J': 'JUSTIFY', 'L': 'LENGTH', 'NA': 'NAME', 'N': 'NEXT', 'O': 'ORDER',\r\n\t'P': 'PIECE', 'QL': 'QLENGTH', 'QS': 'QSUBSCRIPT', 'Q': 'QUERY', 'R': 'RANDOM', 'RE': 'REVERSE', 'S': 'SELECT', 'ST': 'STACK', 'T': 'TEXT', 'TR': 'TRANSLATE', 'V': 'VIEW',\r\n\t'ZA': 'ZASCII', 'ZAH': 'ZAHANDLE', 'ZCO': 'ZCONVERT', 'ZD': 'ZDATE', 'ZE': 'ZEXTRACT', 'ZF': 'ZFIND', 'ZG': 'ZGETJPI', 'ZJ': 'ZJUSTIFY', 'ZL': 'ZLENGTH', 'ZM': 'ZMESSAGE', 'ZPI': 'ZPIECE', 'ZP': 'ZPREVIOUS',\r\n\t'ZSUB': 'ZSUBSTR', 'ZTR': 'ZTRANSLATE', 'ZTRI': 'ZTRIGGER', 'ZW': 'ZWIDTH'\r\n}\r\nconst isvExpansions = {\r\n\t'D': 'DEVICE', 'EC': 'ECODE', 'ES': 'ESTACK', 'ET': 'ETRAP', 'H': 'HOROLOG', 'I': 'IO', 'J': 'JOB', 'K': 'KEY', 'P': 'PRINCIPAL', 'Q': 'QUIT', 'R': 'REFERENCE', 'ST': 'STACK',\r\n\t'S': 'STORAGE', 'SY': 'SYSTEM', 'T': 'TEST', 'TL': 'TLEVEL', 'TR': 'TRESTART', 'ZC': 'ZCSTATUS', 'ZDA': 'ZDATEFORM', 'ZD': 'ZDIRECTORY', 'ZED': 'ZEDITOR', 'ZEO': 'ZEOF', 'ZE': 'ZERROR',\r\n\t'ZG': 'ZGBLDIR', 'ZH': 'ZHRORLOG', 'ZINI': 'ZININTERRUPT', 'ZINT': 'ZINTERRUPT', 'ZJ': 'ZJOB', 'ZL': 'ZLEVEL', 'ZMAXPTI': 'ZMAXTPTIME', 'ZMO': 'ZMODE', 'ZPOS': 'ZPOSITION',\r\n\t'ZPROM': 'ZPROMPT', 'ZRO': 'ZROUTINES', 'ZSO': 'ZSOURCE', 'ZS': 'ZSTATUS', 'ZST': 'ZSTEP', 'ZSTRP': 'ZSTRPLLIM', 'ZSY': 'ZSYSTEM', 'ZTE': 'ZTEXIT', 'ZTIM': 'ZTIMEOUT', 'ZT': 'ZTRAP',\r\n\t'ZV': 'ZVERSION', 'ZYER': 'ZYERROR', 'ZYRE': 'ZYRELEASE', 'ZTDE': 'ZTDELIM'\r\n\r\n}\r\nconst cmdParams = {\r\n\t'BREAK': {\r\n\t\t'abbreviation': 'B',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[:tvexpr][,...]]'\r\n\t},\r\n\t'CLOSE': {\r\n\t\t'abbreviation': 'C',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:(keyword[=expr][:...])][,...]'\r\n\t},\r\n\t'DO': {\r\n\t\t'abbreviation': 'D',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[entryref[(expr:.lvn[,...])][:tvexpr][,...]]'\r\n\t},\r\n\t'ELSE':\r\n\t{\r\n\t\t'abbreviation': 'E',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'FOR': {\r\n\t\t'abbreviation': 'F',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': '[lvn=expr[:numexpr1[:numexpr2]][,...]]]'\r\n\t},\r\n\t'GOTO': {\r\n\t\t'abbreviation': 'G',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'entryref[:tvexpr][,...]'\r\n\t},\r\n\t'HALT': {\r\n\t\t'abbreviation': 'H',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'HANG': {\r\n\t\t'abbreviation': 'H',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'numexpr[,...]'\r\n\t},\r\n\t'IF': {\r\n\t\t'abbreviation': 'I',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': '[tvexpr[,...]]'\r\n\t},\r\n\t'JOB': {\r\n\t\t'abbreviation': 'J',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'entryref[(expr[,...])][:[(keyword[=value][:...])][:numexpr]][,...]'\r\n\t},\r\n\t'KILL': {\r\n\t\t'abbreviation': 'K',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[glvn | (lvn[,...]) | *lname | *lvn ]'\r\n\t},\r\n\t'LOCK': {\r\n\t\t'abbreviation': 'L',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[-|+]nref|(nref[,...])[:numexpr] [,...]]'\r\n\t},\r\n\t'MERGE': {\r\n\t\t'abbreviation': 'M',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn=glvn[,...]'\r\n\t},\r\n\t'NEW': {\r\n\t\t'abbreviation': 'N',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[(]lvn[,...][)][,...]]'\r\n\t},\r\n\t'OPEN': {\r\n\t\t'abbreviation': 'O',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:[(keyword[=expr][:...])] [:numexpr]][,...]'\r\n\t},\r\n\t'QUIT': {\r\n\t\t'abbreviation': 'Q',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr | *lname | *lvn]'\r\n\t},\r\n\t'READ': {\r\n\t\t'abbreviation': 'R',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '(glvn|*glvn|glvn#intexpr)[:numexpr]|strlit|fcc[,...]'\r\n\t},\r\n\t'SET': {\r\n\t\t'abbreviation': 'S',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'setleft=expr | (setleft[,...])=expr | *lvn=lname | aliascontainer[,...]'\r\n\t},\r\n\t'TCOMMIT': {\r\n\t\t'abbreviation': 'TC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'TRESTART': {\r\n\t\t'abbreviation': 'TRE',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'TROLLBACK': {\r\n\t\t'abbreviation': 'TRO',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'TSTART': {\r\n\t\t'abbreviation': 'TS',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[([lvn...])|lvn|*|][:keyword|(keyword...)]'\r\n\t},\r\n\t'USE': {\r\n\t\t'abbreviation': 'U',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:(keyword[=expr][:...])][,...]'\r\n\t},\r\n\t'VIEW': {\r\n\t\t'abbreviation': 'V',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'keyword[:expr[:...]][,...]'\r\n\t},\r\n\t'WRITE': {\r\n\t\t'abbreviation': 'W',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr|*intexpr|fcc[,...]'\r\n\t},\r\n\t'XECUTE': {\r\n\t\t'abbreviation': 'X',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:tvexpr][,...]'\r\n\t},\r\n\t'ZALLOCATE': {\r\n\t\t'abbreviation': 'ZA',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[(]nref[,...][)][:intexpr][,...]'\r\n\t},\r\n\t'ZBREAK': {\r\n\t\t'abbreviation': 'ZB',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[-]entryref[:[expr][:intexpr]][,...]'\r\n\t},\r\n\t'ZCOMPILE': {\r\n\t\t'abbreviation': 'ZCOM',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[,...]'\r\n\t},\r\n\t'ZCONTINUE': {\r\n\t\t'abbreviation': 'ZC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'ZDEALLOCATE': {\r\n\t\t'abbreviation': 'ZD',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[nref[,...]]'\r\n\t},\r\n\t'ZEDIT': {\r\n\t\t'abbreviation': 'ZED',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[,...]]'\r\n\t},\r\n\t'ZGOTO': {\r\n\t\t'abbreviation': 'ZG',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[intexpr][:entryref[:tvexpr]],...]'\r\n\t},\r\n\t'ZHALT': {\r\n\t\t'abbreviation': 'ZHALT',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'ZHELP': {\r\n\t\t'abbreviation': 'ZH',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr1[:expr2],...]'\r\n\t},\r\n\t'ZKILL': {\r\n\t\t'abbreviation': 'ZK',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn'\r\n\t},\r\n\t'ZLINK': {\r\n\t\t'abbreviation': 'ZL',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr1[:expr2][,...]]'\r\n\t},\r\n\t'ZMESSAGE': {\r\n\t\t'abbreviation': 'ZM',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'intexpr[:expr2][:...]'\r\n\t},\r\n\t'ZPRINT': {\r\n\t\t'abbreviation': 'ZP',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t},\r\n\t'ZRUPDATE': {\r\n\t\t'abbreviation': 'ZRUP',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[,...]'\r\n\t},\r\n\t'ZSHOW': {\r\n\t\t'abbreviation': 'ZSH',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[:glvn][,...]]'\r\n\t},\r\n\t'ZSTEP': {\r\n\t\t'abbreviation': 'ZST',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[keyword[:expr]][,...]'\r\n\t},\r\n\t'ZSYSTEM': {\r\n\t\t'abbreviation': 'ZSY',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr][,...]]'\r\n\t},\r\n\t'ZTCOMMIT': {\r\n\t\t'abbreviation': 'ZTC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'ZTRIGGER': {\r\n\t\t'abbreviation': 'ZTR',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'gvn'\r\n\t},\r\n\t'ZTSTART': {\r\n\t\t'abbreviation': 'ZTS',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'ZWITHDRAW': {\r\n\t\t'abbreviation': 'ZWI',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn'\r\n\t},\r\n\t'ZWRITE': {\r\n\t\t'abbreviation': 'ZWR',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[zwrglvn[,...]]'\r\n\t}\r\n}\r\nconst funcParams = {\r\n\t'ASCII': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'CHAR': {\r\n\t\t'maxparams': 99\r\n\t},\r\n\t'DATA': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn'\r\n\t},\r\n\t'EXTRACT': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'FIND': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'FNUMBER': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'GET': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'INCREMENT': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'JUSTIFY': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'LENGTH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'NAME': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'NEXT': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn('\r\n\t},\r\n\t'ORDER': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'PIECE': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'QLENGTH': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'expr'\r\n\t},\r\n\t'QSUBSCRIPT': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'expr,expr'\r\n\t},\r\n\t'QUERY': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn'\r\n\t},\r\n\t'RANDOM': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'REVERSE': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'SELECT': {\r\n\t\t'maxparams': 99,\r\n\t\t'format': 'special'\r\n\t},\r\n\t'STACK': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'TEXT': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'entryref'\r\n\t},\r\n\t'TRANSLATE': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'VIEW': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZASCII': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZATRANSFORM': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 4,\r\n\t\t'format': 'expr,expr,bool,bool'\r\n\t},\r\n\t'ZBITAND': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITCOUNT': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITFIND': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZBITGET': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITLEN': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITNOT': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITOR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITSET': {\r\n\t\t'minparams': 3,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZBITSTR': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITXOR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZCHAR': {\r\n\t\t'maxparams': 99\r\n\t},\r\n\t'ZCOLLATE': {\r\n\t\t'maxparams': 3,\r\n\t\t'format': 'glvn,expr,bool'\r\n\t},\r\n\t'ZCONVERT': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZDATA': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'lvn'\r\n\t},\r\n\t'ZDATE': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZEXTRACT': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZFIND': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZGETJPI': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZJOBEXAM': {\r\n\t\t'minparams': 0,\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZJUSTIFY': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZLENGTH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZMESSAGE': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZPARSE': {\r\n\t\t'maxparams': 5\r\n\t},\r\n\t'ZPEEK': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZPIECE': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZPREVIOUS': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn'\r\n\t},\r\n\t'ZQGBLMOD': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'gvn'\r\n\t},\r\n\t'ZSEARCH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZSIGPROC': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZSOCKET': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZSUBSTR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZSYSLOG': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZTRANSLATE': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZTRIGGER': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZTRNLNM': {\r\n\t\t'maxparams': 6\r\n\t},\r\n\t'ZWIDTH': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZWRITE': {\r\n\t\t'maxparams': 2\r\n\t}\r\n}\r\nconst expressiontype = {\r\n\t\"Standard\": 0,\r\n\t\"Index\": 1,\r\n\t\"eArgument\": 2,\r\n\t\"iArgument\": 3,\r\n\t\"Atom\": 4\r\n}\r\n\r\nclass MumpsLineParser {\r\n\tprivate _tokens: LineToken[] = [];\r\n\tprivate cmdCompressions: object;\r\n\tprivate funcCompressions: object;\r\n\tprivate isvCompressions: object;\r\n\tprivate linePosition = 0;\r\n\t/**\r\n\t * Checks if the given File is correct M-Code\r\n\t * @param filename\r\n\t * @returns Array with list of errors or an empty array if no errors found in file\r\n\t */\r\n\tpublic checkFile(filename: string): ErrorInformation[] {\r\n\t\tconst errlist: ErrorInformation[] = [];\r\n\t\tlet content: string;\r\n\t\ttry {\r\n\t\t\tcontent = fs.readFileSync(filename, \"utf8\");\r\n\t\t} catch (err) {\r\n\t\t\terrlist.push({ text: 'File read error: ' + filename, position: 0, line: 0 });\r\n\t\t\treturn errlist;\r\n\t\t}\r\n\t\tconst lines = content.split('\\n');\r\n\t\treturn this.checkLines(lines);\r\n\t}\r\n\tpublic checkLines(lines: string[]): ErrorInformation[] {\r\n\t\tconst errlist: ErrorInformation[] = [];\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tlines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\tconst info = this.checkLine(lines[i]);\r\n\t\t\tif (info.text !== '') {\r\n\t\t\t\tinfo.line = i + 1;\r\n\t\t\t\terrlist.push(info);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn errlist;\r\n\t}\r\n\tpublic checkLine(line: string): ErrorInformation {\r\n\t\tthis._tokens = [];\r\n\t\tthis.linePosition = 0;\r\n\t\tconst parsed = MumpsLineParser.parseLine(line);\r\n\t\tif (parsed.lineLabel) {\r\n\t\t\tthis._splitLabelAndParameters(parsed.lineLabel);\r\n\t\t}\r\n\t\tif (parsed.lineIndentationArray) {\r\n\t\t\tlet position = 0;\r\n\t\t\tif (parsed.lineLeadSpace) {\r\n\t\t\t\tposition += parsed.lineLeadSpace.length;\r\n\t\t\t}\r\n\t\t\tif (parsed.lineLabel) {\r\n\t\t\t\tposition += parsed.lineLabel.length;\r\n\t\t\t}\r\n\t\t\tthis._tokens.push({ name: \".\".repeat(parsed.lineIndentationArray.length), type: TokenType.intendation, position });\r\n\t\t}\r\n\t\tlet result: ErrorInformation = { text: '', position: 0 }\r\n\t\tif (parsed.lineRoutines) {\r\n\t\t\tfor (let i = 0; i < parsed.lineRoutines.length; i++) {\r\n\t\t\t\tconst code = parsed.lineRoutines[i];\r\n\t\t\t\tif (code.mCommand.length > 0) {\r\n\t\t\t\t\tlet cmd = code.mCommand.toUpperCase();\r\n\t\t\t\t\tif (cmd === 'H') {\r\n\t\t\t\t\t\tif (code.mArguments === '') {\r\n\t\t\t\t\t\t\tcmd = 'HALT';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcmd = 'HANG';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (cmd.match(command)) {\r\n\t\t\t\t\t\tlet longcmd = cmd;\r\n\t\t\t\t\t\tif (cmdParams[cmd] === undefined) {\r\n\t\t\t\t\t\t\tlongcmd = cmdExpansions[cmd];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._tokens.push({\r\n\t\t\t\t\t\t\tname: code.mCommand,\r\n\t\t\t\t\t\t\ttype: TokenType.keyword,\r\n\t\t\t\t\t\t\tposition: code.cmdPosition,\r\n\t\t\t\t\t\t\tlongName: longcmd,\r\n\t\t\t\t\t\t\tisPostconditioned: code.mPostCondition !== \"\",\r\n\t\t\t\t\t\t\thasArguments: code.mArguments !== \"\"\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (longcmd === undefined) {\r\n\t\t\t\t\t\t\tresult.text = 'Unknown Command';\r\n\t\t\t\t\t\t\tresult.position = code.cmdPosition;\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresult = this._checkCommand(line, longcmd, code);\r\n\t\t\t\t\t\t} catch (result) {\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn { text: 'Invalid Command', position: code.cmdPosition }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (parsed.lineComment) {\r\n\t\t\tthis._tokens.push({ name: parsed.lineComment.comment, position: parsed.lineComment.position, type: TokenType.comment });\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic analyzeLine(line: string): LineInformation {\r\n\t\tthis._tokens = [];\r\n\t\tline = line.replace(/\\r/g, '');\r\n\t\tconst errInfo = this.checkLine(line);\r\n\t\treturn { error: errInfo, tokens: this._tokens }\r\n\t}\r\n\tpublic analyzeLines(input: string): [string[], LineToken[][], ErrorInformation[]] {\r\n\t\tconst lines = input.split('\\n');\r\n\t\tconst errors: ErrorInformation[] = [];\r\n\t\tconst linetokens: Array<Array<LineToken>> = [];\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tlines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\terrors[i] = this.checkLine(lines[i]);\r\n\t\t\tlinetokens[i] = this._tokens;\r\n\t\t}\r\n\t\treturn [lines, linetokens, errors];\r\n\t}\r\n\tpublic expandCompressFile(filename: string, doExpand: boolean): string {\r\n\t\tif (doExpand === undefined) { doExpand = false; }\r\n\t\tlet content: string;\r\n\t\tlet lines: string[] = [];\r\n\t\ttry {\r\n\t\t\tcontent = fs.readFileSync(filename, \"utf8\");\r\n\t\t} catch (err) {\r\n\t\t\tlines[0] = 'File read error: ';\r\n\t\t\treturn lines[0];\r\n\t\t}\r\n\t\tlines = content.split('\\n');\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t//lines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\tconst info = this.expandCompressLine(lines[i], doExpand);\r\n\t\t\tif (info.errorText !== '') {\r\n\t\t\t\tlines = [];\r\n\t\t\t\tlines[0] = \"Error in Line \" + i + \" : \" + info.errorText;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlines[i] = info.lineText;\r\n\t\t}\r\n\t\treturn lines.join(\"\\n\");\r\n\t}\r\n\tpublic expandCompressLine(line: string, doExpand: boolean): ModifiedLine {\r\n\t\tline = line.replace(/\\r/g, '');\r\n\t\tif (doExpand === false && this.cmdCompressions === undefined) {\r\n\t\t\tthis.cmdCompressions = {};\r\n\t\t\tObject.keys(cmdExpansions).forEach(shortCommand => {\r\n\t\t\t\tthis.cmdCompressions[cmdExpansions[shortCommand]] = shortCommand;\r\n\t\t\t});\r\n\t\t\tthis.funcCompressions = {};\r\n\t\t\tObject.keys(funcExpansions).forEach(shortFunction => {\r\n\t\t\t\tthis.funcCompressions[funcExpansions[shortFunction]] = shortFunction;\r\n\t\t\t});\r\n\t\t\tthis.isvCompressions = {};\r\n\t\t\tObject.keys(isvExpansions).forEach(shortIsv => {\r\n\t\t\t\tthis.isvCompressions[isvExpansions[shortIsv]] = shortIsv;\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst outline: ModifiedLine = { lineText: line, errorText: '' }\r\n\t\tconst errorinfo = this.checkLine(line);\r\n\t\tlet outText = line;\r\n\t\tif (errorinfo.text !== \"\") {\r\n\t\t\toutline.errorText = errorinfo.text;\r\n\t\t} else {\r\n\t\t\tlet posCorrector = 0;\r\n\t\t\tfor (let i = 0; i < this._tokens.length; i++) {\r\n\t\t\t\tconst token = this._tokens[i];\r\n\t\t\t\tif (token.hasOwnProperty(\"longName\")) {\r\n\t\t\t\t\tconst name = token.name;\r\n\t\t\t\t\tlet longName = name;\r\n\t\t\t\t\tconst position = token.position;\r\n\t\t\t\t\tif (doExpand) {\r\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\t\t\tlongName = token.longName!.toLowerCase();\r\n\t\t\t\t\t\tif (longName[0] === \"$\") {\r\n\t\t\t\t\t\t\tlongName = \"$\" + longName[1].toUpperCase() + longName.substring(2);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlongName = longName[0].toUpperCase() + longName.substring(1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet checkName = name.toUpperCase();\r\n\t\t\t\t\t\tif (name[0] === \"$\") { checkName = name.substring(1); }\r\n\t\t\t\t\t\tif (token.type === TokenType.keyword) {\r\n\t\t\t\t\t\t\tif (this.cmdCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = this.cmdCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (token.type === TokenType.ifunction) {\r\n\t\t\t\t\t\t\tif (this.funcCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = \"$\" + this.funcCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (token.type === TokenType.sysvariable) {\r\n\t\t\t\t\t\t\tif (this.isvCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = \"$\" + this.isvCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (name.length !== longName.length) {\r\n\t\t\t\t\t\toutText = outText.substring(0, posCorrector + position) + longName + outText.substring(posCorrector + position + name.length);\r\n\t\t\t\t\t\tposCorrector += longName.length - name.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\toutline.lineText = outText;\r\n\t\treturn outline;\r\n\t}\r\n\tpublic static getLabels(text: string): LabelInformation[] {\r\n\t\tconst labels: LabelInformation[] = [];\r\n\t\tconst lines = text.split('\\n');\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tconst parsed = MumpsLineParser.parseLine(lines[i]);\r\n\t\t\tif (parsed.lineLabel) {\r\n\t\t\t\tlabels.push({ name: parsed.lineLabel, line: i });\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn labels;\r\n\t}\r\n\tpublic getTokenAt(line: string, position: number): LineToken | undefined {\r\n\t\tthis.checkLine(line);\r\n\t\tlet memPosition = 0\r\n\t\tlet tokenId = -1\r\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\r\n\t\t\tconst token = this._tokens[i];\r\n\t\t\tif (token.position >= memPosition && token.position < position) {\r\n\t\t\t\tmemPosition = token.position;\r\n\t\t\t\ttokenId = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (tokenId === -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn this._tokens[tokenId];\r\n\t}\r\n\tprivate _checkEntryRefAndPostcondition(line: string, position: number, withParams: boolean): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkEntryRef(line, result.position, withParams);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tthis._tokens.push({ type: TokenType.argPostcondition, name: \":\", position });\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkEntryRef(line: string, position: number, withParams: boolean, isUserfunction?: boolean): ErrorInformation {\r\n\t\tisUserfunction = isUserfunction === undefined ? false : isUserfunction;\r\n\t\tlet tokentype: TokenType = isUserfunction ? TokenType.exfunction : TokenType.entryref;\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '@') { //Check Indirection\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\tif (line[result.position] === '+') { //Check Label+Offset\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === '^') { //Check if it's a Label like xxx^yyy\r\n\t\t\t\tif (line[result.position + 1] === '@') { // or a Label xxx^@expr\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (line.substring(result.position).match(entryref)) {\r\n\t\t\t\t\t\tconst ref = line.substring(result.position).match(entryref)![0];\r\n\t\t\t\t\t\tresult.position += ref.length;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.text = 'Invalid EntryRef';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (line.substring(result.position, result.position + 2) === '@(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t} else if (line.substring(result.position).match(entryref)) { //No Indirection and a valid entryref\r\n\t\t\tlet ref = line.substring(result.position).match(entryref)![0];\r\n\t\t\tconst merkpos = result.position;\r\n\t\t\tresult.position += ref.length;\r\n\t\t\tconst char = line[result.position];\r\n\t\t\tif (result.position >= line.length) {\r\n\t\t\t\tif (ref.length > 0) {\r\n\t\t\t\t\tif (ref[0] === '&') {\r\n\t\t\t\t\t\ttokentype = TokenType.nonMfunction;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._tokens.push({ 'type': tokentype, name: ref, position: merkpos + this.linePosition });\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.text = 'Missing Entryref';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ref.indexOf('^') === -1 && char === '+') {\r\n\t\t\t\tconst position = ++result.position\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t\t\t\tref += \"+\" + line.substring(position, result.position);\r\n\t\t\t\tif (result.position >= line.length) {\r\n\t\t\t\t\tthis._tokens.push({ 'type': tokentype, name: ref, position: merkpos + this.linePosition });\r\n\t\t\t\t\treturn result\r\n\t\t\t\t}\r\n\t\t\t\tif (line.substring(result.position).match(routineref)) {\r\n\t\t\t\t\tconst routine = line.substring(result.position).match(routineref)![0];\r\n\t\t\t\t\tref += routine;\r\n\t\t\t\t\tresult.position += routine.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._tokens.push({ 'type': tokentype, name: ref, position: merkpos + this.linePosition });\r\n\t\t} else {\r\n\t\t\tresult.text = 'Invalid Entryref';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tif (line[result.position] === '(' && withParams) {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.eArgument, line, ++result.position, 1);\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\tprivate _checkVar(line: string, position: number, globalOk?: boolean, indexOk?: boolean, isExluded?: boolean): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position, indexFound: false, globalFound: false, indirectionFound: false };\r\n\t\tlet varFound = false;\r\n\t\tif (globalOk === undefined) {\r\n\t\t\tglobalOk = true;\r\n\t\t}\r\n\t\tif (indexOk === undefined) {\r\n\t\t\tindexOk = true;\r\n\t\t}\r\n\t\tif (isExluded === undefined) {\r\n\t\t\tisExluded = false;\r\n\t\t}\r\n\t\tif (line[result.position] === '@') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\tresult.indirectionFound = true;\r\n\t\t\tvarFound = true;\r\n\t\t\tif (line.substring(result.position, result.position + 2) === '@(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (line.substring(result.position).match(gvn) || line.substring(result.position, result.position + 2) === '^|') {\r\n\t\t\t\tif (!globalOk) {\r\n\t\t\t\t\tresult.text = 'Global not allowed here';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.globalFound = true;\r\n\t\t\t\tif (line.substring(result.position, result.position + 2) === '^|') {\r\n\t\t\t\t\tresult.position += 2\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tresult.globalFound = true;\r\n\t\t\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t\tresult.globalFound = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== '|') {\r\n\t\t\t\t\t\tresult.text = 'Missing \"|\"';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tif (line.substring(result.position).match(lvn)) {\r\n\t\t\t\t\t\tconst global = line.substring(result.position).match(lvn)![0];\r\n\t\t\t\t\t\tthis._tokens.push({ name: global, type: TokenType.global, position: result.position + this.linePosition });\r\n\t\t\t\t\t\tvarFound = true;\r\n\t\t\t\t\t\tresult.position += global.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst global = line.substring(result.position).match(gvn)![0];\r\n\t\t\t\t\tthis._tokens.push({ name: global, type: TokenType.global, position: result.position + this.linePosition });\r\n\t\t\t\t\tvarFound = true;\r\n\t\t\t\t\tresult.position += global.length;\r\n\t\t\t\t}\r\n\t\t\t} else if (line.substring(result.position).match(lvn)) {  // local variable found\r\n\t\t\t\tconst local = line.substring(result.position).match(lvn)![0];\r\n\t\t\t\tthis._tokens.push({ name: local, type: TokenType.local, position: result.position + this.linePosition, isExcludedVariable: isExluded });\r\n\t\t\t\tvarFound = true;\r\n\t\t\t\tresult.position += local.length;\r\n\t\t\t} else if (line.substring(result.position, result.position + 2) === '^(') {\r\n\t\t\t\tresult.globalFound = true;\r\n\t\t\t\tif (!globalOk) {\r\n\t\t\t\t\tresult.text = 'Global not allowed here';\r\n\t\t\t\t\tvarFound = false;\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tvarFound = true;\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (varFound && line[result.position] === '(') {\r\n\t\t\tif (!indexOk) {\r\n\t\t\t\tresult.text = 'Index not allowed here';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tconst provResult = this._evaluateExpression(expressiontype.Index, line, ++result.position, 1);\r\n\t\t\tresult.position = provResult.position;\r\n\t\t\tresult.indexFound = true;\r\n\t\t}\r\n\t\tif (!varFound) {\r\n\t\t\tresult.text = 'Name missing';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkBreak(line: string, position: number): ErrorInformation {\r\n\t\t//[expr[:tvexpr][,...]]\r\n\t\tlet result = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkKeyword(keywords: RegExp, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line.substring(result.position).match(keywords)) {\r\n\t\t\tconst keyword = line.substring(result.position).match(keywords)![0];\r\n\t\t\tresult.position += keyword.length;\r\n\t\t\tif (keyword.slice(-1) === '=') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult.text = 'No valid Keyword for command found';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkOUC(keywords: RegExp, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\t//expr[:(keyword[=expr][:...])][,...]\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = this._checkKeyword(keywords, line, result.position);\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\tresult = this._checkKeyword(keywords, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (keywords === openkeywords && line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (keywords === openkeywords && line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkFor(line: string, position: number, argNumber: number): ErrorInformation {\r\n\t\t//[lvn=expr[:numexpr1[:numexpr2]][,...]]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (argNumber > 1) { //If it's not the first Argument the Options are possible: F I=1:2:3,4 or F I=1:2:3,I=4:1:6\r\n\t\t\ttry {\r\n\t\t\t\tconst provResult = this._checkVar(line, result.position, false);\r\n\t\t\t\tif (line[provResult.position] === '\"') {\r\n\t\t\t\t\tresult.position = provResult.position + 1;\r\n\t\t\t\t}\r\n\t\t\t} catch (provResult) {\r\n\t\t\t\tif (provResult.text !== \"Name missing\") {\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\tif (line[result.position] !== '=') {\r\n\t\t\t\tresult.text = 'Missing equal-sign';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] !== ':') {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\tif (line[result.position] !== ':') {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate static _checkJobKeyword(line: string, position: number): ErrorInformation {\r\n\t\tconst result: ErrorInformation = { text: '', position };\r\n\t\tif (line.substring(result.position).match(jobkeywords)) {\r\n\t\t\tconst keyword = line.substring(result.position).match(jobkeywords)![0];\r\n\t\t\tresult.position += keyword.length;\r\n\t\t\tif (keyword[keyword.length - 1] === '=') {\r\n\t\t\t\tif (line.substring(result.position).match(strlit)) {\r\n\t\t\t\t\tconst stringlit = line.substring(result.position).match(strlit)![0];\r\n\t\t\t\t\tresult.position += stringlit.length;\r\n\t\t\t\t\tif (stringlit.length === 0) {\r\n\t\t\t\t\t\tresult.text = 'String literal expected';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.text = 'String literal expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult.text = 'No valid Keyword for JOB Command';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkJob(line: string, position: number): ErrorInformation {\r\n\t\t//entryref[(expr[,...])][:[(keyword[=value][:...])][:numexpr]][,...]\r\n\t\tlet result = this._checkEntryRef(line, position, true);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = MumpsLineParser._checkJobKeyword(line, result.position);\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\tresult = MumpsLineParser._checkJobKeyword(line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (line[result.position] === ':') { //Numeric expression for Job-Timeout\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkKill(line: string, position: number): ErrorInformation {\r\n\t\t//[glvn | (lvn[,...]) | *lname | *lvn ]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkLock(line: string, position: number, isLock: boolean): ErrorInformation {\r\n\t\t//[[-|+]nref|(nref[,...])[:numexpr] [,...]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif ((line[result.position] === '+' || line[result.position] === '-') && isLock) {\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkMerge(line: string, position: number): ErrorInformation {\r\n\t\t//glvn=glvn[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkVar(line, result.position);\r\n\t\tif (line[result.position] !== '=') {\r\n\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tresult = this._checkVar(line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkNew(line: string, position: number): ErrorInformation {\r\n\t\t//[[(]lvn[,...][)][,...]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tif (line.substring(result.position).match(isv)) {\r\n\t\t\t\t\tconst sysvariable = line.substring(result.position).match(isv)![0];\r\n\t\t\t\t\tlet longName = sysvariable.toUpperCase();\r\n\t\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._tokens.push({ name: sysvariable, position: position + this.linePosition, type: TokenType.sysvariable, longName, isExcludedVariable: true });\r\n\t\t\t\t\tresult.position += sysvariable.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, false, false, true);\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (line.substring(result.position).match(isv)) {\r\n\t\t\t\tconst sysvariable = line.substring(result.position).match(isv)![0];\r\n\t\t\t\tlet longName = sysvariable.toUpperCase();\r\n\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t}\r\n\t\t\t\tthis._tokens.push({ name: sysvariable, position: position + this.linePosition, type: TokenType.sysvariable, longName, isExcludedVariable: false });\r\n\t\t\t\tresult.position += sysvariable.length;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkRead(line: string, position: number): ErrorInformation {\r\n\t\t//(glvn|*glvn|glvn#intexpr)[:numexpr]|strlit|fcc[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet starDetected = false;\r\n\t\tlet mat: string[] | null;\r\n\t\tif (line[result.position] === '*') {\r\n\t\t\tresult.position++;\r\n\t\t\tstarDetected = true;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst provResult = this._checkVar(line, result.position);\r\n\t\t\tresult.position = provResult.position;\r\n\t\t\tif (line[result.position] === '#') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\tif (result.text !== '') {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t} catch {\r\n\t\t\tif (starDetected) {\r\n\t\t\t\tresult.text = 'Variable expected';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tif (mat = line.substring(result.position).match(strlit)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t\treturn result;\r\n\t\t\t} else if (mat = line.substring(result.position).match(/^(#|!)+/)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === '?') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkSet(line: string, position: number): ErrorInformation {\r\n\t\t//setleft=expr | (setleft[,...])=expr | *lvn=lname | aliascontainer[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tlet isBraced = false;\r\n\t\tif (line[result.position] === '*') { //*lvn=lname\r\n\t\t\tresult = this._checkVar(line, ++result.position, false);\r\n\t\t\tif (line[result.position] !== '=') {\r\n\t\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tconst savePosition = ++result.position;\r\n\t\t\ttry {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\t} catch (varResult) {\r\n\t\t\t\tif (line[savePosition] !== '$') {\r\n\t\t\t\t\tresult.text = \"Local Variable or Aliascontainer expected\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, savePosition)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tisBraced = true;\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tif (line[result.position] === '@') {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst provResult = this._checkVar(line, result.position);\r\n\t\t\t\t\tresult.position = provResult.position;\r\n\t\t\t\t\tif (MumpsLineParser._isEndOfArgument(line, result.position) || line[result.position] === ',') {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\t\t\tif (MumpsLineParser._isEndOfArgument(line, result.position) || line[result.position] === ',') {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (mat = line.substring(result.position).match(/^\\$Z?(PIECE|P|EXTRACT|E)\\(/i)) {\r\n\t\t\t\tlet functionname = mat[0].substring(1, mat[0].length - 1).toUpperCase();\r\n\t\t\t\tresult.position += functionname.length + 2\r\n\t\t\t\tif (funcExpansions[functionname] !== undefined) {\r\n\t\t\t\t\tthis._tokens.push({ name: \"$\" + functionname, position: result.position - functionname.length - 2, type: TokenType.ifunction, longName: \"$\" + funcExpansions[functionname] });\r\n\t\t\t\t\tfunctionname = funcExpansions[functionname];\r\n\t\t\t\t}\r\n\t\t\t\tresult = this._checkFunction(functionname, line, result.position);\r\n\t\t\t} else if (mat = line.substring(result.position).match(isv)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, true);\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ',' && isBraced) {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ')' && isBraced) {\r\n\t\t\t\tisBraced = false;\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position) && isBraced);\r\n\t\tif (line[result.position] !== '=') {\r\n\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkTstart(line: string, position: number): ErrorInformation {\r\n\t\t//[([lvn...])|lvn|*|][:keyword|(keyword...)]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] !== ')') {\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, false, false);\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = this._checkKeyword(tstartkeywords, line, result.position);\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (result.position < line.length)\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkKeyword(tstartkeywords, line, result.position);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkView(line: string, position: number): ErrorInformation {\r\n\t\t//keyword[:expr[:...]][,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\twhile (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkWrite(line: string, position: number): ErrorInformation {\r\n\t\t//expr|*intexpr|fcc[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tif (line[result.position] === '*') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line.substring(result.position).match(/^\\/(EOF|PASS|ACCEPT|LISTEN|L|TLS|WAIT|W)/i)) {\r\n\t\t\tresult = this._checkWriteSocket(line, result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (mat = line.substring(result.position).match(/^(#|!)+/)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t\tif (line[result.position] === '?') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line[result.position] === '?') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkWriteSocket(line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tif (mat = line.substring(result.position).match(/^\\/(EOF|PASS|ACCEPT|LISTEN|L|TLS|WAIT|W)/i)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t\tconst fname = mat![0].toUpperCase();\r\n\t\t\tif (fname === '/EOF') {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] !== '(') {\r\n\t\t\t\tif (!fname.match(/^\\/(LISTEN|L|WAIT|W)/)) {\r\n\t\t\t\t\tresult.text = fname + ' needs Parameter(s)';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tresult.position++;\r\n\t\t\tlet maxparams = 99;\r\n\t\t\tif (fname === '/LISTEN' || fname === '/L' || fname === '/WAIT' || fname === '/W') {\r\n\t\t\t\tmaxparams = 1;\r\n\t\t\t} else if (fname === '/TLS') {\r\n\t\t\t\tmaxparams = 4;\r\n\t\t\t}\r\n\t\t\tlet paramCount = 0;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tparamCount++;\r\n\t\t\t\tif (paramCount > maxparams) {\r\n\t\t\t\t\tresult.text = 'More Parameters than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tif (fname === '/ACCEPT' && paramCount === 1) {\r\n\t\t\t\t\tif (line[result.position] !== '.') {\r\n\t\t\t\t\t\tresult.text = 'Local Variablereference expected (.lvn)';\r\n\t\t\t\t\t\tthrow result\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult = this._checkVar(line, ++result.position, false, false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing Parameter or \")\"';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkXecute(line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZbreak(line: string, position: number): ErrorInformation {\r\n\t\t//[-]entryref[:[expr][:intexpr]][,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '-') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZprint(line: string, position: number): ErrorInformation {\r\n\t\t// 'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._checkEntryRef(line, ++result.position, false);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZstep(line: string, position: number): ErrorInformation {\r\n\t\t// 'parameter': '[keyword[:expr]][,...]'\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\r\n\t\tif (mat = line.substring(result.position).match(/^(INTO|OUTOF|OU|OVER|OV)/i)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t} else {\r\n\t\t\tresult.text = 'Invalid ZSTEP Qualifier';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkCommand(line: string, longcmd: string, code: TmpFunction): ErrorInformation {\r\n\t\tconst para = cmdParams[longcmd];\r\n\t\tlet position = code.pcPosition\r\n\t\tconst postcondPossible = para.postcondition;\r\n\t\tconst argFormat = para.parameter;\r\n\t\tlet result: ErrorInformation = { text: '', position: 0 }\r\n\t\tif (!postcondPossible && code.mPostCondition !== '') {\r\n\t\t\tthrow { text: 'Poscondition not allowed', position }\r\n\t\t} else if (code.mPostCondition !== '') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t\t}\r\n\t\tposition = code.argPosition;\r\n\t\tif (code.mArguments === '') {\r\n\t\t\tif (argFormat === '' || argFormat[0] === '[') {\r\n\t\t\t\treturn { text: '', position }\r\n\t\t\t} else {\r\n\t\t\t\tthrow { text: 'Argument for command ' + code.mCommand + \" required\", position }\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.position = position;\r\n\t\tlet argCount = 0;\r\n\t\tdo {\r\n\t\t\targCount++;\r\n\t\t\tswitch (longcmd) {\r\n\t\t\t\tcase 'BREAK':\r\n\t\t\t\t\tresult = this._checkBreak(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'CLOSE':\r\n\t\t\t\t\tresult = this._checkOUC(closekeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'DO':\r\n\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, result.position, true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ELSE':\r\n\t\t\t\t\tif (line !== '') {\r\n\t\t\t\t\t\tthrow { text: 'No Argument expected', position }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'FOR':\r\n\t\t\t\t\tresult = this._checkFor(line, result.position, argCount);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'GOTO':\r\n\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, result.position, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'HANG':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'IF':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'JOB':\r\n\t\t\t\t\tresult = this._checkJob(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KILL':\r\n\t\t\t\t\tresult = this._checkKill(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'LOCK':\r\n\t\t\t\t\tresult = this._checkLock(line, result.position, true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'MERGE':\r\n\t\t\t\t\tresult = this._checkMerge(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'NEW':\r\n\t\t\t\t\tresult = this._checkNew(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'OPEN':\r\n\t\t\t\t\tresult = this._checkOUC(openkeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'QUIT':\r\n\t\t\t\t\tif (argCount > 1) {\r\n\t\t\t\t\t\tresult.text = 'Quit allows only one Argument'\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\t\t\t\tresult = this._checkVar(line, ++result.position, false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'READ':\r\n\t\t\t\t\tresult = this._checkRead(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SET':\r\n\t\t\t\t\tresult = this._checkSet(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TROLLBACK':\r\n\t\t\t\t\tif (argCount > 1) {\r\n\t\t\t\t\t\tresult.text = 'TROLLBACK allows only one Argument'\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TSTART':\r\n\t\t\t\t\tresult = this._checkTstart(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'USE':\r\n\t\t\t\t\tresult = this._checkOUC(usekeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'VIEW':\r\n\t\t\t\t\tresult = this._checkView(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'WRITE':\r\n\t\t\t\t\tresult = this._checkWrite(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'XECUTE':\r\n\t\t\t\t\tresult = this._checkXecute(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZALLOCATE':\r\n\t\t\t\t\tresult = this._checkLock(line, result.position, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZBREAK':\r\n\t\t\t\t\tresult = this._checkZbreak(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZCOMPILE':\r\n\t\t\t\t\t// 'abbreviation': 'ZCOM',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'expr[,...]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZDEALLOCATE':\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZD',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[nref[,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZEDIT':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZED',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr[,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZGOTO':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, ++result.position, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZG',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[[intexpr][:entryref[:tvexpr]],...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZHALT':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZHALT',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[intexpr]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZHELP':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZH',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr1[:expr2],...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZKILL':\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZK',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'glvn'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZLINK':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZL',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr1[:expr2][,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZMESSAGE':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\twhile (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZM',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'intexpr[:expr2][:...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZPRINT':\r\n\t\t\t\t\t// 'abbreviation': 'ZP',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t\t\t\t\tresult = this._checkZprint(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZRUPDATE':\r\n\t\t\t\t\t// 'abbreviation': 'ZRUP',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'expr[,...]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSHOW':\r\n\t\t\t\t\t// 'abbreviation': 'ZSH',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr[:glvn][,...]]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._checkVar(line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSTEP':\r\n\t\t\t\t\t// 'abbreviation': 'ZST',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[keyword[:expr]][,...]'\r\n\t\t\t\t\tresult = this._checkZstep(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSYSTEM':\r\n\t\t\t\t\t// 'abbreviation': 'ZSY',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr][,...]]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZTCOMMIT':\r\n\t\t\t\t\t// 'abbreviation': 'ZTC',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[intexpr]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZTRIGGER':\r\n\t\t\t\t\t// 'abbreviation': 'ZTR',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'gvn'\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, true, false);\r\n\t\t\t\t\tif (!result.globalFound) {\r\n\t\t\t\t\t\tresult.text = 'Global Variable expected';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZWITHDRAW':\r\n\t\t\t\t\t// 'abbreviation': 'ZWI',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'glvn'\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZWRITE':\r\n\t\t\t\t\t//'abbreviation': 'ZWR',\r\n\t\t\t\t\t//'postcondition': true,\r\n\t\t\t\t\t//'parameter': '[zwrglvn[,...]]'\r\n\t\t\t\t\t//not separately tested because ZWRITE is for debugging and should not appear in normal code\r\n\t\t\t\t\tresult.position += line.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tresult.position = line.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tif (result.position === line.length) {\r\n\t\t\t\t\tif (argFormat !== '' && argFormat[0] !== '[') {\r\n\t\t\t\t\t\tthrow { text: 'Argument for command ' + code.mCommand + \" required\", position: result.position }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (line[result.position] !== undefined) {\r\n\t\t\t\tconst char = line[result.position];\r\n\t\t\t\tif (char === \" \" || char === \"\\t\" || char === \";\") { break; }\r\n\t\t\t\tresult.text = 'Unexpected Character \"' + line[result.position] + '\"';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} while (result.position < line.length)\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkFunction(longfunc: string, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position: position };\r\n\t\tconst params = funcParams[longfunc];\r\n\t\tif (params === undefined) {\r\n\t\t\tresult.text = \"Unknown Function \" + longfunc;\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tconst minArguments = params.minparams !== undefined ? params.minparams : 1;\r\n\t\tconst formats = params.format !== undefined ? params.format.split(',') : undefined;\r\n\t\tlet argCount = 0;\r\n\t\tlongfunc = '$' + longfunc;\r\n\t\tif (minArguments === 0 && line[result.position] === ')') {\r\n\t\t\tresult.position++;\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tlet format = (formats !== undefined && formats[argCount] !== undefined) ? formats[argCount] : 'expr';\r\n\t\t\tif (longfunc === '$SELECT') {\r\n\t\t\t\tformat = 'special';\r\n\t\t\t}\r\n\t\t\tif (format === 'glvn' || format === 'gvn' || format === 'glvn(' || format === 'lvn') {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tif (format === 'glvn(' && (!result.indexFound && !result.indirectionFound)) {\r\n\t\t\t\t\tresult.text = 'Variable with Index expected for ' + longfunc;\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tif (format === 'lvn' && result.globalFound) {\r\n\t\t\t\t\tresult.text = 'Local variable expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else if (format === 'entryref') {\r\n\t\t\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\t\t} else if (format === 'expr') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t} else if (format === 'bool') {\r\n\t\t\t\tif (line[result.position] !== '0' && line[result.position] !== '1') {\r\n\t\t\t\t\tresult.text = '0/1 expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t} else if (format === 'special') {\r\n\t\t\t\tif (longfunc === '$SELECT') {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Missing Expression';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.position++\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\targCount++;\r\n\t\t\tconst char = line[result.position];\r\n\t\t\tif (char === ',') {\r\n\t\t\t\tif (argCount > params.maxparams) {\r\n\t\t\t\t\tresult.text = 'More Arguments for ' + longfunc + ' than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (char === ')') {\r\n\t\t\t\tif (argCount < minArguments) {\r\n\t\t\t\t\tresult.text = 'Less Arguments for ' + longfunc + ' than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tresult.text = 'Unxepected character ';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position));\r\n\r\n\t\treturn result;\r\n\t}\r\n\tprivate _evaluateExpression(exType: number, line: string, position: number, level?: number | undefined): ErrorInformation {\r\n\t\tlet expressionComplete = false;\r\n\t\tlet startposition = position;\r\n\t\tif (level === undefined) {\r\n\t\t\tlevel = 0;\r\n\t\t}\r\n\t\tlet lastExpression = '';\r\n\t\twhile (position < line.length) {\r\n\t\t\tlet char = line.charAt(position);\r\n\t\t\tif (char === '(') {\r\n\t\t\t\tlet subExType = expressiontype.Standard\r\n\t\t\t\tswitch (lastExpression) {\r\n\t\t\t\t\tcase 'ifunction':\r\n\t\t\t\t\t\tsubExType = expressiontype.iArgument;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'exfunction':\r\n\t\t\t\t\t\tsubExType = expressiontype.eArgument;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'pattern':\r\n\t\t\t\t\t\tthrow { text: 'Unecpected \"(\"', position };\r\n\t\t\t\t}\r\n\t\t\t\tconst result = this._evaluateExpression(subExType, line, ++position, level + 1);\r\n\t\t\t\tif (exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\texpressionComplete = true;\r\n\t\t\t\tposition = result.position;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlastExpression = '';\r\n\t\t\tif (char === ')') {\r\n\t\t\t\tif (!expressionComplete) {\r\n\t\t\t\t\tif (position === startposition && exType === expressiontype.eArgument) {\r\n\t\t\t\t\t\treturn { text: '', position: ++position }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t\t\t}\r\n\t\t\t\tif (level > 0) {\r\n\t\t\t\t\tposition++;\r\n\t\t\t\t}\r\n\t\t\t\treturn { text: '', position: position };\r\n\t\t\t}\r\n\t\t\tif (char === '.' && exType === expressiontype.eArgument) {\r\n\t\t\t\tposition++;\r\n\t\t\t\tconst evalString = line.substring(position);\r\n\t\t\t\tif (evalString.match(lvn)) {\r\n\t\t\t\t\tconst localname = evalString.match(lvn)![0];\r\n\t\t\t\t\tthis._tokens.push({ type: TokenType.local, name: localname, position: position + this.linePosition });\r\n\t\t\t\t\tposition += localname.length;\r\n\t\t\t\t\tchar = line.charAt(position);\r\n\t\t\t\t\tif (char !== ',' && char !== ')') {\r\n\t\t\t\t\t\tthrow { text: 'Variablereference must stand alone', position }\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (char === ',') {\r\n\t\t\t\tif (!expressionComplete) {\r\n\t\t\t\t\tif (position === startposition && exType === expressiontype.eArgument) {\r\n\t\t\t\t\t\tif (level === 0) {\r\n\t\t\t\t\t\t\treturn { text: '', position: ++position }\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tposition++\r\n\t\t\t\t\t\t\texpressionComplete = false;\r\n\t\t\t\t\t\t\tstartposition = position;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t\t\t}\r\n\t\t\t\tif (exType === expressiontype.Standard || exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t\tposition++\r\n\t\t\t\texpressionComplete = false;\r\n\t\t\t\tstartposition = position;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (expressionComplete) {\r\n\t\t\t\tif (exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t\tif (line.substring(position).match(binoperator)) {\r\n\t\t\t\t\tconst operator = line.substring(position).match(binoperator)![0];\r\n\t\t\t\t\tthis._tokens.push({ name: operator, position: position + this.linePosition, type: TokenType.operator });\r\n\t\t\t\t\tposition += operator.length;\r\n\t\t\t\t\texpressionComplete = false;\r\n\t\t\t\t\tif (operator === '?' || operator === \"'?\") {\r\n\t\t\t\t\t\tconst result = this._evaluatePattern(line, position);\r\n\t\t\t\t\t\tposition = result.position;\r\n\t\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\t\tlastExpression = 'pattern';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst evalString = line.substring(position);\r\n\t\t\ttry {\r\n\t\t\t\tconst provResult = this._checkVar(line, position);\r\n\t\t\t\texpressionComplete = true;\r\n\t\t\t\tposition = provResult.position;\r\n\t\t\t} catch (provResult) {\r\n\t\t\t\tif (evalString.substring(0, 2) === '$$') {\r\n\t\t\t\t\tposition += 2;\r\n\t\t\t\t\t// eslint-disable-next-line no-ex-assign\r\n\t\t\t\t\tprovResult = this._checkEntryRef(line, position, true, true);\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\tposition = provResult.position;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(nonMfunction)) {\r\n\t\t\t\t\tconst functionname = evalString.match(nonMfunction)![0];\r\n\t\t\t\t\tthis._tokens.push({ type: TokenType.nonMfunction, name: functionname, position });\r\n\t\t\t\t\tposition += functionname.length;\r\n\t\t\t\t\tlastExpression = 'exfunction'\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(ifunction)) {\r\n\t\t\t\t\tconst functionname = evalString.match(ifunction)![0].substring(1).toUpperCase();\r\n\t\t\t\t\tposition += functionname.length + 2\r\n\t\t\t\t\tlet longName = functionname;\r\n\t\t\t\t\tif (funcExpansions[functionname] !== undefined) {\r\n\t\t\t\t\t\tlongName = funcExpansions[functionname];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._tokens.push({ name: \"$\" + functionname, position: position - functionname.length - 2, type: TokenType.ifunction, longName: \"$\" + longName });\r\n\t\t\t\t\tconst result = this._checkFunction(longName, line, position);\r\n\t\t\t\t\tposition = result.position;\r\n\t\t\t\t\tlastExpression = '';\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(isv)) {\r\n\t\t\t\t\tconst specialvarname = evalString.match(isv)![0];\r\n\t\t\t\t\tlet longName = specialvarname.toUpperCase();\r\n\t\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._tokens.push({ name: specialvarname, position: position + this.linePosition, type: TokenType.sysvariable, longName });\r\n\t\t\t\t\tposition += specialvarname.length\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(numlit) && evalString.match(numlit)![0] !== '') {\r\n\t\t\t\t\tconst numericliteral = evalString.match(numlit)![0];\r\n\t\t\t\t\tthis._tokens.push({ name: numericliteral, type: TokenType.number, position: position + this.linePosition });\r\n\t\t\t\t\tposition += numericliteral.length;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(strlit)) {\r\n\t\t\t\t\tconst stringlit = evalString.match(strlit)![0];\r\n\t\t\t\t\tthis._tokens.push({ name: stringlit, type: TokenType.string, position: position + this.linePosition });\r\n\t\t\t\t\tposition += stringlit.length;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (char.match(unaryoperator)) {\r\n\t\t\t\t\tthis._tokens.push({ name: char, type: TokenType.operator, position: position + this.linePosition });\r\n\t\t\t\t\tposition++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow { text: 'Unexpected Character ' + char, position }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (expressionComplete) {\r\n\t\t\tif (level > 0) {\r\n\t\t\t\tthrow { text: 'Missing \")\"', position }\r\n\t\t\t}\r\n\t\t\treturn { text: '', position }\r\n\t\t} else {\r\n\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n * Checks Mumps-patterns, throws error when error found in pattern\r\n * @param line: Line to be analyzed\r\n * @param position: startposition\r\n * @param level: is used for nested Patterns\r\n * @returns ErrorInformation, text empty when no error found, position is set behind pattern\r\n */\r\n\tprivate _evaluatePattern(line: string, position: number, level?: number): ErrorInformation {\r\n\t\tlet result = { text: '', position }\r\n\t\tlet patternComplete = false;\r\n\t\tif (level === undefined) {\r\n\t\t\tlevel = 0;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tif (line[position] === '@') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++position);\r\n\t\t\t\tpatternComplete = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (line.substring(result.position).match(repititionCount)) {\r\n\t\t\t\tconst repCount = line.substring(result.position).match(repititionCount)![0];\r\n\t\t\t\tif (repCount !== '') {\r\n\t\t\t\t\tpatternComplete = false;\r\n\t\t\t\t\tresult.position += repCount.length;\r\n\t\t\t\t\tif (line.substring(result.position).match(patcode)) {\r\n\t\t\t\t\t\tpatternComplete = true;\r\n\t\t\t\t\t\tresult.position += line.substring(result.position).match(patcode)![0].length;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (line[result.position] === '(') {\r\n\t\t\t\t\t\tresult = this._evaluatePattern(line, ++result.position, level + 1);\r\n\t\t\t\t\t\tpatternComplete = true;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (line[result.position] === ')') {\r\n\t\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (level > 0) {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t} else if (line[result.position] === ',' && level > 0) {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if (line[result.position] === ')') {\r\n\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t} else if (line[result.position] === ',' && level > 0) {\r\n\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} while (position < line.length)\r\n\t\tif (!patternComplete) {\r\n\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tif (level > 0) {\r\n\t\t\tresult.text = 'Missing \")\"';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t//Extract M-Commands.\r\n\t//Assumes inputLine has extracted comments/spacing/indentation.\r\n\tprivate static _extractCommands(inputObject: LineObject): LineObject {\r\n\r\n\t\tlet tmpFunction: TmpFunction;\r\n\t\tconst tmpFunctionArray: Array<TmpFunction> = [];\r\n\t\t//Divide Routines and Arguments.\r\n\t\tconst splitLine = this._splitCommandsAndArguments(inputObject);\r\n\t\t//Loop, even is function, odd is arguments.\r\n\t\tlet i = 0;\r\n\t\ttmpFunction = { mCommand: '', mPostCondition: '', mArguments: '', cmdPosition: 0, argPosition: 0, pcPosition: 0 }\r\n\t\twhile (i < splitLine.length) {\r\n\t\t\tif (i % 2 === 0) {\r\n\t\t\t\ttmpFunction.mCommand = splitLine[i].command;\r\n\t\t\t\ttmpFunction.cmdPosition = splitLine[i].position;\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttmpFunction.mArguments = splitLine[i].command;\r\n\t\t\t\ttmpFunction.argPosition = splitLine[i].position;\r\n\r\n\t\t\t\t//Custom handler for trailing argument spacing.\r\n\t\t\t\t//Go until splitline hits a non empty val.\r\n\t\t\t\tconst ii = i + 1;\r\n\t\t\t\twhile (ii < splitLine.length) {\r\n\t\t\t\t\tif (splitLine[ii].command === \"\") {\r\n\t\t\t\t\t\tsplitLine.splice(ii, 1);\r\n\t\t\t\t\t\t//tmpFunction.mArguments = tmpFunction.mArguments + \" \";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttmpFunctionArray.push(tmpFunction);\r\n\t\t\t\ttmpFunction = { mCommand: '', mPostCondition: '', mArguments: '', cmdPosition: 0, argPosition: 0, pcPosition: 0 }\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t\t//Last command doesn't always require parameter, so if odd number of pairs, push it.\r\n\t\tif (splitLine.length % 2 !== 0) {\r\n\t\t\ttmpFunction.mCommand = splitLine[splitLine.length - 1].command;\r\n\t\t\ttmpFunction.cmdPosition = splitLine[splitLine.length - 1].position;\r\n\t\t\ttmpFunction.mArguments = '';\r\n\t\t\ttmpFunction.argPosition = inputObject.lineExpression!.length;\r\n\t\t\ttmpFunctionArray.push(tmpFunction);\r\n\t\t}\r\n\r\n\r\n\t\t//Extract and output Post Conditionals.\r\n\t\tconst postConditionFunctionArray = MumpsLineParser._extractPostConditional(tmpFunctionArray);\r\n\t\tif (postConditionFunctionArray.length > 0) {\r\n\t\t\tinputObject.lineRoutines = postConditionFunctionArray;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\r\n\t//Extract Comments.\r\n\tprivate static _extractComment(inputObject: LineObject): LineObject {\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\t//Semicolon identifies comments.\r\n\t\tif (inputLine.search(\";\") >= 0) {\r\n\t\t\tlet isInsideString = false;\r\n\t\t\tfor (let i = 0; i < inputLine.length; i++) {\r\n\t\t\t\tif (inputLine[i] === \";\") {\r\n\t\t\t\t\tif (!isInsideString) {\r\n\t\t\t\t\t\tinputObject.lineExpression = inputLine.substring(0, i);\r\n\t\t\t\t\t\tinputObject.lineComment = { comment: inputLine.substring(i).substring(1), position: i + inputObject.expressionPosition };\r\n\t\t\t\t\t\treturn inputObject;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (inputLine[i] === '\"') {\r\n\t\t\t\t\tisInsideString = !isInsideString;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\r\n\t//Extract Indentation.\r\n\t//Assumes inputLine has extracted comments/spacing.\r\n\tprivate static _extractIndentation(inputObject: LineObject): LineObject {\r\n\r\n\t\tconst lineIndentationArray: string[] = [];\r\n\t\tlet lineIndentation = 0;\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\tlet spacer = '';\r\n\t\tlet i = 0;\r\n\t\tfor (i = 0; i <= inputLine.length; i++) {\r\n\t\t\tconst char = inputLine[i];\r\n\t\t\tif (char === \".\") {\r\n\t\t\t\tif (lineIndentation > 0) {\r\n\t\t\t\t\tlineIndentationArray.push(spacer);\r\n\t\t\t\t}\r\n\t\t\t\tlineIndentation++;\r\n\t\t\t\tspacer = '';\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (char === \" \" || char === \"\\t\") {\r\n\t\t\t\tspacer += char;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (lineIndentation > 0) {\r\n\t\t\tlineIndentationArray.push(spacer);\r\n\t\t\tinputObject.lineExpression = inputLine.substring(i);\r\n\t\t\tinputObject.expressionPosition! += i;\r\n\t\t\tinputObject.lineIndentationArray = lineIndentationArray;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\tprivate static _extractLabel(inputObject: LineObject): LineObject {\r\n\t\tinputObject.lineLabel = '';\r\n\t\tconst inputLine = inputObject.lineExpression;\r\n\t\tinputObject.lineExpression = '';\r\n\t\tif (inputLine.match(label)) {\r\n\t\t\tinputObject.lineLabel = inputLine.match(label)![0];\r\n\t\t}\r\n\t\tconst position = inputObject.lineLabel.length;\r\n\t\tif (position === inputLine.length) {\r\n\t\t\treturn inputObject\r\n\t\t}\r\n\t\tif (!inputLine.charAt(position).match(/[\\s|;]/)) {\r\n\t\t\tinputObject.errorText = 'Unexpected Character' + inputLine.charAt(position);\r\n\t\t\tinputObject.errorPosition = position;\r\n\t\t\treturn inputObject;\r\n\t\t}\r\n\t\tlet i = 0;\r\n\t\tfor (i = position; i <= inputLine.length; i++) {\r\n\t\t\tif (inputLine[i] !== \" \" && inputLine[i] !== \"\\t\") {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tinputObject.lineLeadSpace = inputLine.substring(position, i);\r\n\t\tif (i !== (inputLine.length)) {\r\n\t\t\tinputObject.lineExpression = inputLine.substring(i);\r\n\t\t\tinputObject.expressionPosition = i;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\r\n\t//Extracts Post-Conditionals from Routines, used by extractRoutines.\r\n\tprivate static _extractPostConditional(tmpFunctionArray: TmpFunction[]): TmpFunction[] {\r\n\r\n\t\t//Assign to new variable to truncate Routines.\r\n\t\tconst tmpObject = tmpFunctionArray;\r\n\t\tfor (let i = 0; i < tmpObject.length; i++) {\r\n\t\t\t//Colon indicates Post-Conditionals.\r\n\t\t\tconst tmpIndex = tmpObject[i].mCommand!.indexOf(\":\");\r\n\t\t\tif (tmpIndex > -1) {\r\n\t\t\t\ttmpObject[i].mPostCondition = tmpObject[i].mCommand.substring(tmpIndex + 1);\r\n\t\t\t\ttmpObject[i].mCommand = tmpObject[i].mCommand.substring(0, tmpIndex);\r\n\t\t\t\ttmpObject[i].pcPosition = tmpObject[i].cmdPosition + tmpIndex + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tmpObject;\r\n\t}\r\n\r\n\tprivate static _isEndOfArgument(line: string, position: number): boolean {\r\n\t\tlet isEndOfArgument = false;\r\n\t\tconst char = line[position];\r\n\t\tif (char === undefined || char === \" \" || char === \"\\t\" || char === \";\") { isEndOfArgument = true; }\r\n\t\treturn isEndOfArgument;\r\n\t}\r\n\t/**\r\n * Divde inputString into Label, commands and comments and return corresponding LineObject\r\n * @param inputString\r\n * @returns LineObject\r\n */\r\n\tpublic static parseLine(inputString: string): LineObject {\r\n\r\n\t\tlet tmpObject: LineObject = { lineExpression: inputString, expressionPosition: 0 };\r\n\r\n\t\t//Parsing must be performed sequentially.\r\n\t\ttmpObject = MumpsLineParser._extractLabel(tmpObject);\r\n\t\tif (tmpObject.errorText) {\r\n\t\t\treturn tmpObject;\r\n\t\t}\r\n\t\ttmpObject = MumpsLineParser._extractComment(tmpObject);\r\n\t\ttmpObject = MumpsLineParser._extractIndentation(tmpObject);\r\n\t\ttmpObject = MumpsLineParser._extractCommands(tmpObject);\r\n\r\n\t\t//Line Expression is no longer needed.\r\n\t\ttmpObject.lineExpression = '';\r\n\t\treturn tmpObject;\r\n\t}\r\n\r\n\t//Divide commands and arguments into array, used by extractRoutines.\r\n\tprivate static _splitCommandsAndArguments(inputObject: LineObject): LineComand[] {\r\n\r\n\t\tconst lineCommands: LineComand[] = [];\r\n\t\tlet tmpCursor = 0;\r\n\t\tlet isInsideString = false;\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\tconst start = inputObject.expressionPosition!;\r\n\t\tfor (let i = 0; i < inputLine.length; i++) {\r\n\r\n\t\t\t//Ensure space isn't quoted.\r\n\t\t\tif (inputLine[i] === '\"') {\r\n\t\t\t\tisInsideString = !isInsideString;\r\n\t\t\t}\r\n\t\t\t//Flag spaces/tabs as dividers.\r\n\t\t\tif ((inputLine[i] === \" \" || inputLine[i] === \"\\t\") && !isInsideString) {\r\n\t\t\t\t//If has content, push.\r\n\t\t\t\tif (inputLine.substring(tmpCursor, i).length > 0) {\r\n\t\t\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t\t\t//Otherwise, push empty commands.\r\n\t\t\t\t} else if (inputLine.substring(tmpCursor, i).length === 0 && (inputLine.substring(tmpCursor - 1, tmpCursor) === \" \" || inputLine.substring(tmpCursor - 1, tmpCursor) === \"\\t\")) {\r\n\t\t\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t\t}\r\n\t\t\t\ttmpCursor = i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst i = inputLine.length;\r\n\t\tif (inputLine.substring(tmpCursor, i).length > 0) {\r\n\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t//Gather empty commands from end of line.\r\n\t\t} else if (i === tmpCursor && (inputLine.substring(i - 1, i) === \" \" || inputLine.substring(i - 1, i) === \"/t\")) {\r\n\t\t\tlineCommands.push({ command: '', position: start + tmpCursor });\r\n\t\t}\r\n\t\treturn lineCommands;\r\n\t}\r\n\r\n\tprivate _splitLabelAndParameters(label: string) {\r\n\t\tif (label.indexOf('(') === -1) {\r\n\t\t\tthis._tokens.push({ name: label, position: 0, type: TokenType.label });\r\n\t\t} else {\r\n\t\t\tconst labelparts = label.split('(');\r\n\t\t\tconst labeltext = labelparts[0];\r\n\t\t\tthis._tokens.push({ name: labeltext, position: 0, type: TokenType.label });\r\n\t\t\tconst parameters = labelparts[1].split(')')[0];\r\n\t\t\tconst parameterVars = parameters.split(',');\r\n\t\t\tlet position = labeltext.length + 1\t\t// Position = lengths of Label + trailing \"(\"\r\n\t\t\tfor (let i = 0; i < parameterVars.length; i++) {\r\n\t\t\t\tthis._tokens.push({ name: parameterVars[i], position, type: TokenType.local });\r\n\t\t\t\tposition += parameterVars[i].length + 1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n/*\r\nconst test = new MumpsLineParser();\r\nconst dir = \"x:\\\\\";\r\nlet erg: Array<ErrorInformation> = [];\r\nfs.readdir(dir, function (err, files) {\r\n\t//handling error\r\n\tif (err) {\r\n\t\treturn console.log('Unable to scan directory: ' + err);\r\n\t}\r\n\t//listing all files using forEach\r\n\tfiles.forEach(function (file: string) {\r\n\t\tif (file.substring(file.length - 2) === \".m\") {\r\n\t\t\terg = test.checkFile(dir + file);\r\n\t\t\tconsole.log(file);\r\n\t\t\tif (erg.length) {\r\n\t\t\t\tconsole.log(erg);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\nlet test = new MumpsLineParser();\r\nlet expanded = test.expandCompressFile(\"t:\\\\KTEST93.m\", true);\r\nconsole.log(expanded);\r\nlet lines = expanded.split(\"\\n\");\r\nfor (let i = 0; i < lines.length; i++) {\r\n\tconsole.log(test.expandCompressLine(lines[i], false).lineText);\r\n}\r\n\r\nlet result = test.checkLine('\tS VGZR=$E(YDL(2),5,6)-1 S:VGZR=0 VGZR=12_($E(YDL(2),1,4)-1)');\r\nconsole.log(result);\r\n*/\r\nexport { ifunction, isv, MumpsLineParser }","import * as vscode from 'vscode'\nimport { LineToken, MumpsLineParser, ErrorInformation } from './mumpsLineParser'\nexport default class MumpsParseDb {\n\tprivate static instance: MumpsParseDb | null = null\n\tprivate _linetokens: LineToken[][] = []\n\tprivate _lines: string[] = []\n\tprivate _errorInformation: ErrorInformation[] = []\n\tprivate static _documentName: string = \"\"\n\tprivate static _documentVersion: number = -1\n\tprivate constructor() {\n\t\tthis._linetokens = []\n\t\tthis._errorInformation = []\n\t}\n\tstatic getInstance(document: vscode.TextDocument) {\n\t\tif (!MumpsParseDb.instance) {\n\t\t\tMumpsParseDb.instance = new MumpsParseDb()\n\t\t}\n\t\tif (document.fileName !== MumpsParseDb._documentName || document.version !== MumpsParseDb._documentVersion) {\n\t\t\tMumpsParseDb.instance.updateData(document)\n\t\t\tMumpsParseDb._documentName = document.fileName\n\t\t\tMumpsParseDb._documentVersion = document.version\n\t\t}\n\t\treturn MumpsParseDb.instance;\n\t}\n\tpublic updateData(document: vscode.TextDocument) {\n\t\tthis._lines = []\n\t\tthis._linetokens = []\n\t\tthis._errorInformation = []\n\t\tif (document.languageId === \"mumps\") {\n\t\t\t[this._lines, this._linetokens, this._errorInformation] = new MumpsLineParser().analyzeLines(document.getText())\n\t\t}\n\t}\n\tpublic getLine(line: number): string {\n\t\treturn this._lines[line]\n\t}\n\tpublic getLineTokens(line: number): LineToken[] {\n\t\treturn this._linetokens[line]\n\t}\n\tpublic getDocumentTokens(): LineToken[][] {\n\t\treturn this._linetokens\n\t}\n\tpublic getDocumentErrors(): ErrorInformation[] {\n\t\treturn this._errorInformation\n\t}\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length\n\t}\n}","import * as vscode from 'vscode';\nimport { TokenType, MumpsLineParser } from './mumpsLineParser';\nimport fs = require('fs');\nconst parser = new MumpsLineParser();\nexport default class MumpsReferenceProvider {\n\tprovideReferences(document: vscode.TextDocument, position: vscode.Position): Promise<vscode.Location[] | null | undefined> {\n\t\tconst myToken = parser.getTokenAt(document.lineAt(position).text, position.character);\n\t\tconst result: vscode.Location[] = [];\n\t\tif (myToken !== undefined) {\n\t\t\tlet searchType: TokenType = myToken.type;\n\t\t\tconst searchToken = myToken?.name;\n\t\t\tif (searchType === TokenType.label) {\n\t\t\t\tlet routine = document.fileName.replace(/\\\\/g, '/').split('/').pop();\n\t\t\t\troutine = routine?.split('.')[0].replace('_', '%');\n\t\t\t\tsearchType = TokenType.entryref\n\t\t\t\tconst externalLabel: string = searchToken + \"^\" + routine;\n\t\t\t\t// Check active document for entryrefs\n\t\t\t\tconst docLines: string[] = document.getText().split('\\n');\n\t\t\t\tfor (let i = 0; i < docLines.length; i++) {\n\t\t\t\t\tif (docLines[i].includes(externalLabel) || docLines[i].includes(searchToken)) {\n\t\t\t\t\t\tlet foundPosition = -1;\n\t\t\t\t\t\tfor (; ;) {\n\t\t\t\t\t\t\tconst extPosition = docLines[i].indexOf(externalLabel, foundPosition + 1);\n\t\t\t\t\t\t\tif (extPosition === -1) {\n\t\t\t\t\t\t\t\tfoundPosition = docLines[i].indexOf(searchToken, foundPosition + 1);\n\t\t\t\t\t\t\t\tif (foundPosition === -1) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfoundPosition = extPosition;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst token = parser.getTokenAt(docLines[i], foundPosition + 1)\n\t\t\t\t\t\t\tif (token !== undefined && (token.name === externalLabel || token.name === searchToken) &&\n\t\t\t\t\t\t\t\t(token.type === TokenType.entryref || token.type === TokenType.exfunction)) {\n\t\t\t\t\t\t\t\tresult.push(new vscode.Location(document.uri, new vscode.Range(i, foundPosition, i, foundPosition + token.name.length)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Check all other documents and return result\n\t\t\t\treturn this.getallLabelReferences(result, externalLabel, searchType);\n\t\t\t} else {\n\t\t\t\tif (searchType === TokenType.local || searchType === TokenType.global) {\n\t\t\t\t\treturn this.getallLabelReferences(result, searchToken, searchType);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\t}\n\t/*eslint class-methods-use-this: 0*/\n\tgetallLabelReferences(result: vscode.Location[], searchToken: string, searchType: TokenType): Promise<vscode.Location[]> {\n\t\treturn new Promise(resolve => {\n\t\t\tvscode.workspace.findFiles('*.m').then((files) => {\n\t\t\t\tconst filesToCheck = files.length;\n\t\t\t\tfor (let i = 0; i < filesToCheck; i++) {\n\t\t\t\t\tconst path = files[i].fsPath;\n\t\t\t\t\tfs.readFile(path, 'utf8', (err, content: string) => {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\tif (content.includes(searchToken)) {\n\t\t\t\t\t\t\t\tconst lines = content.split('\\n');\n\t\t\t\t\t\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\t\t\t\t\t\tif (lines[i].includes(searchToken)) {\n\t\t\t\t\t\t\t\t\t\tconst foundPosition = lines[i].indexOf(searchToken);\n\t\t\t\t\t\t\t\t\t\tconst token = parser.getTokenAt(lines[i], foundPosition + 1)\n\t\t\t\t\t\t\t\t\t\tif (token !== undefined && token.name === searchToken &&\n\t\t\t\t\t\t\t\t\t\t\t(token.type === searchType || (token.type === TokenType.exfunction && searchType === TokenType.entryref))) {\n\t\t\t\t\t\t\t\t\t\t\tresult.push(new vscode.Location(vscode.Uri.file(path), new vscode.Range(i, foundPosition, i, foundPosition + token.name.length)));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i === filesToCheck - 1) {\n\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import * as vscode from 'vscode';\nimport { LineToken, TokenType, ErrorInformation } from './mumpsLineParser'\nimport MumpsParseDb from './mumpsParseDb';\n\ntype Subroutines = {\n\t[name: string]: {\n\t\tstartLine: number;\n\t\tendLine: number;\n\t};\n};\n\nexport default class MumpsRoutineSorter {\n\tprivate _linetokens: LineToken[][] = [];\n\tprivate _subroutines: Subroutines = {};\n\tprivate _newSortedLines: string[];\n\tconstructor() {\n\t\tconst editor = vscode.window.activeTextEditor\n\t\tif (editor && editor.document && editor.document.languageId === 'mumps') {\n\t\t\tconst parseDb = MumpsParseDb.getInstance(editor.document)\n\t\t\tthis._linetokens = parseDb.getDocumentTokens()\n\t\t\tconst errors: ErrorInformation[] = parseDb.getDocumentErrors()\n\t\t\tconst document = editor.document;\n\t\t\tlet errorFound = false\n\t\t\tthis._newSortedLines = []\n\t\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\t\tif (errors[i].text !== '') {\n\t\t\t\t\terrorFound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (errorFound) {\n\t\t\t\tvscode.window.showErrorMessage(\"Routine sort aborted - errors found\")\n\t\t\t} else {\n\t\t\t\tlet line = this._lookforNextSubroutineEnd(0)\n\t\t\t\tif (line === -1 || line === this._linetokens.length - 1) {\n\t\t\t\t\tvscode.window.showErrorMessage(\"Routine sort ended - nothing to sort found\")\n\t\t\t\t} else {\n\t\t\t\t\tconst startSortLine = line + 1\n\t\t\t\t\twhile (line !== -1 && line < this._linetokens.length) {\n\t\t\t\t\t\tconst startSubroutine = ++line\n\t\t\t\t\t\tline = this._lookforNextSubroutineEnd(line)\n\t\t\t\t\t\tif (line === -1) break;\n\t\t\t\t\t\tthis._generateSubroutineInfo(startSubroutine, line)\n\t\t\t\t\t}\n\t\t\t\t\tif (Object.keys(this._subroutines).length !== 0) {\n\t\t\t\t\t\tconst subroutineNames = Object.keys(this._subroutines);\n\t\t\t\t\t\tsubroutineNames.sort();\n\t\t\t\t\t\tfor (const name of subroutineNames) {\n\t\t\t\t\t\t\tconst subroutine = this._subroutines[name];\n\t\t\t\t\t\t\tfor (let line = subroutine.startLine; line <= subroutine.endLine; line++) {\n\t\t\t\t\t\t\t\tthis._newSortedLines.push(document.lineAt(line).text)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst lastLineLength = document.lineAt(document.lineCount - 1).text.length\n\t\t\t\t\t\teditor.edit(editBuilder => {\n\t\t\t\t\t\t\teditBuilder.replace(new vscode.Range(startSortLine, 0, document.lineCount - 1, lastLineLength), this._newSortedLines.join(\"\\n\"));\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lookforNextSubroutineEnd(line: number): number {\n\t\tfor (let index = line; index < this._linetokens.length; index++) {\n\t\t\tconst tokens = this._linetokens[index];\n\t\t\tlet subroutineEndFound = false;\n\t\t\tfor (let j = 0; j < tokens.length; j++) {\n\t\t\t\tconst token = tokens[j]\n\t\t\t\tif (token.type === TokenType.intendation) {\n\t\t\t\t\tbreak; // Ignore QUIT etc in indentation-levels > 0\n\t\t\t\t}\n\t\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\t\tconst command = token.longName;\n\t\t\t\t\tif (command === \"FOR\" || command === \"IF\" || command === \"ELSE\") {\n\t\t\t\t\t\tbreak; // Ignore QUIT etc after FOR and IF\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t(command === \"QUIT\" ||\n\t\t\t\t\t\t\tcommand === \"GOTO\" ||\n\t\t\t\t\t\t\tcommand === \"ZGOTO\" ||\n\t\t\t\t\t\t\tcommand === \"HALT\" ||\n\t\t\t\t\t\t\tcommand === \"ZHALT\") &&\n\t\t\t\t\t\ttoken.isPostconditioned === false\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (command === \"GOTO\" || command === \"ZGOTO\") {\n\t\t\t\t\t\t\tlet hasPostcondition = false\n\t\t\t\t\t\t\tfor (let k = j + 1; k < tokens.length; k++) {\n\t\t\t\t\t\t\t\tif (tokens[k].type === TokenType.argPostcondition) {\n\t\t\t\t\t\t\t\t\thasPostcondition = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else if (tokens[k].type === TokenType.keyword) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!hasPostcondition) {\n\t\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (subroutineEndFound) {\n\t\t\t\treturn index\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\tprivate _generateSubroutineInfo(startLine: number, endLine: number) {\n\t\tfor (let i = startLine; i <= endLine; i++) {\n\t\t\tconst tokens = this._linetokens[i]\n\t\t\tif (tokens[0].type === TokenType.label) {\n\t\t\t\tconst label = tokens[0].name\n\t\t\t\tthis._subroutines[label] = { startLine, endLine }\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Remember a new Warning in this._warnings\n\t * @param message Warning message\n\t * @param line Line where th problem was found\n\t * @param startPosition Position inside Line where the problem was found\n\t * @param len Length of variable-name\n\tprivate _addWarning(message: string, line: number, startPosition: number, len: number, severity?) {\n\t\tif (severity === undefined) {\n\t\t\tseverity = vscode.DiagnosticSeverity.Warning;\n\t\t}\n\t\tlet endline = line;\n\t\tlet endPosition = startPosition + len;\n\t\tif (len === -1) { //mark complete rest of line\n\t\t\tendline = line + 1;\n\t\t\tendPosition = 0;\n\t\t}\n\t\tthis._diags.push({\n\t\t\tcode: '',\n\t\t\tmessage,\n\t\t\trange: new vscode.Range(new vscode.Position(line, startPosition), new vscode.Position(endline, endPosition)),\n\t\t\tseverity,\n\t\t\tsource: ''\n\t\t});\n\t}\n\n\tprivate _generateLabelTable(document: vscode.TextDocument) {\n\t\tthis._labelTable = {};\n\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\tconst line = document.lineAt(i);\n\t\t\tconst lineInfo: LineInformation = this._parser.analyzeLine(line.text);\n\t\t\tif (lineInfo.tokens.length > 0 && lineInfo.tokens[0].type === TokenType.label) {\n\t\t\t\tthis._labelTable[lineInfo.tokens[0].name] = i;\n\t\t\t}\n\t\t}\n\t}\n\t*/\n}\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\nexport default class MumpsSignatureHelpProvider {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tprovideSignatureHelp(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenSignature();\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\nimport { TokenType, MumpsLineParser } from './mumpsLineParser';\nconst parser = new MumpsLineParser();\nimport { definitionsArray } from './language-definitions';\nconst definitions = {};\nimport fs = require('fs');\nimport path = require('path');\nconst Uri = vscode.Uri;\nconst EXTENSIONS = ['.m', '.int', '.zwr', '.M', '.INT', '.ZWR'];\nconst cache: { fsPath: string, text: string } = { fsPath: \"\", text: \"\" };\ninterface LocationInfo { location: vscode.Location, commentText: string, labelLine: string }\ninterface ParameterDefinition {\n\tname: string,\n\ttype: string,\n\tdescription?: string\n\toptional?: boolean\n}\ninterface TokenDefinition {\n\tname: string,\n\ttype: string,\n\tabbreviation?: string,\n\tcommentText?: string,\n\tdescription: string,\n\tparameters?: ParameterDefinition[],\n\treturns?: { type: string }\n\tlocation?: vscode.Location\n}\ninterface TokenData {\n\tname: string,\n\tparameters: vscode.ParameterInformation[],\n\tdescription: string\n}\nfunction addDefinition(name: string, definition: TokenDefinition) {\n\tif (!definitions[name]) {\n\t\tdefinitions[name] = [definition];\n\t} else {\n\t\tdefinitions[name].push(definition);\n\t}\n}\nif (Object.keys(definitions).length === 0) {\n\tfor (const definition of definitionsArray) {\n\t\taddDefinition(definition.name, definition);\n\t\tif (definition.abbreviation) {\n\t\t\taddDefinition(definition.abbreviation, definition);\n\t\t}\n\t}\n}\nexport class MumpsTokenHelper {\n\tprivate _document: vscode.TextDocument;\n\tprivate _position: vscode.Position;\n\tconstructor(document: vscode.TextDocument, position: vscode.Position) {\n\t\tthis._document = document;\n\t\tthis._position = position;\n\t}\n\tprivate _getText(uri: vscode.Uri) {\n\t\tif (uri === this._document.uri) {\n\t\t\treturn this._document.getText();\n\t\t}\n\t\tif (uri.fsPath === cache.fsPath) {\n\t\t\treturn cache.text;\n\t\t}\n\t\ttry {\n\t\t\tcache.text = fs.readFileSync(uri.fsPath, 'utf8');\n\t\t\tcache.fsPath = uri.fsPath;\n\t\t\treturn cache.text;\n\t\t} catch (e) {\n\t\t\treturn '';\n\t\t}\n\t}\n\tpublic getTokenSignature(): vscode.SignatureHelp | undefined {\n\t\tconst line = this._document.lineAt(this._position);\n\t\tif (!line) {\n\t\t\treturn;\n\t\t}\n\t\tconst text = line.text;\n\t\tconst myToken = this._getFunctionToken(text);\n\t\tif (myToken === undefined || (myToken.type !== TokenType.ifunction && myToken.type !== TokenType.exfunction)) {\n\t\t\treturn;\n\t\t}\n\t\tconst definition = this.getTokenData(myToken.name, myToken.type);\n\t\tif (!definition) {\n\t\t\treturn;\n\t\t}\n\t\tconst help = new vscode.SignatureHelp();\n\t\thelp.signatures = [MumpsTokenHelper.convertDefinition(definition)];\n\t\thelp.activeSignature = 0;\n\t\thelp.activeParameter = MumpsTokenHelper._calculateActiveParameter(line.text, myToken.position + myToken.name.length, this._position.character);\n\t\treturn help;\n\t}\n\tpublic getTokenHoverInfo(): vscode.Hover | undefined {\n\t\tconst myToken = parser.getTokenAt(this._document.lineAt(this._position).text, this._position.character);\n\t\tif (myToken === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (myToken.type === TokenType.exfunction || myToken.type === TokenType.ifunction ||\n\t\t\tmyToken.type === TokenType.entryref || myToken.type === TokenType.keyword) {\n\t\t\tconst definition = this.getTokenData(myToken.name, myToken.type);\n\t\t\tif (!definition) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (definition.parameters) {\n\t\t\t\tdefinition.name += \"(\";\n\t\t\t\tfor (let i = 0; i < definition.parameters.length; i++) {\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tdefinition.name += \",\";\n\t\t\t\t\t}\n\t\t\t\t\tdefinition.name += definition.parameters[i].name;\n\t\t\t\t}\n\t\t\t\tdefinition.name += \")\";\n\t\t\t}\n\t\t\tconst snippet = { language: 'mumps', value: definition.name };\n\t\t\treturn new vscode.Hover([snippet, definition.commentText || definition.description]);\n\t\t}\n\t}\n\tprivate static _calculateActiveParameter(lineText: string, parametersStartIndex: number, insertIndex: number) {\n\t\tlet active = 0;\n\t\tlet depth = 0;\n\t\tlet isInsideString = false;\n\t\tfor (let i = parametersStartIndex + 1; i < insertIndex; i++) {\n\t\t\tconst char = lineText.charAt(i);\n\t\t\tif (char === '(' && !isInsideString) {\n\t\t\t\tdepth++;\n\t\t\t} else if (char === ')' && !isInsideString) {\n\t\t\t\tdepth--;\n\t\t\t} else if (char === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t} else if (char === ',' && depth === 0 && !isInsideString) {\n\t\t\t\tactive++;\n\t\t\t}\n\t\t}\n\t\treturn active;\n\t}\n\tpublic getTokenRefLocation(): vscode.Location | undefined {\n\t\tconst myToken = parser.getTokenAt(this._document.lineAt(this._position).text, this._position.character);\n\t\tif (myToken === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (myToken.type === TokenType.entryref || myToken.type === TokenType.exfunction) {\n\t\t\tconst tokendata = this.getTokenData(myToken.name, myToken.type);\n\t\t\tif (tokendata) {\n\t\t\t\treturn tokendata.location;\n\t\t\t}\n\t\t}\n\t}\n\n\t// get Information for given function or keyword\n\tpublic getTokenData(functionName: string, functionType: TokenType): TokenDefinition | undefined {\n\t\tif (functionType === TokenType.ifunction || functionType === TokenType.keyword) {\n\t\t\tconst matches = definitions[functionName.toUpperCase()];\n\t\t\tif (matches) {\n\t\t\t\tfor (const definition of matches) {\n\t\t\t\t\tif (definition.type !== 'function' && definition.type !== \"command\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\treturn Object.assign({}, definition);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (functionType === TokenType.exfunction || functionType === TokenType.entryref) {\n\t\t\tconst locationInfo = this.getPositionForLabel(functionName);\n\t\t\tif (locationInfo) {\n\t\t\t\treturn MumpsTokenHelper._extractDefinition(locationInfo);\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\tpublic static convertDefinition(definition: TokenDefinition): vscode.SignatureInformation {\n\t\tconst data: TokenData = {\n\t\t\tname: \"\",\n\t\t\tdescription: \"\",\n\t\t\tparameters: []\n\t\t}\n\t\tdata.description = definition.description;\n\t\tif (definition.parameters) {\n\t\t\tdata.name = definition.name + '(';\n\t\t\tfor (let i = 0; i < definition.parameters.length; i++) {\n\t\t\t\tconst parameter = definition.parameters[i];\n\t\t\t\tlet description = parameter.optional ? '(optional) ' : '';\n\t\t\t\tdescription += parameter.description || parameter.name;\n\t\t\t\tdata.parameters.push(new vscode.ParameterInformation(parameter.name, description));\n\t\t\t\tif (parameter.optional) {\n\t\t\t\t\tdata.name += '[';\n\t\t\t\t}\n\t\t\t\tdata.name += (i === 0 ? '' : ',');\n\t\t\t\tdata.name += parameter.name + ':' + parameter.type;\n\t\t\t\tif (parameter.optional) {\n\t\t\t\t\tdata.name += ']';\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.name += ')';\n\t\t\tif (definition.returns) {\n\t\t\t\tdata.name += ':' + definition.returns;\n\t\t\t}\n\t\t}\n\t\tconst signature = new vscode.SignatureInformation(data.name, data.description);\n\t\tsignature.parameters = data.parameters;\n\t\treturn signature;\n\t}\n\tpublic getPositionForLabel(label: string): LocationInfo | undefined {\n\t\tlet fileUri = this._document.uri;\n\t\tlet nakedLabel = label.split(\"^\")[0];\n\t\tlet offset = 0;\n\t\tlet labelLine = \"\";\n\t\tif (nakedLabel.split(\"+\")[1] !== undefined) {\n\t\t\toffset = parseInt(label.split(\"+\")[1]);\n\t\t\tnakedLabel = nakedLabel.split(\"+\")[0];\n\t\t}\n\t\tif (label.indexOf(\"^\") !== -1) {\n\t\t\tlet fileName = label.split(\"^\")[1];\n\t\t\tif (fileName.charAt(0) === '%') {\n\t\t\t\tfileName = '_' + fileName.substring(1);\n\t\t\t}\n\t\t\tlet fullPath = path.resolve(this._document.uri.fsPath, '../' + fileName);\n\t\t\tfor (const extension of EXTENSIONS) {\n\t\t\t\tconst extendedPath = fullPath + extension;\n\t\t\t\tif (fs.existsSync(extendedPath)) {\n\t\t\t\t\tfullPath = extendedPath;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfileUri = Uri.file(fullPath);\n\t\t}\n\t\tconst lines: string[] = this._getText(fileUri).split(\"\\n\");\n\t\tlet commentText = \"\";\n\t\tlet i = 0;\n\t\tconst labelLength = nakedLabel.length;\n\t\tfor (i = 0; i < lines.length; i++) {\n\t\t\tif (labelLength === 0 || (lines[i].startsWith(nakedLabel) && (lines[i].length === labelLength || lines[i][labelLength].match(/(;|\\s|\\()/) !== null))) {\n\t\t\t\tlabelLine = lines[i];\n\t\t\t\tcommentText += lines[i] + \"\\n\";\n\t\t\t\tfor (let j = i - 1; j > 0; j--) {\n\t\t\t\t\tif (lines[j].length === 0 || lines[j].match(/^\\s*;/)) {\n\t\t\t\t\t\tcommentText += lines[j] + \"\\n\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (commentText.length > 0) {\n\t\t\tcommentText = commentText.split(\"\\n\").reverse().join(\"\\n\")\n\t\t\treturn {\n\t\t\t\tcommentText,\n\t\t\t\tlocation: new vscode.Location(fileUri, new vscode.Position(i + offset, 0)),\n\t\t\t\tlabelLine\n\t\t\t};\n\t\t}\n\t\treturn;\n\t}\n\tprivate static _extractDefinition(locationInfo: LocationInfo): TokenDefinition | undefined {\n\t\tconst definition: TokenDefinition = {\n\t\t\tname: '',\n\t\t\ttype: 'function',\n\t\t\tcommentText: '',\n\t\t\tdescription: '',\n\t\t\treturns: { type: '' },\n\t\t\tlocation: locationInfo.location\n\t\t};\n\t\tconst labelLines = locationInfo.commentText;\n\t\tdefinition.commentText = labelLines\n\t\tconst definitionRegex = /^([%A-Z][A-Z0-9]*)(\\((,?[%A-Z][A-Z0-9]*)+\\))?/i;\n\t\tconst result = definitionRegex.exec(locationInfo.labelLine);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\t\tdefinition.name = result[1];\n\t\tif (labelLines.indexOf(';')) {\n\t\t\tdefinition.commentText = labelLines.substring(labelLines.indexOf(';') + 1);\n\t\t}\n\t\tlet parameterNames: string[] = [];\n\t\tconst parametersByName = {};\n\t\tif (result[2] !== undefined) {\n\t\t\tparameterNames = result[2].substring(1, result[2].length - 1).split(',')\n\t\t\tdefinition.parameters = [];\n\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\n\t\t\t\tdefinition.parameters.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: parameterNames[i],\n\t\t\t\t\t\ttype: 'any'\n\t\t\t\t\t});\n\t\t\t\tparametersByName[parameterNames[i]] = definition.parameters.length - 1;\n\t\t\t}\n\t\t}\n\t\tif (labelLines !== \"\") {\n\t\t\tconst description = labelLines.match(/DESCRIPTION:.*/i)\n\t\t\tif (description !== null) { definition.description = description[0]; }\n\n\t\t\tfor (const param in parametersByName) {\n\t\t\t\tconst paramDescription = labelLines.match(new RegExp(\"\\\\s\" + param + \"(\\\\(.*\\\\))?:.*\", 'i'))\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tif (paramDescription !== null) { definition.parameters![parametersByName[param]].description = paramDescription[0] }\n\t\t\t}\n\t\t}\n\t\treturn definition;\n\t}\n\tprivate _getFunctionToken(lineText: string) {\n\t\tlet depth = 1;\n\t\tlet index: number;\n\t\tconst linePosition = this._position.character;\n\t\tfor (index = linePosition - 1; index > 0 && depth > 0; index--) {\n\t\t\tconst char = lineText.charAt(index);\n\t\t\tif (char === ')') {\n\t\t\t\tdepth++;\n\t\t\t} else if (char === '(') {\n\t\t\t\tdepth--;\n\t\t\t}\n\t\t}\n\t\tif (depth > 0 || index <= 0) {\n\t\t\treturn;\n\t\t}\n\t\treturn parser.getTokenAt(lineText, index);\n\t}\n}\n\n","module.exports = require(\"vscode\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["Object","defineProperty","exports","value","DebugSession","ErrorDestination","MemoryEvent","InvalidatedEvent","ProgressEndEvent","ProgressUpdateEvent","ProgressStartEvent","CapabilitiesEvent","LoadedSourceEvent","ModuleEvent","BreakpointEvent","ThreadEvent","OutputEvent","ExitedEvent","TerminatedEvent","InitializedEvent","ContinuedEvent","StoppedEvent","CompletionItem","Module","Breakpoint","Variable","Thread","StackFrame","Scope","Source","protocol_1","messages_1","runDebugAdapter_1","url_1","constructor","name","path","id","origin","data","this","sourceReference","adapterData","reference","expensive","variablesReference","i","nm","src","ln","col","source","line","column","ref","indexedVariables","namedVariables","verified","e","setId","label","start","length","Event","reason","threadId","exceptionText","super","body","text","allThreadsContinued","restart","exitCode","output","category","undefined","breakpoint","module","capabilities","progressId","title","message","areas","stackFrameId","memoryReference","offset","count","ProtocolServer","obsolete_debuggerLinesAndColumnsStartAt1","obsolete_isServer","linesAndColumnsStartAt1","_debuggerLinesStartAt1","_debuggerColumnsStartAt1","_debuggerPathsAreURIs","_clientLinesStartAt1","_clientColumnsStartAt1","_clientPathsAreURIs","_isServer","on","shutdown","error","setDebuggerPathFormat","format","setDebuggerLinesStartAt1","enable","setDebuggerColumnsStartAt1","setRunAsServer","run","debugSession","runDebugAdapter","_isRunningInline","setTimeout","process","exit","sendErrorResponse","response","codeOrMessage","variables","dest","User","msg","showUser","Telemetry","sendTelemetry","success","formatPII","sendResponse","runInTerminalRequest","args","timeout","cb","sendRequest","dispatchRequest","request","Response","command","arguments","linesStartAt1","columnsStartAt1","pathFormat","initializeResponse","initializeRequest","launchRequest","attachRequest","disconnectRequest","terminateRequest","restartRequest","setBreakPointsRequest","setFunctionBreakPointsRequest","setExceptionBreakPointsRequest","configurationDoneRequest","continueRequest","nextRequest","stepInRequest","stepOutRequest","stepBackRequest","reverseContinueRequest","restartFrameRequest","gotoRequest","pauseRequest","stackTraceRequest","scopesRequest","variablesRequest","setVariableRequest","setExpressionRequest","sourceRequest","threadsRequest","terminateThreadsRequest","evaluateRequest","stepInTargetsRequest","gotoTargetsRequest","completionsRequest","exceptionInfoRequest","loadedSourcesRequest","dataBreakpointInfoRequest","setDataBreakpointsRequest","readMemoryRequest","writeMemoryRequest","disassembleRequest","cancelRequest","breakpointLocationsRequest","setInstructionBreakpointsRequest","customRequest","_exception","_stack","stack","supportsConditionalBreakpoints","supportsHitConditionalBreakpoints","supportsFunctionBreakpoints","supportsConfigurationDoneRequest","supportsEvaluateForHovers","supportsStepBack","supportsSetVariable","supportsRestartFrame","supportsStepInTargetsRequest","supportsGotoTargetsRequest","supportsCompletionsRequest","supportsRestartRequest","supportsExceptionOptions","supportsValueFormattingOptions","supportsExceptionInfoRequest","supportTerminateDebuggee","supportsDelayedStackTraceLoading","supportsLoadedSourcesRequest","supportsLogPoints","supportsTerminateThreadsRequest","supportsSetExpression","supportsTerminateRequest","supportsDataBreakpoints","supportsReadMemoryRequest","supportsDisassembleRequest","supportsCancelRequest","supportsBreakpointLocationsRequest","supportsClipboardContext","supportsSteppingGranularity","supportsInstructionBreakpoints","supportsExceptionFilterOptions","convertClientLineToDebugger","convertDebuggerLineToClient","convertClientColumnToDebugger","convertDebuggerColumnToClient","convertClientPathToDebugger","clientPath","uri2path","path2uri","convertDebuggerPathToClient","debuggerPath","platform","test","toLowerCase","substr","replace","encodeURI","uri","URL","pathname","toString","sourceUri","s","decodeURIComponent","excludePII","_formatPIIRegexp","match","paramName","hasOwnProperty","Handles","startHandle","START_HANDLE","_handleMap","Map","_nextHandle","reset","create","handle","set","get","dflt","InternalLogger","fs","logger_1","getFormattedTimeString","d","Date","_padZeroes","String","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","minDesiredLength","numberToPad","repeat","slice","logCallback","isServer","beforeExitCallback","dispose","_logCallback","_logToConsole","_minLogLevel","LogLevel","Warn","disposeCallback","signal","code","setup","options","consoleMinLogLevel","_prependTimestamp","prependTimestamp","logFilePath","isAbsolute","handleError","err","sendLog","Error","promises","mkdir","dirname","recursive","log","_logFileStream","createWriteStream","logDateTime","setupShutdownListeners","timeAndDateStamp","getUTCFullYear","getUTCMonth","getUTCDate","Verbose","removeShutdownListeners","removeListener","Promise","resolve","end","level","Stop","logFn","console","warn","trimLastNewline","write","endsInNewline","event","LogOutputEvent","logger","Logger","internalLogger_1","debugSession_1","_pendingLogQ","Log","_write","verbose","_currentLogger","disposeP","push","_logFilePath","_logFilePathFromInit","then","logQ","forEach","item","init","logToConsole","str","LoggingDebugSession","obsolete_logFilePath","inStream","outStream","sendEvent","objectToLog","doNotLogOutput","JSON","stringify","enumerable","loggingDebugSession_1","handles_1","Message","type","seq","request_seq","ee","Emitter","_event","listener","thisArg","result","_listener","_this","fire","call","hasListener","EventEmitter","_sendMessage","_sequence","_pendingRequests","onDidSendMessage","handleMessage","clb","delete","_writableStream","_rawData","Buffer","alloc","_handleData","_emitEvent","resume","stop","_send","keys","timer","clearTimeout","emit","typ","json","byteLength","concat","_contentLength","parse","idx","indexOf","TWO_CRLF","lines","split","pair","Net","port","argv","val","index","array","portMatch","exec","parseInt","createServer","socket","session","listen","stdin","stdout","Subject","waiters","prototype","wait","self","waiter","promise","resolved","noRemove","pos","splice","isFinite","notify","pop","notifyAll","dbFile","localRoutinesPath","globalDirectoryProvider","MumpsGlobalProvider","getInstance","context","MUMPS_MODE","language","scheme","mumpsDiagnostics","vscode","languages","createDiagnosticCollection","storage","storageUri","fsPath","existsSync","mkdirSync","subscriptions","registerCompletionItemProvider","wsState","workspaceState","commands","registerCommand","autoSpaceEnter","autoSpaceTab","window","showInputBox","placeHolder","node","getMoreNodes","refresh","search","debug","registerDebugConfigurationProvider","registerDebugAdapterDescriptorFactory","InlineDebugAdapterFactory","registerHoverProvider","registerDefinitionProvider","registerEvaluatableExpressionProvider","registerSignatureHelpProvider","registerDocumentSymbolProvider","registerDocumentSemanticTokensProvider","MumpsHighlighter","SemanticTokens","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","registerReferenceProvider","registerFoldingRangeProvider","registerCodeActionsProvider","registerTreeDataProvider","onDidChangeActiveTextEditor","editor","triggerUpdateDiagnostics","document","workspace","onDidChangeTextDocument","onDidOpenTextDocument","createDebugAdapterDescriptor","DebugAdapterInlineImplementation","collection","workspaceFolders","definitionsArray","renderLine","inputObject","tmpLine","inputLine","lineLabel","lineLeadSpace","appendLabel","tmpIndentation","lineIndentationArray","appendIndentation","lineRoutines","mCommand","mPostCondition","mArguments","appendRoutines","lineComment","appendComment","activeTextEditor","selection","active","currentLine","lineAt","parsedLine","MumpsLineParser","parseLine","newLine","character","edit","editBuilder","Range","with","parsed","cmds","lineContainsNoParamDo","insert","charAt","eb","_document","provideCodeActions","range","token","_parseDb","diagnostics","map","diagnostic","fix","CodeAction","CodeActionKind","Empty","parts","errorCode","_actualParameter","_actualDiagnostic","_removeNewVariable","_varNotNewed","QuickFix","WorkspaceEdit","diagRange","startPosition","endPosition","tokens","getLineTokens","lineContent","getLine","positionAfterToken","position","j","TokenType","keyword","longName","Position","subroutineStartLine","_getSubroutineStart","local","bracketPosition","endReplace","_getfixedNew","lineCount","getLineCount","varStartPosition","comment","isPostconditioned","sort","varString","join","parser","state","doExpand","filename","fileName","update","getText","lastLineLength","info","expandCompressLine","errorText","lineText","LineStatus","labeldb","_labelsReady","_dbfile","_refreshLabelDB","provideCompletionItems","status","lineStatus","noJumplabel","startString","cmd","pcPosition","substring","lastIndex","lastIndexOf","entryref","jumplabel","argPosition","getLineStatus","_refreshLocalLabels","completionItems","replaceRange","_findLabel","db","labels","routine","routines","writeFileSync","readFile","_labelDB","dbChanged","findFiles","files","_filesToCheck","stat","stats","_checkReady","ms","mtimeMs","size","_refreshFileLabels","writeFile","showErrorMessage","existingLabels","filter","existingLabelsMap","labelsinDocumentChanged","firstLineLabel","has","labelMatch","labelName","labelLine","existingLabel","updatedLabels","labelItem","content","startstring","list","hitlist","localLabels","getLabels","sortText","suchstring","startsWith","routinepart","detail","resolveDebugConfiguration","folder","config","languageId","program","stopOnEntry","hostname","showInformationMessage","connectState","VariableType","MumpsConnect","_socket","Socket","_breakpointId","_logging","_singleVar","_singleVarContent","_lastError","_commandQueue","_connectState","disconnected","_readedData","_mVars","system","_globals","_mStack","_activeBreakpoints","_breakPoints","_errorLines","_hints","internals","checkEvents","_hostname","_port","reject","connect","_log","executeCommand","waitingforStart","chunk","n","processLine","varname","vartype","waitingForVars","waitingForBreakpoints","waitingForSingleVar","waitingForErrorReport","waitingForHints","waitingForGlobals","variableType","verifyBreakpoints","waitingForSingleVarContent","moreToFollow","indicator","hasChildren","isDefined","writeln","shift","unshift","sendBreakpoint","file","onOff","condition","stopAtStart","requestBreakpoints","step","disconnect","startFrame","endFrame","frames","Array","fileposition","convertMumpsPosition","Math","min","setBreakPoint","breakpoints","confirmedBreakpoints","newBreakpoint","existingBreakpoint","find","bp","clearBreakPoint","bps","findIndex","clearBreakpoints","merk","internalBp","normalizeDrive","getGlobals","searchInGlobal","gblsCompleteListener","getVariables","checkRoutine","ErrorreportReceived","errorLines","includes","searchLabel","lineInfo","analyzeLine","k","getSingleVar","expression","reply","indexCount","bases","varType","SingleVarReceived","singleVar","singleVarContent","mumpsposition","mumpsstatus","filePosition","positionstring","showNotFound","getLocalRoutinesPath","getWworkspaceFolder","filecontent","readFileSync","startlabel","labelRegexp","RegExp","labelFound","MUMPSDIAGNOSTICS","MumpsDebugSession","_variableHandles","_variableBases","_configurationDone","_localScope","_systemScope","_program","_mconnect","THREAD_ID","activeDebugConsole","append","appendLine","completionTriggerCharacters","setLocalRoutinesPath","setMconnect","catch","actualBreakpoints","threads","levels","stk","stackFrames","f","createSource","totalFrames","scopes","insertVariable","varReference","varId","varObject","varparts","varBase","lastVar","lastRef","actualVar","varAnalyze","_checkVars","dummyVar","returnVar","actualReference","continue","varReply","sourceLines","filePath","basename","statVariable","trashlength","description","exceptionId","breakMode","details","typeName","indexcount","klammerpos","countKomma","provideDefinition","MumpsTokenHelper","getTokenRefLocation","QuitState","symbols","_linetokens","_errorInformation","_diags","_variablesToBeIgnored","_enableVariableCheck","_subroutines","_labelTable","_routine","startLine","endLine","parameters","_level","_lineWithDo","_isBehindQuit","_startUnreachable","_activeSubroutine","getDocumentTokens","getDocumentErrors","noQuit","configuration","getConfiguration","mumps","variablesToBeIgnoredAtNewCheck","enableVariableCheck","clear","_generateLabelTable","errorInformation","_addWarning","DiagnosticSeverity","_checkLine","_addSymbol","analyzeSubroutine","_varStates","_levelExclusiveNew","isParameter","parameterPosition","intendationFound","intendation","newLevel","_reduceIntendationLevel","anyVariablesNewed","containsExclusions","_checkNewed","sysvariable","isExcludedVariable","varName","varState","isExcluded","newedAtLevel","newedAtLine","newedAtPostion","Warning","_checkVariableUsage","key","isUsed","_isIgnoredVariable","isNewed","len","severity","endline","ifFlag","_removeQuits","tokenId","_checkUnreachable","hasArguments","hasPostcondition","_labelExists","argPostcondition","behindLevelQuit","behindQuit","expectedLevel","exfunction","isBehindQuit","lineTokens","variable","isIgnoredVariable","found","memLine","memPosition","methodRange","Location","SymbolInformation","SymbolKind","Function","provideDocumentSymbols","endPostionLine","DIVIDERLINE","makeSignature","Signature","parameterString","element","InsertPosition","translate","MumpsEvalutableExpressionProvider","provideEvaluatableExpression","getExpression","EvaluatableExpression","isInsideString","char","_foldingRanges","provideFoldingRanges","parseDb","startSubroutine","_lookforNextSubroutineEnd","_generateFoldingInfo","_separateCommentsandCode","subroutineEndFound","subroutineName","subroutine","commentStart","commentLines","formatDocumentLine","lineNumber","textEdits","TextEdit","endsWith","endSpace","replacementString","dotPosition","dotCount","spaceCount","provideDocumentFormattingEdits","provideDocumentRangeFormattingEdits","onDidChangeTreeData","_onDidChangeTreeData","instance","searchFor","globalName","searchNode","GlobalNode","TreeItemCollapsibleState","None","getChildren","trailingPara","isNaN","parseFloat","ending","Expanded","mconnect","getTreeItem","globalNodes","nodes","contextValue","isCollapsed","Collapsed","TreeItem","collapsibleState","tokentypes","SemanticTokensLegend","provideDocumentSemanticTokens","documentTokens","tokensBuilder","SemanticTokensBuilder","t","build","provideHover","getTokenHoverInfo","lvn","gvn","isv","ifunction","nonMfunction","routineref","numlit","strlit","binoperator","unaryoperator","patcode","repititionCount","openkeywords","usekeywords","closekeywords","jobkeywords","tstartkeywords","cmdExpansions","funcExpansions","isvExpansions","cmdParams","funcParams","_tokens","linePosition","checkFile","errlist","checkLines","checkLine","_splitLabelAndParameters","toUpperCase","cmdPosition","longcmd","_checkCommand","analyzeLines","input","errors","linetokens","expandCompressFile","cmdCompressions","shortCommand","funcCompressions","shortFunction","isvCompressions","shortIsv","outline","errorinfo","outText","posCorrector","checkName","getTokenAt","_checkEntryRefAndPostcondition","withParams","_checkEntryRef","_evaluateExpression","isUserfunction","tokentype","merkpos","_checkVar","globalOk","indexOk","isExluded","indexFound","globalFound","indirectionFound","varFound","global","provResult","_checkBreak","_checkKeyword","keywords","_checkOUC","braceComplete","_isEndOfArgument","_checkFor","argNumber","_checkJobKeyword","stringlit","_checkJob","_checkKill","_checkLock","isLock","_checkMerge","_checkNew","_checkRead","mat","starDetected","_checkSet","isBraced","savePosition","varResult","functionname","_checkFunction","_checkTstart","_checkView","_checkWrite","_checkWriteSocket","fname","maxparams","paramCount","_checkXecute","_checkZbreak","_checkZprint","_checkZstep","para","postcondPossible","postcondition","argFormat","parameter","argCount","longfunc","params","minArguments","minparams","formats","exType","expressionComplete","startposition","lastExpression","subExType","evalString","localname","operator","_evaluatePattern","specialvarname","numericliteral","number","string","patternComplete","repCount","_extractCommands","tmpFunction","tmpFunctionArray","splitLine","_splitCommandsAndArguments","ii","lineExpression","postConditionFunctionArray","_extractPostConditional","_extractComment","expressionPosition","_extractIndentation","lineIndentation","spacer","_extractLabel","errorPosition","tmpObject","tmpIndex","isEndOfArgument","inputString","lineCommands","tmpCursor","labelparts","labeltext","parameterVars","MumpsParseDb","_lines","_documentName","version","_documentVersion","updateData","provideReferences","myToken","searchType","searchToken","externalLabel","docLines","foundPosition","extPosition","getallLabelReferences","filesToCheck","Uri","errorFound","_newSortedLines","startSortLine","_generateSubroutineInfo","subroutineNames","provideSignatureHelp","getTokenSignature","definitions","EXTENSIONS","cache","addDefinition","definition","abbreviation","_position","_getText","_getFunctionToken","getTokenData","help","SignatureHelp","signatures","convertDefinition","activeSignature","activeParameter","_calculateActiveParameter","snippet","Hover","commentText","parametersStartIndex","insertIndex","depth","tokendata","location","functionName","functionType","matches","assign","locationInfo","getPositionForLabel","_extractDefinition","optional","ParameterInformation","returns","signature","SignatureInformation","fileUri","nakedLabel","fullPath","extension","extendedPath","labelLength","reverse","labelLines","parameterNames","parametersByName","param","paramDescription","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}